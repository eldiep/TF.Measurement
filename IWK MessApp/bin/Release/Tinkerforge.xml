<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tinkerforge</name>
    </assembly>
    <members>
        <member name="T:Tinkerforge.IPConnection">
            <summary>
            The IPConnection creates a TCP/IP connection to the Brick Daemon.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.ENUMERATION_TYPE_AVAILABLE">
            <summary>
            Device is available (enumeration triggered by user: Enumerate()).
            This enumeration type can occur multiple times for the same device.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.ENUMERATION_TYPE_CONNECTED">
            <summary>
            Device is newly connected (automatically send by Brick after
            establishing a communication connection). This indicates that the
            device has potentially lost its previous configuration and needs
            to be reconfigured.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.ENUMERATION_TYPE_DISCONNECTED">
            <summary>
            Device is disconnected (only possible for USB connection). In this
            case only uid and enumerationType are valid.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.CONNECT_REASON_REQUEST">
            <summary>
            Connection established after request from user.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.CONNECT_REASON_AUTO_RECONNECT">
            <summary>
            Connection after auto-reconnect.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.DISCONNECT_REASON_REQUEST">
            <summary>
            Disconnect was requested by user.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.DISCONNECT_REASON_ERROR">
            <summary>
            Disconnect because of an unresolvable error.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.DISCONNECT_REASON_SHUTDOWN">
            <summary>
            Disconnect initiated by Brick Daemon or WIFI/Ethernet Extension.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.CONNECTION_STATE_DISCONNECTED">
            <summary>
            No connection is established.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.CONNECTION_STATE_CONNECTED">
            <summary>
            A connection to the Brick Daemon or the WIFI/Ethernet Extension is
            established.
            </summary>
        </member>
        <member name="F:Tinkerforge.IPConnection.CONNECTION_STATE_PENDING">
            <summary>
            IP Connection is currently trying to connect.
            </summary>
        </member>
        <member name="E:Tinkerforge.IPConnection.Connected">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.IPConnection.Disconnected">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.#ctor">
            <summary>
            Creates an IP Connection object that can be used to enumerate the
            available devices. It is also required for the constructor of
            Bricks and Bricklets.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.Connect(System.String,System.Int32)">
            <summary>
            Creates a TCP/IP connection to the given *host* and *port*.
            The host and port can point to a Brick Daemon or to a WIFI/Ethernet
            Extension.
            Devices can only be controlled when the connection was established
            successfully.
            Blocks until the connection is established and throws an exception
            if there is no Brick Daemon or WIFI/Ethernet Extension listening
            at the given host and port.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.Disconnect">
            <summary>
            Disconnects the TCP/IP connection from the Brick Daemon or the
            WIFI/Ethernet Extension.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.Authenticate(System.String)">
            <summary>
            Performs an authentication handshake with the connected Brick Daemon or
            WIFI/Ethernet Extension. If the handshake succeeds the connection switches
            from non-authenticated to authenticated state and communication can
            continue as normal. If the handshake fails then the connection gets closed.
            Authentication can fail if the wrong secret was used or if authentication
            is not enabled at all on the Brick Daemon or the WIFI/Ethernet Extension.
            For more information about authentication see
            http://www.tinkerforge.com/en/doc/Tutorials/Tutorial_Authentication/Tutorial.html
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.GetConnectionState">
            <summary>
            Can return the following states:
            - CONNECTION_STATE_DISCONNECTED: No connection is established.
            - CONNECTION_STATE_CONNECTED: A connection to the Brick Daemon or
            the WIFI/Ethernet Extension  is established.
            - CONNECTION_STATE_PENDING: IP Connection is currently trying to
            connect.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.SetAutoReconnect(System.Boolean)">
            <summary>
            Enables or disables auto-reconnect. If auto-reconnect is enabled,
            the IP Connection will try to reconnect to the previously given
            host and port, if the connection is lost.
            Default value is *true*.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.GetAutoReconnect">
            <summary>
            Returns *true* if auto-reconnect is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.SetTimeout(System.Int32)">
            <summary>
            Sets the timeout in milliseconds for getters and for setters for
            which the response expected flag is activated.
            Default timeout is 2500.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.GetTimeout">
            <summary>
            Returns the timeout as set by SetTimeout.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.Enumerate">
            <summary>
            Broadcasts an enumerate request. All devices will respond with an
            enumerate callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.Wait">
            <summary>
            Stops the current thread until Unwait is called.
            This is useful if you rely solely on callbacks for events, if you
            want to wait for a specific callback or if the IP Connection was
            created in a thread.
            Wait and Unwait act in the same way as "acquire" and "release" of
            a semaphore.
            </summary>
        </member>
        <member name="M:Tinkerforge.IPConnection.Unwait">
            <summary>
            Unwaits the thread previously stopped by Wait.
            Wait and Unwait act in the same way as "acquire" and "release" of
            a semaphore.
            </summary>
        </member>
        <member name="T:Tinkerforge.TinkerforgeException">
            <summary>
            Base class for all Tinkerforge exceptions.
            </summary>
        </member>
        <member name="T:Tinkerforge.TimeoutException">
            <summary>
            Used to report timeout errors.
            </summary>
        </member>
        <member name="T:Tinkerforge.AlreadyConnectedException">
            <summary>
            Used to report if <see cref="M:Tinkerforge.IPConnection.Connect(System.String,System.Int32)" /> is
            called on an already connected IPConnection.
            </summary>
        </member>
        <member name="T:Tinkerforge.NotConnectedException">
            <summary>
            Used to report if a method is called on an unconnected IPConnection
            that requires a connected IPConnection.
            </summary>
        </member>
        <member name="T:Tinkerforge.StreamOutOfSyncException">
            <summary>
            Used to report if a stream method call hit an out-of-sync condition.
            </summary>
        </member>
        <member name="T:Tinkerforge.UID">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.UID.#ctor(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.UID.ToInt">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.UID.op_Explicit(Tinkerforge.UID)~System.Int32">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.UID.ToString">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.Device">
            <summary>
            Base class for all Tinkerforge Brick and Bricklet classes.
            </summary>
        </member>
        <member name="M:Tinkerforge.Device.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates the device object with the unique device ID *uid* and adds
            it to the IPConnection *ipcon*.
            </summary>
        </member>
        <member name="M:Tinkerforge.Device.GetAPIVersion">
            <summary>
            Returns the API version (major, minor, revision) of the bindings
            for this device.
            </summary>
        </member>
        <member name="M:Tinkerforge.Device.GetResponseExpected(System.Byte)">
            <summary>
            Returns the response expected flag for the function specified
            by the *functionId* parameter. It is *true* if the function is
            expected to send a response, *false* otherwise.
            For getter functions this is enabled by default and cannot be
            disabled, because those functions will always send a response.
            For callback configuration functions it is enabled by default
            too, but can be disabled via the SetResponseExpected function.
            For setter functions it is disabled by default and can be enabled.
            Enabling the response expected flag for a setter function allows
            to detect timeouts and other error conditions calls of this setter
            as well. The device will then send a response for this purpose.
            If this flag is disabled for a setter function then no response
            is send and errors are silently ignored, because they cannot be
            detected.
            </summary>
        </member>
        <member name="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)">
            <summary>
            Changes the response expected flag of the function specified
            by the function ID parameter. This flag can only be changed
            for setter (default value: *false*) and callback configuration
            functions (default value: *true*). For getter functions it is
            always enabled.
            Enabling the response expected flag for a setter function allows
            to detect timeouts and other error conditions calls of this setter
            as well. The device will then send a response for this purpose.
            If this flag is disabled for a setter function then no response
            is send and errors are silently ignored, because they cannot be
            detected.
            </summary>
        </member>
        <member name="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)">
            <summary>
            Changes the response expected flag for all setter and callback
            configuration functions of this device at once.
            </summary>
        </member>
        <member name="M:Tinkerforge.Device.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Brick/Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickDC">
            <summary>
            Drives one brushed DC motor with up to 28V and 5A (peak)
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_SET_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_CURRENT_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_SET_ACCELERATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_ACCELERATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_SET_PWM_FREQUENCY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_PWM_FREQUENCY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_FULL_BRAKE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_STACK_INPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_EXTERNAL_INPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_CURRENT_CONSUMPTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_ENABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_DISABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_IS_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_SET_MINIMUM_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_MINIMUM_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_SET_DRIVE_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_DRIVE_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_SET_CURRENT_VELOCITY_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_CURRENT_VELOCITY_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_SET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_SEND_TIMEOUT_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_SET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_SPITFP_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_ENABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_DISABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_IS_STATUS_LED_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_PROTOCOL1_BRICKLET_NAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_RESET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.DRIVE_MODE_DRIVE_BRAKE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.DRIVE_MODE_DRIVE_COAST">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.COMMUNICATION_METHOD_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.COMMUNICATION_METHOD_USB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.COMMUNICATION_METHOD_SPI_STACK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.COMMUNICATION_METHOD_CHIBI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.COMMUNICATION_METHOD_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.COMMUNICATION_METHOD_WIFI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.COMMUNICATION_METHOD_ETHERNET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickDC.COMMUNICATION_METHOD_WIFI_V2">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickDC.UnderVoltageCallback">
            <summary>
            This callback is triggered when the input voltage drops below the value set by
            <see cref="M:Tinkerforge.BrickDC.SetMinimumVoltage(System.Int32)" />. The parameter is the current voltage given
            in mV.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickDC.UnderVoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickDC.UnderVoltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickDC.EmergencyShutdownCallback">
            <summary>
            This callback is triggered if either the current consumption
            is too high (above 5A) or the temperature of the driver chip is too high
            (above 175°C). These two possibilities are essentially the same, since the
            temperature will reach this threshold immediately if the motor consumes too
            much current. In case of a voltage below 3.3V (external or stack) this
            callback is triggered as well.
            If this callback is triggered, the driver chip gets disabled at the same time.
            That means, <see cref="M:Tinkerforge.BrickDC.Enable" /> has to be called to drive the motor again.
            <note>
            This callback only works in Drive/Brake mode (see <see cref="M:Tinkerforge.BrickDC.SetDriveMode(System.Byte)" />). In
            Drive/Coast mode it is unfortunately impossible to reliably read the
            overcurrent/overtemperature signal from the driver chip.
            </note></summary>
        </member>
        <member name="T:Tinkerforge.BrickDC.EmergencyShutdownEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickDC.EmergencyShutdown">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickDC.VelocityReachedCallback">
            <summary>
            This callback is triggered whenever a set velocity is reached. For example:
            If a velocity of 0 is present, acceleration is set to 5000 and velocity
            to 10000, the <see cref="E:Tinkerforge.BrickDC.VelocityReachedCallback" /> callback will be triggered after about
            2 seconds, when the set velocity is actually reached.
            <note>
            Since we can't get any feedback from the DC motor, this only works if the
            acceleration (see <see cref="M:Tinkerforge.BrickDC.SetAcceleration(System.Int32)" />) is set smaller or equal to the
            maximum acceleration of the motor. Otherwise the motor will lag behind the
            control value and the callback will be triggered too early.
            </note></summary>
        </member>
        <member name="T:Tinkerforge.BrickDC.VelocityReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickDC.VelocityReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickDC.CurrentVelocityCallback">
            <summary>
            This callback is triggered with the period that is set by
            <see cref="M:Tinkerforge.BrickDC.SetCurrentVelocityPeriod(System.Int32)" />. The parameter is the *current*
            velocity used by the motor.
            The <see cref="E:Tinkerforge.BrickDC.CurrentVelocityCallback" /> callback is only triggered after the set period
            if there is a change in the velocity.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickDC.CurrentVelocityEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickDC.CurrentVelocity">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.SetVelocity(System.Int16)">
            <summary>
            Sets the velocity of the motor. Whereas -32767 is full speed backward,
            0 is stop and 32767 is full speed forward. Depending on the
            acceleration (see <see cref="M:Tinkerforge.BrickDC.SetAcceleration(System.Int32)" />), the motor is not immediately
            brought to the velocity but smoothly accelerated.
            The velocity describes the duty cycle of the PWM with which the motor is
            controlled, e.g. a velocity of 3277 sets a PWM with a 10% duty cycle.
            You can not only control the duty cycle of the PWM but also the frequency,
            see <see cref="M:Tinkerforge.BrickDC.SetPWMFrequency(System.Int32)" />.
            The default velocity is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetVelocity">
            <summary>
            Returns the velocity as set by <see cref="M:Tinkerforge.BrickDC.SetVelocity(System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetCurrentVelocity">
            <summary>
            Returns the *current* velocity of the motor. This value is different
            from <see cref="M:Tinkerforge.BrickDC.GetVelocity" /> whenever the motor is currently accelerating
            to a goal set by <see cref="M:Tinkerforge.BrickDC.SetVelocity(System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.SetAcceleration(System.Int32)">
            <summary>
            Sets the acceleration of the motor. It is given in *velocity/s*. An
            acceleration of 10000 means, that every second the velocity is increased
            by 10000 (or about 30% duty cycle).
            For example: If the current velocity is 0 and you want to accelerate to a
            velocity of 16000 (about 50% duty cycle) in 10 seconds, you should set
            an acceleration of 1600.
            If acceleration is set to 0, there is no speed ramping, i.e. a new velocity
            is immediately given to the motor.
            The default acceleration is 10000.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetAcceleration">
            <summary>
            Returns the acceleration as set by <see cref="M:Tinkerforge.BrickDC.SetAcceleration(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.SetPWMFrequency(System.Int32)">
            <summary>
            Sets the frequency (in Hz) of the PWM with which the motor is driven.
            The possible range of the frequency is 1-20000Hz. Often a high frequency
            is less noisy and the motor runs smoother. However, with a low frequency
            there are less switches and therefore fewer switching losses. Also with
            most motors lower frequencies enable higher torque.
            If you have no idea what all this means, just ignore this function and use
            the default frequency, it will very likely work fine.
            The default frequency is 15 kHz.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetPWMFrequency">
            <summary>
            Returns the PWM frequency (in Hz) as set by <see cref="M:Tinkerforge.BrickDC.SetPWMFrequency(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.FullBrake">
            <summary>
            Executes an active full brake.
            <note type="caution">
            This function is for emergency purposes,
            where an immediate brake is necessary. Depending on the current velocity and
            the strength of the motor, a full brake can be quite violent.
            </note>
            Call <see cref="M:Tinkerforge.BrickDC.SetVelocity(System.Int16)" /> with 0 if you just want to stop the motor.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetStackInputVoltage">
            <summary>
            Returns the stack input voltage in mV. The stack input voltage is the
            voltage that is supplied via the stack, i.e. it is given by a
            Step-Down or Step-Up Power Supply.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetExternalInputVoltage">
            <summary>
            Returns the external input voltage in mV. The external input voltage is
            given via the black power input connector on the DC Brick.
            If there is an external input voltage and a stack input voltage, the motor
            will be driven by the external input voltage. If there is only a stack
            voltage present, the motor will be driven by this voltage.
            <note type="caution">
            This means, if you have a high stack voltage and a low external voltage,
            the motor will be driven with the low external voltage. If you then remove
            the external connection, it will immediately be driven by the high
            stack voltage.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetCurrentConsumption">
            <summary>
            Returns the current consumption of the motor in mA.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.Enable">
            <summary>
            Enables the driver chip. The driver parameters can be configured (velocity,
            acceleration, etc) before it is enabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.Disable">
            <summary>
            Disables the driver chip. The configurations are kept (velocity,
            acceleration, etc) but the motor is not driven until it is enabled again.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.IsEnabled">
            <summary>
            Returns *true* if the driver chip is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.SetMinimumVoltage(System.Int32)">
            <summary>
            Sets the minimum voltage in mV, below which the <see cref="E:Tinkerforge.BrickDC.UnderVoltageCallback" /> callback
            is triggered. The minimum possible value that works with the DC Brick is 6V.
            You can use this function to detect the discharge of a battery that is used
            to drive the motor. If you have a fixed power supply, you likely do not need
            this functionality.
            The default value is 6V.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetMinimumVoltage">
            <summary>
            Returns the minimum voltage as set by <see cref="M:Tinkerforge.BrickDC.SetMinimumVoltage(System.Int32)" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.SetDriveMode(System.Byte)">
            <summary>
            Sets the drive mode. Possible modes are:
            * 0 = Drive/Brake
            * 1 = Drive/Coast
            These modes are different kinds of motor controls.
            In Drive/Brake mode, the motor is always either driving or braking. There
            is no freewheeling. Advantages are: A more linear correlation between
            PWM and velocity, more exact accelerations and the possibility to drive
            with slower velocities.
            In Drive/Coast mode, the motor is always either driving or freewheeling.
            Advantages are: Less current consumption and less demands on the motor and
            driver chip.
            The default value is 0 = Drive/Brake.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetDriveMode">
            <summary>
            Returns the drive mode, as set by <see cref="M:Tinkerforge.BrickDC.SetDriveMode(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.SetCurrentVelocityPeriod(System.Int32)">
            <summary>
            Sets a period in ms with which the <see cref="E:Tinkerforge.BrickDC.CurrentVelocityCallback" /> callback is triggered.
            A period of 0 turns the callback off.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetCurrentVelocityPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickDC.SetCurrentVelocityPeriod(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)">
            <summary>
            The SPITF protocol can be used with a dynamic baudrate. If the dynamic baudrate is
            enabled, the Brick will try to adapt the baudrate for the communication
            between Bricks and Bricklets according to the amount of data that is transferred.
            The baudrate will be increased exponetially if lots of data is send/receieved and
            decreased linearly if little data is send/received.
            This lowers the baudrate in applications where little data is transferred (e.g.
            a weather station) and increases the robustness. If there is lots of data to transfer
            (e.g. Thermal Imaging Bricklet) it automatically increases the baudrate as needed.
            In cases where some data has to transferred as fast as possible every few seconds
            (e.g. RS485 Bricklet with a high baudrate but small payload) you may want to turn
            the dynamic baudrate off to get the highest possible performance.
            The maximum value of the baudrate can be set per port with the function
            <see cref="M:Tinkerforge.BrickDC.SetSPITFPBaudrate(System.Char,System.Int64)" />. If the dynamic baudrate is disabled, the baudrate
            as set by <see cref="M:Tinkerforge.BrickDC.SetSPITFPBaudrate(System.Char,System.Int64)" /> will be used statically.
            The minimum dynamic baudrate has a value range of 400000 to 2000000 baud.
            By default dynamic baudrate is enabled and the minimum dynamic baudrate is 400000.
            .. versionadded:: 2.3.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetSPITFPBaudrateConfig(System.Boolean@,System.Int64@)">
            <summary>
            Returns the baudrate config, see <see cref="M:Tinkerforge.BrickDC.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />.
            .. versionadded:: 2.3.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetSendTimeoutCount(System.Byte)">
            <summary>
            Returns the timeout count for the different communication methods.
            The methods 0-2 are available for all Bricks, 3-7 only for Master Bricks.
            This function is mostly used for debugging during development, in normal operation
            the counters should nearly always stay at 0.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.SetSPITFPBaudrate(System.Char,System.Int64)">
            <summary>
            Sets the baudrate for a specific Bricklet port ('a' - 'd'). The
            baudrate can be in the range 400000 to 2000000.
            If you want to increase the throughput of Bricklets you can increase
            the baudrate. If you get a high error count because of high
            interference (see <see cref="M:Tinkerforge.BrickDC.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)" />) you can decrease the
            baudrate.
            If the dynamic baudrate feature is enabled, the baudrate set by this
            function corresponds to the maximum baudrate (see <see cref="M:Tinkerforge.BrickDC.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />).
            Regulatory testing is done with the default baudrate. If CE compatability
            or similar is necessary in you applications we recommend to not change
            the baudrate.
            The default baudrate for all ports is 1400000.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetSPITFPBaudrate(System.Char)">
            <summary>
            Returns the baudrate for a given Bricklet port, see <see cref="M:Tinkerforge.BrickDC.SetSPITFPBaudrate(System.Char,System.Int64)" />.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the error count for the communication between Brick and Bricklet.
            The errors are divided into
            * ACK checksum errors,
            * message checksum errors,
            * frameing errors and
            * overflow errors.
            The errors counts are for errors that occur on the Brick side. All
            Bricklets have a similar function that returns the errors on the Bricklet side.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.EnableStatusLED">
            <summary>
            Enables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.DisableStatusLED">
            <summary>
            Disables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.IsStatusLEDEnabled">
            <summary>
            Returns *true* if the status LED is enabled, *false* otherwise.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetProtocol1BrickletName(System.Char,System.Byte@,System.Byte[]@,System.String@)">
            <summary>
            Returns the firmware and protocol version and the name of the Bricklet for a
            given port.
            This functions sole purpose is to allow automatic flashing of v1.x.y Bricklet
            plugins.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetChipTemperature">
            <summary>
            Returns the temperature in °C/10 as measured inside the microcontroller. The
            value returned is not the ambient temperature!
            The temperature is only proportional to the real temperature and it has an
            accuracy of +-15%. Practically it is only useful as an indicator for
            temperature changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.Reset">
            <summary>
            Calling this function will reset the Brick. Calling this function
            on a Brick inside of a stack will reset the whole stack.
            After a reset you have to create new device objects,
            calling functions on the existing ones will result in
            undefined behavior!
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Brick is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be '0'-'8' (stack position).
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.OnUnderVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.OnEmergencyShutdownCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.OnVelocityReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickDC.OnCurrentVelocityCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMU">
            <summary>
            Full fledged AHRS with 9 degrees of freedom
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_ACCELERATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_MAGNETIC_FIELD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_ANGULAR_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_ALL_DATA">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_ORIENTATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_QUATERNION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_IMU_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_LEDS_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_LEDS_OFF">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_ARE_LEDS_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_ACCELERATION_RANGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_ACCELERATION_RANGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_MAGNETOMETER_RANGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_MAGNETOMETER_RANGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_CONVERGENCE_SPEED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_CONVERGENCE_SPEED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_CALIBRATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_CALIBRATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_ACCELERATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_ACCELERATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_MAGNETIC_FIELD_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_MAGNETIC_FIELD_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_ANGULAR_VELOCITY_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_ANGULAR_VELOCITY_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_ALL_DATA_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_ALL_DATA_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_ORIENTATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_ORIENTATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_QUATERNION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_QUATERNION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_ORIENTATION_CALCULATION_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_ORIENTATION_CALCULATION_OFF">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_IS_ORIENTATION_CALCULATION_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_SEND_TIMEOUT_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_SET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_SPITFP_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_ENABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_DISABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_IS_STATUS_LED_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_PROTOCOL1_BRICKLET_NAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_RESET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.CALIBRATION_TYPE_ACCELEROMETER_GAIN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.CALIBRATION_TYPE_ACCELEROMETER_BIAS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.CALIBRATION_TYPE_MAGNETOMETER_GAIN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.CALIBRATION_TYPE_MAGNETOMETER_BIAS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.CALIBRATION_TYPE_GYROSCOPE_GAIN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.CALIBRATION_TYPE_GYROSCOPE_BIAS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.COMMUNICATION_METHOD_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.COMMUNICATION_METHOD_USB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.COMMUNICATION_METHOD_SPI_STACK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.COMMUNICATION_METHOD_CHIBI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.COMMUNICATION_METHOD_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.COMMUNICATION_METHOD_WIFI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.COMMUNICATION_METHOD_ETHERNET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMU.COMMUNICATION_METHOD_WIFI_V2">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.AccelerationCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMU.SetAccelerationPeriod(System.Int64)" />. The parameters are the acceleration
            for the x, y and z axis.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMU.AccelerationEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.Acceleration">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.MagneticFieldCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMU.SetMagneticFieldPeriod(System.Int64)" />. The parameters are the magnetic
            field for the x, y and z axis.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMU.MagneticFieldEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.MagneticField">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.AngularVelocityCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMU.SetAngularVelocityPeriod(System.Int64)" />. The parameters are the angular
            velocity for the x, y and z axis.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMU.AngularVelocityEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.AngularVelocity">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.AllDataCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMU.SetAllDataPeriod(System.Int64)" />. The parameters are the acceleration,
            the magnetic field and the angular velocity for the x, y and z axis as
            well as the temperature of the IMU Brick.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMU.AllDataEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.AllData">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.OrientationCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMU.SetOrientationPeriod(System.Int64)" />. The parameters are the orientation
            (roll, pitch and yaw) of the IMU Brick in Euler angles. See
            <see cref="M:Tinkerforge.BrickIMU.GetOrientation(System.Int16@,System.Int16@,System.Int16@)" /> for details.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMU.OrientationEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.Orientation">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.QuaternionCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMU.SetQuaternionPeriod(System.Int64)" />. The parameters are the orientation
            (x, y, z, w) of the IMU Brick in quaternions. See <see cref="M:Tinkerforge.BrickIMU.GetQuaternion(System.Single@,System.Single@,System.Single@,System.Single@)" />
            for details.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMU.QuaternionEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMU.Quaternion">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetAcceleration(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the calibrated acceleration from the accelerometer for the
            x, y and z axis in g/1000 (1g = 9.80665m/s²).
            If you want to get the acceleration periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMU.AccelerationCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMU.SetAccelerationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetMagneticField(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the calibrated magnetic field from the magnetometer for the
            x, y and z axis in mG (Milligauss or Nanotesla).
            If you want to get the magnetic field periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMU.MagneticFieldCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMU.SetMagneticFieldPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetAngularVelocity(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the calibrated angular velocity from the gyroscope for the
            x, y and z axis in °/14.375s (you have to divide by 14.375 to
            get the value in °/s).
            If you want to get the angular velocity periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMU.AngularVelocityCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMU.SetAngularVelocityPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetAllData(System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the data from <see cref="M:Tinkerforge.BrickIMU.GetAcceleration(System.Int16@,System.Int16@,System.Int16@)" />, <see cref="M:Tinkerforge.BrickIMU.GetMagneticField(System.Int16@,System.Int16@,System.Int16@)" />
            and <see cref="M:Tinkerforge.BrickIMU.GetAngularVelocity(System.Int16@,System.Int16@,System.Int16@)" /> as well as the temperature of the IMU Brick.
            The temperature is given in °C/100.
            If you want to get the data periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMU.AllDataCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMU.SetAllDataPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetOrientation(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the current orientation (roll, pitch, yaw) of the IMU Brick as Euler
            angles in one-hundredth degree. Note that Euler angles always experience a
            `gimbal lock &lt;https://en.wikipedia.org/wiki/Gimbal_lock&gt;`__.
            We recommend that you use quaternions instead.
            The order to sequence in which the orientation values should be applied is
            roll, yaw, pitch.
            If you want to get the orientation periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMU.OrientationCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMU.SetOrientationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetQuaternion(System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Returns the current orientation (x, y, z, w) of the IMU as
            `quaternions &lt;https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation&gt;`__.
            You can go from quaternions to Euler angles with the following formula::
            xAngle = atan2(2*y*w - 2*x*z, 1 - 2*y*y - 2*z*z)
            yAngle = atan2(2*x*w - 2*y*z, 1 - 2*x*x - 2*z*z)
            zAngle =  asin(2*x*y + 2*z*w)
            This process is not reversible, because of the
            `gimbal lock &lt;https://en.wikipedia.org/wiki/Gimbal_lock&gt;`__.
            It is also possible to calculate independent angles. You can calculate
            yaw, pitch and roll in a right-handed vehicle coordinate system according to
            DIN70000 with::
            yaw   =  atan2(2*x*y + 2*w*z, w*w + x*x - y*y - z*z)
            pitch = -asin(2*w*y - 2*x*z)
            roll  = -atan2(2*y*z + 2*w*x, -w*w + x*x + y*y - z*z))
            Converting the quaternions to an OpenGL transformation matrix is
            possible with the following formula::
            matrix = [[1 - 2*(y*y + z*z),     2*(x*y - w*z),     2*(x*z + w*y), 0],
            [    2*(x*y + w*z), 1 - 2*(x*x + z*z),     2*(y*z - w*x), 0],
            [    2*(x*z - w*y),     2*(y*z + w*x), 1 - 2*(x*x + y*y), 0],
            [                0,                 0,                 0, 1]]
            If you want to get the quaternions periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMU.QuaternionCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMU.SetQuaternionPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetIMUTemperature">
            <summary>
            Returns the temperature of the IMU Brick. The temperature is given in
            °C/100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.LedsOn">
            <summary>
            Turns the orientation and direction LEDs of the IMU Brick on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.LedsOff">
            <summary>
            Turns the orientation and direction LEDs of the IMU Brick off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.AreLedsOn">
            <summary>
            Returns *true* if the orientation and direction LEDs of the IMU Brick
            are on, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetAccelerationRange(System.Byte)">
            <summary>
            Not implemented yet.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetAccelerationRange">
            <summary>
            Not implemented yet.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetMagnetometerRange(System.Byte)">
            <summary>
            Not implemented yet.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetMagnetometerRange">
            <summary>
            Not implemented yet.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetConvergenceSpeed(System.Int32)">
            <summary>
            Sets the convergence speed of the IMU Brick in °/s. The convergence speed
            determines how the different sensor measurements are fused.
            If the orientation of the IMU Brick is off by 10° and the convergence speed is
            set to 20°/s, it will take 0.5s until the orientation is corrected. However,
            if the correct orientation is reached and the convergence speed is too high,
            the orientation will fluctuate with the fluctuations of the accelerometer and
            the magnetometer.
            If you set the convergence speed to 0, practically only the gyroscope is used
            to calculate the orientation. This gives very smooth movements, but errors of the
            gyroscope will not be corrected. If you set the convergence speed to something
            above 500, practically only the magnetometer and the accelerometer are used to
            calculate the orientation. In this case the movements are abrupt and the values
            will fluctuate, but there won't be any errors that accumulate over time.
            In an application with high angular velocities, we recommend a high convergence
            speed, so the errors of the gyroscope can be corrected fast. In applications with
            only slow movements we recommend a low convergence speed. You can change the
            convergence speed on the fly. So it is possible (and recommended) to increase
            the convergence speed before an abrupt movement and decrease it afterwards
            again.
            You might want to play around with the convergence speed in the Brick Viewer to
            get a feeling for a good value for your application.
            The default value is 30.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetConvergenceSpeed">
            <summary>
            Returns the convergence speed as set by <see cref="M:Tinkerforge.BrickIMU.SetConvergenceSpeed(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetCalibration(System.Byte,System.Int16[])">
            <summary>
            There are several different types that can be calibrated:
            <code>
            "Type", "Description", "Values"
            "0",    "Accelerometer Gain", "``[mul x, mul y, mul z, div x, div y, div z, 0, 0, 0, 0]``"
            "1",    "Accelerometer Bias", "``[bias x, bias y, bias z, 0, 0, 0, 0, 0, 0, 0]``"
            "2",    "Magnetometer Gain",  "``[mul x, mul y, mul z, div x, div y, div z, 0, 0, 0, 0]``"
            "3",    "Magnetometer Bias",  "``[bias x, bias y, bias z, 0, 0, 0, 0, 0, 0, 0]``"
            "4",    "Gyroscope Gain",     "``[mul x, mul y, mul z, div x, div y, div z, 0, 0, 0, 0]``"
            "5",    "Gyroscope Bias",     "``[bias xl, bias yl, bias zl, temp l, bias xh, bias yh, bias zh, temp h, 0, 0]``"
            </code>
            The calibration via gain and bias is done with the following formula::
            new_value = (bias + orig_value) * gain_mul / gain_div
            If you really want to write your own calibration software, please keep
            in mind that you first have to undo the old calibration (set bias to 0 and
            gain to 1/1) and that you have to average over several thousand values
            to obtain a usable result in the end.
            The gyroscope bias is highly dependent on the temperature, so you have to
            calibrate the bias two times with different temperatures. The values ``xl``,
            ``yl``, ``zl`` and ``temp l`` are the bias for ``x``, ``y``, ``z`` and the
            corresponding temperature for a low temperature. The values ``xh``, ``yh``,
            ``zh`` and ``temp h`` are the same for a high temperatures. The temperature
            difference should be at least 5°C. If you have a temperature where the
            IMU Brick is mostly used, you should use this temperature for one of the
            sampling points.
            <note>
            We highly recommend that you use the Brick Viewer to calibrate your
            IMU Brick.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetCalibration(System.Byte)">
            <summary>
            Returns the calibration for a given type as set by <see cref="M:Tinkerforge.BrickIMU.SetCalibration(System.Byte,System.Int16[])" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetAccelerationPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMU.AccelerationCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetAccelerationPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMU.SetAccelerationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetMagneticFieldPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMU.MagneticFieldCallback" /> callback is
            triggered periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetMagneticFieldPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMU.SetMagneticFieldPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetAngularVelocityPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMU.AngularVelocityCallback" /> callback is
            triggered periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetAngularVelocityPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMU.SetAngularVelocityPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetAllDataPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMU.AllDataCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetAllDataPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMU.SetAllDataPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetOrientationPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMU.OrientationCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetOrientationPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMU.SetOrientationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetQuaternionPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMU.QuaternionCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetQuaternionPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMU.SetQuaternionPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.OrientationCalculationOn">
            <summary>
            Turns the orientation calculation of the IMU Brick on.
            As default the calculation is on.
            .. versionadded:: 2.0.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.OrientationCalculationOff">
            <summary>
            Turns the orientation calculation of the IMU Brick off.
            If the calculation is off, <see cref="M:Tinkerforge.BrickIMU.GetOrientation(System.Int16@,System.Int16@,System.Int16@)" /> will return
            the last calculated value until the calculation is turned on again.
            The trigonometric functions that are needed to calculate the orientation
            are very expensive. We recommend to turn the orientation calculation
            off if the orientation is not needed, to free calculation time for the
            sensor fusion algorithm.
            As default the calculation is on.
            .. versionadded:: 2.0.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.IsOrientationCalculationOn">
            <summary>
            Returns *true* if the orientation calculation of the IMU Brick
            is on, *false* otherwise.
            .. versionadded:: 2.0.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)">
            <summary>
            The SPITF protocol can be used with a dynamic baudrate. If the dynamic baudrate is
            enabled, the Brick will try to adapt the baudrate for the communication
            between Bricks and Bricklets according to the amount of data that is transferred.
            The baudrate will be increased exponetially if lots of data is send/receieved and
            decreased linearly if little data is send/received.
            This lowers the baudrate in applications where little data is transferred (e.g.
            a weather station) and increases the robustness. If there is lots of data to transfer
            (e.g. Thermal Imaging Bricklet) it automatically increases the baudrate as needed.
            In cases where some data has to transferred as fast as possible every few seconds
            (e.g. RS485 Bricklet with a high baudrate but small payload) you may want to turn
            the dynamic baudrate off to get the highest possible performance.
            The maximum value of the baudrate can be set per port with the function
            <see cref="M:Tinkerforge.BrickIMU.SetSPITFPBaudrate(System.Char,System.Int64)" />. If the dynamic baudrate is disabled, the baudrate
            as set by <see cref="M:Tinkerforge.BrickIMU.SetSPITFPBaudrate(System.Char,System.Int64)" /> will be used statically.
            The minimum dynamic baudrate has a value range of 400000 to 2000000 baud.
            By default dynamic baudrate is enabled and the minimum dynamic baudrate is 400000.
            .. versionadded:: 2.3.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetSPITFPBaudrateConfig(System.Boolean@,System.Int64@)">
            <summary>
            Returns the baudrate config, see <see cref="M:Tinkerforge.BrickIMU.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />.
            .. versionadded:: 2.3.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetSendTimeoutCount(System.Byte)">
            <summary>
            Returns the timeout count for the different communication methods.
            The methods 0-2 are available for all Bricks, 3-7 only for Master Bricks.
            This function is mostly used for debugging during development, in normal operation
            the counters should nearly always stay at 0.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.SetSPITFPBaudrate(System.Char,System.Int64)">
            <summary>
            Sets the baudrate for a specific Bricklet port ('a' - 'd'). The
            baudrate can be in the range 400000 to 2000000.
            If you want to increase the throughput of Bricklets you can increase
            the baudrate. If you get a high error count because of high
            interference (see <see cref="M:Tinkerforge.BrickIMU.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)" />) you can decrease the
            baudrate.
            If the dynamic baudrate feature is enabled, the baudrate set by this
            function corresponds to the maximum baudrate (see <see cref="M:Tinkerforge.BrickIMU.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />).
            Regulatory testing is done with the default baudrate. If CE compatability
            or similar is necessary in you applications we recommend to not change
            the baudrate.
            The default baudrate for all ports is 1400000.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetSPITFPBaudrate(System.Char)">
            <summary>
            Returns the baudrate for a given Bricklet port, see <see cref="M:Tinkerforge.BrickIMU.SetSPITFPBaudrate(System.Char,System.Int64)" />.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the error count for the communication between Brick and Bricklet.
            The errors are divided into
            * ACK checksum errors,
            * message checksum errors,
            * frameing errors and
            * overflow errors.
            The errors counts are for errors that occur on the Brick side. All
            Bricklets have a similar function that returns the errors on the Bricklet side.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.EnableStatusLED">
            <summary>
            Enables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.DisableStatusLED">
            <summary>
            Disables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.IsStatusLEDEnabled">
            <summary>
            Returns *true* if the status LED is enabled, *false* otherwise.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetProtocol1BrickletName(System.Char,System.Byte@,System.Byte[]@,System.String@)">
            <summary>
            Returns the firmware and protocol version and the name of the Bricklet for a
            given port.
            This functions sole purpose is to allow automatic flashing of v1.x.y Bricklet
            plugins.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetChipTemperature">
            <summary>
            Returns the temperature in °C/10 as measured inside the microcontroller. The
            value returned is not the ambient temperature!
            The temperature is only proportional to the real temperature and it has an
            accuracy of +-15%. Practically it is only useful as an indicator for
            temperature changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.Reset">
            <summary>
            Calling this function will reset the Brick. Calling this function
            on a Brick inside of a stack will reset the whole stack.
            After a reset you have to create new device objects,
            calling functions on the existing ones will result in
            undefined behavior!
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Brick is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be '0'-'8' (stack position).
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.OnAccelerationCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.OnMagneticFieldCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.OnAngularVelocityCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.OnAllDataCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.OnOrientationCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMU.OnQuaternionCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2">
            <summary>
            Full fledged AHRS with 9 degrees of freedom
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_ACCELERATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_MAGNETIC_FIELD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_ANGULAR_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_ORIENTATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_LINEAR_ACCELERATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_GRAVITY_VECTOR">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_QUATERNION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_ALL_DATA">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_LEDS_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_LEDS_OFF">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_ARE_LEDS_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SAVE_CALIBRATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_ACCELERATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_ACCELERATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_MAGNETIC_FIELD_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_MAGNETIC_FIELD_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_ANGULAR_VELOCITY_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_ANGULAR_VELOCITY_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_TEMPERATURE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_TEMPERATURE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_ORIENTATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_ORIENTATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_LINEAR_ACCELERATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_LINEAR_ACCELERATION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_GRAVITY_VECTOR_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_GRAVITY_VECTOR_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_QUATERNION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_QUATERNION_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_ALL_DATA_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_ALL_DATA_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_SENSOR_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_SENSOR_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_SENSOR_FUSION_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_SENSOR_FUSION_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_SEND_TIMEOUT_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_SET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_SPITFP_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_ENABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_DISABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_IS_STATUS_LED_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_PROTOCOL1_BRICKLET_NAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_RESET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.MAGNETOMETER_RATE_2HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.MAGNETOMETER_RATE_6HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.MAGNETOMETER_RATE_8HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.MAGNETOMETER_RATE_10HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.MAGNETOMETER_RATE_15HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.MAGNETOMETER_RATE_20HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.MAGNETOMETER_RATE_25HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.MAGNETOMETER_RATE_30HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_RANGE_2000DPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_RANGE_1000DPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_RANGE_500DPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_RANGE_250DPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_RANGE_125DPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_BANDWIDTH_523HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_BANDWIDTH_230HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_BANDWIDTH_116HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_BANDWIDTH_47HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_BANDWIDTH_23HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_BANDWIDTH_12HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_BANDWIDTH_64HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.GYROSCOPE_BANDWIDTH_32HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_RANGE_2G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_RANGE_4G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_RANGE_8G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_RANGE_16G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_BANDWIDTH_7_81HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_BANDWIDTH_15_63HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_BANDWIDTH_31_25HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_BANDWIDTH_62_5HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_BANDWIDTH_125HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_BANDWIDTH_250HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_BANDWIDTH_500HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.ACCELEROMETER_BANDWIDTH_1000HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.SENSOR_FUSION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.SENSOR_FUSION_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.SENSOR_FUSION_ON_WITHOUT_MAGNETOMETER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.COMMUNICATION_METHOD_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.COMMUNICATION_METHOD_USB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.COMMUNICATION_METHOD_SPI_STACK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.COMMUNICATION_METHOD_CHIBI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.COMMUNICATION_METHOD_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.COMMUNICATION_METHOD_WIFI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.COMMUNICATION_METHOD_ETHERNET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickIMUV2.COMMUNICATION_METHOD_WIFI_V2">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.AccelerationCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMUV2.SetAccelerationPeriod(System.Int64)" />. The parameters are the acceleration
            for the x, y and z axis.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2.AccelerationEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.Acceleration">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.MagneticFieldCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMUV2.SetMagneticFieldPeriod(System.Int64)" />. The parameters are the magnetic
            field for the x, y and z axis.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2.MagneticFieldEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.MagneticField">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.AngularVelocityCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMUV2.SetAngularVelocityPeriod(System.Int64)" />. The parameters are the angular
            velocity for the x, y and z axis.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2.AngularVelocityEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.AngularVelocity">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.TemperatureCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMUV2.SetTemperaturePeriod(System.Int64)" />. The parameter is the temperature.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2.TemperatureEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.Temperature">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.LinearAccelerationCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMUV2.SetLinearAccelerationPeriod(System.Int64)" />. The parameters are the
            linear acceleration for the x, y and z axis.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2.LinearAccelerationEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.LinearAcceleration">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.GravityVectorCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMUV2.SetGravityVectorPeriod(System.Int64)" />. The parameters gravity vector
            for the x, y and z axis.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2.GravityVectorEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.GravityVector">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.OrientationCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMUV2.SetOrientationPeriod(System.Int64)" />. The parameters are the orientation
            (heading (yaw), roll, pitch) of the IMU Brick in Euler angles. See
            <see cref="M:Tinkerforge.BrickIMUV2.GetOrientation(System.Int16@,System.Int16@,System.Int16@)" /> for details.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2.OrientationEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.Orientation">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.QuaternionCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMUV2.SetQuaternionPeriod(System.Int64)" />. The parameters are the orientation
            (x, y, z, w) of the IMU Brick in quaternions. See <see cref="M:Tinkerforge.BrickIMUV2.GetQuaternion(System.Int16@,System.Int16@,System.Int16@,System.Int16@)" />
            for details.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2.QuaternionEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.Quaternion">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.AllDataCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickIMUV2.SetAllDataPeriod(System.Int64)" />. The parameters are as for
            <see cref="M:Tinkerforge.BrickIMUV2.GetAllData(System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16@,System.Byte@)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickIMUV2.AllDataEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickIMUV2.AllData">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetAcceleration(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the calibrated acceleration from the accelerometer for the
            x, y and z axis in 1/100 m/s².
            If you want to get the acceleration periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMUV2.AccelerationCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMUV2.SetAccelerationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetMagneticField(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the calibrated magnetic field from the magnetometer for the
            x, y and z axis in 1/16 µT (Microtesla).
            If you want to get the magnetic field periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMUV2.MagneticFieldCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMUV2.SetMagneticFieldPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetAngularVelocity(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the calibrated angular velocity from the gyroscope for the
            x, y and z axis in 1/16 °/s.
            If you want to get the angular velocity periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMUV2.AngularVelocityCallback" /> acallback nd set the period with
            <see cref="M:Tinkerforge.BrickIMUV2.SetAngularVelocityPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetTemperature">
            <summary>
            Returns the temperature of the IMU Brick. The temperature is given in
            °C. The temperature is measured in the core of the BNO055 IC, it is not the
            ambient temperature
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetOrientation(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the current orientation (heading, roll, pitch) of the IMU Brick as
            independent Euler angles in 1/16 degree. Note that Euler angles always
            experience a `gimbal lock &lt;https://en.wikipedia.org/wiki/Gimbal_lock&gt;`__.
            We recommend that you use quaternions instead, if you need the absolute
            orientation.
            The rotation angle has the following ranges:
            * heading: 0° to 360°
            * roll: -90° to +90°
            * pitch: -180° to +180°
            If you want to get the orientation periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMUV2.OrientationCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMUV2.SetOrientationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetLinearAcceleration(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the linear acceleration of the IMU Brick for the
            x, y and z axis in 1/100 m/s².
            The linear acceleration is the acceleration in each of the three
            axis of the IMU Brick with the influences of gravity removed.
            It is also possible to get the gravity vector with the influence of linear
            acceleration removed, see <see cref="M:Tinkerforge.BrickIMUV2.GetGravityVector(System.Int16@,System.Int16@,System.Int16@)" />.
            If you want to get the linear acceleration periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMUV2.LinearAccelerationCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMUV2.SetLinearAccelerationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetGravityVector(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the current gravity vector of the IMU Brick for the
            x, y and z axis in 1/100 m/s².
            The gravity vector is the acceleration that occurs due to gravity.
            Influences of additional linear acceleration are removed.
            It is also possible to get the linear acceleration with the influence
            of gravity removed, see <see cref="M:Tinkerforge.BrickIMUV2.GetLinearAcceleration(System.Int16@,System.Int16@,System.Int16@)" />.
            If you want to get the gravity vector periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMUV2.GravityVectorCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMUV2.SetGravityVectorPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetQuaternion(System.Int16@,System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the current orientation (w, x, y, z) of the IMU Brick as
            `quaternions &lt;https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation&gt;`__.
            You have to divide the returns values by 16383 (14 bit) to get
            the usual range of -1.0 to +1.0 for quaternions.
            If you want to get the quaternions periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMUV2.QuaternionCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMUV2.SetQuaternionPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetAllData(System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16[]@,System.Int16@,System.Byte@)">
            <summary>
            Return all of the available data of the IMU Brick.
            * acceleration in 1/100 m/s² (see <see cref="M:Tinkerforge.BrickIMUV2.GetAcceleration(System.Int16@,System.Int16@,System.Int16@)" />)
            * magnetic field in 1/16 µT (see <see cref="M:Tinkerforge.BrickIMUV2.GetMagneticField(System.Int16@,System.Int16@,System.Int16@)" />)
            * angular velocity in 1/16 °/s (see <see cref="M:Tinkerforge.BrickIMUV2.GetAngularVelocity(System.Int16@,System.Int16@,System.Int16@)" />)
            * Euler angles in 1/16 ° (see <see cref="M:Tinkerforge.BrickIMUV2.GetOrientation(System.Int16@,System.Int16@,System.Int16@)" />)
            * quaternion 1/16383 (see <see cref="M:Tinkerforge.BrickIMUV2.GetQuaternion(System.Int16@,System.Int16@,System.Int16@,System.Int16@)" />)
            * linear acceleration 1/100 m/s² (see <see cref="M:Tinkerforge.BrickIMUV2.GetLinearAcceleration(System.Int16@,System.Int16@,System.Int16@)" />)
            * gravity vector 1/100 m/s² (see <see cref="M:Tinkerforge.BrickIMUV2.GetGravityVector(System.Int16@,System.Int16@,System.Int16@)" />)
            * temperature in 1 °C (see <see cref="M:Tinkerforge.BrickIMUV2.GetTemperature" />)
            * calibration status (see below)
            The calibration status consists of four pairs of two bits. Each pair
            of bits represents the status of the current calibration.
            * bit 0-1: Magnetometer
            * bit 2-3: Accelerometer
            * bit 4-5: Gyroscope
            * bit 6-7: System
            A value of 0 means for "not calibrated" and a value of 3 means
            "fully calibrated". In your program you should always be able to
            ignore the calibration status, it is used by the calibration
            window of the Brick Viewer and it can be ignored after the first
            calibration. See the documentation in the calibration window for
            more information regarding the calibration of the IMU Brick.
            If you want to get the data periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickIMUV2.AllDataCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickIMUV2.SetAllDataPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.LedsOn">
            <summary>
            Turns the orientation and direction LEDs of the IMU Brick on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.LedsOff">
            <summary>
            Turns the orientation and direction LEDs of the IMU Brick off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.AreLedsOn">
            <summary>
            Returns *true* if the orientation and direction LEDs of the IMU Brick
            are on, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SaveCalibration">
            <summary>
            A call of this function saves the current calibration to be used
            as a starting point for the next restart of continuous calibration
            of the IMU Brick.
            A return value of *true* means that the calibration could be used and
            *false* means that it could not be used (this happens if the calibration
            status is not "fully calibrated").
            This function is used by the calibration window of the Brick Viewer, you
            should not need to call it in your program.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetAccelerationPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMUV2.AccelerationCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetAccelerationPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMUV2.SetAccelerationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetMagneticFieldPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMUV2.MagneticFieldCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetMagneticFieldPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMUV2.SetMagneticFieldPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetAngularVelocityPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMUV2.AngularVelocityCallback" /> callback is
            triggered periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetAngularVelocityPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMUV2.SetAngularVelocityPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetTemperaturePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMUV2.TemperatureCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetTemperaturePeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMUV2.SetTemperaturePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetOrientationPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMUV2.OrientationCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetOrientationPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMUV2.SetOrientationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetLinearAccelerationPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMUV2.LinearAccelerationCallback" /> callback is
            triggered periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetLinearAccelerationPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMUV2.SetLinearAccelerationPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetGravityVectorPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMUV2.GravityVectorCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetGravityVectorPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMUV2.SetGravityVectorPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetQuaternionPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMUV2.QuaternionCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetQuaternionPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMUV2.SetQuaternionPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetAllDataPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickIMUV2.AllDataCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetAllDataPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickIMUV2.SetAllDataPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetSensorConfiguration(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the available sensor configuration for the Magnetometer, Gyroscope and
            Accelerometer. The Accelerometer Range is user selectable in all fusion modes,
            all other configurations are auto-controlled in fusion mode.
            The default values are:
            * Magnetometer Rate 20Hz
            * Gyroscope Range 2000°/s
            * Gyroscope Bandwidth 32Hz
            * Accelerometer Range +/-4G
            * Accelerometer Bandwidth 62.5Hz
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetSensorConfiguration(System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the sensor configuration as set by <see cref="M:Tinkerforge.BrickIMUV2.SetSensorConfiguration(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetSensorFusionMode(System.Byte)">
            <summary>
            If the fusion mode is turned off, the functions <see cref="M:Tinkerforge.BrickIMUV2.GetAcceleration(System.Int16@,System.Int16@,System.Int16@)" />,
            <see cref="M:Tinkerforge.BrickIMUV2.GetMagneticField(System.Int16@,System.Int16@,System.Int16@)" /> and <see cref="M:Tinkerforge.BrickIMUV2.GetAngularVelocity(System.Int16@,System.Int16@,System.Int16@)" /> return uncalibrated
            and uncompensated sensor data. All other sensor data getters return no data.
            Since firmware version 2.0.6 you can also use a fusion mode without magnetometer.
            In this mode the calculated orientation is relative (with magnetometer it is
            absolute with respect to the earth). However, the calculation can't be influenced
            by spurious magnetic fields.
            By default sensor fusion is on.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetSensorFusionMode">
            <summary>
            Returns the sensor fusion mode as set by <see cref="M:Tinkerforge.BrickIMUV2.SetSensorFusionMode(System.Byte)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)">
            <summary>
            The SPITF protocol can be used with a dynamic baudrate. If the dynamic baudrate is
            enabled, the Brick will try to adapt the baudrate for the communication
            between Bricks and Bricklets according to the amount of data that is transferred.
            The baudrate will be increased exponetially if lots of data is send/receieved and
            decreased linearly if little data is send/received.
            This lowers the baudrate in applications where little data is transferred (e.g.
            a weather station) and increases the robustness. If there is lots of data to transfer
            (e.g. Thermal Imaging Bricklet) it automatically increases the baudrate as needed.
            In cases where some data has to transferred as fast as possible every few seconds
            (e.g. RS485 Bricklet with a high baudrate but small payload) you may want to turn
            the dynamic baudrate off to get the highest possible performance.
            The maximum value of the baudrate can be set per port with the function
            <see cref="M:Tinkerforge.BrickIMUV2.SetSPITFPBaudrate(System.Char,System.Int64)" />. If the dynamic baudrate is disabled, the baudrate
            as set by <see cref="M:Tinkerforge.BrickIMUV2.SetSPITFPBaudrate(System.Char,System.Int64)" /> will be used statically.
            The minimum dynamic baudrate has a value range of 400000 to 2000000 baud.
            By default dynamic baudrate is enabled and the minimum dynamic baudrate is 400000.
            .. versionadded:: 2.0.10$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetSPITFPBaudrateConfig(System.Boolean@,System.Int64@)">
            <summary>
            Returns the baudrate config, see <see cref="M:Tinkerforge.BrickIMUV2.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />.
            .. versionadded:: 2.0.10$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetSendTimeoutCount(System.Byte)">
            <summary>
            Returns the timeout count for the different communication methods.
            The methods 0-2 are available for all Bricks, 3-7 only for Master Bricks.
            This function is mostly used for debugging during development, in normal operation
            the counters should nearly always stay at 0.
            .. versionadded:: 2.0.7$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.SetSPITFPBaudrate(System.Char,System.Int64)">
            <summary>
            Sets the baudrate for a specific Bricklet port ('a' - 'd'). The
            baudrate can be in the range 400000 to 2000000.
            If you want to increase the throughput of Bricklets you can increase
            the baudrate. If you get a high error count because of high
            interference (see <see cref="M:Tinkerforge.BrickIMUV2.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)" />) you can decrease the
            baudrate.
            If the dynamic baudrate feature is enabled, the baudrate set by this
            function corresponds to the maximum baudrate (see <see cref="M:Tinkerforge.BrickIMUV2.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />).
            Regulatory testing is done with the default baudrate. If CE compatability
            or similar is necessary in you applications we recommend to not change
            the baudrate.
            The default baudrate for all ports is 1400000.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetSPITFPBaudrate(System.Char)">
            <summary>
            Returns the baudrate for a given Bricklet port, see <see cref="M:Tinkerforge.BrickIMUV2.SetSPITFPBaudrate(System.Char,System.Int64)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the error count for the communication between Brick and Bricklet.
            The errors are divided into
            * ACK checksum errors,
            * message checksum errors,
            * frameing errors and
            * overflow errors.
            The errors counts are for errors that occur on the Brick side. All
            Bricklets have a similar function that returns the errors on the Bricklet side.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.EnableStatusLED">
            <summary>
            Enables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.DisableStatusLED">
            <summary>
            Disables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.IsStatusLEDEnabled">
            <summary>
            Returns *true* if the status LED is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetProtocol1BrickletName(System.Char,System.Byte@,System.Byte[]@,System.String@)">
            <summary>
            Returns the firmware and protocol version and the name of the Bricklet for a
            given port.
            This functions sole purpose is to allow automatic flashing of v1.x.y Bricklet
            plugins.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetChipTemperature">
            <summary>
            Returns the temperature in °C/10 as measured inside the microcontroller. The
            value returned is not the ambient temperature!
            The temperature is only proportional to the real temperature and it has an
            accuracy of +-15%. Practically it is only useful as an indicator for
            temperature changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.Reset">
            <summary>
            Calling this function will reset the Brick. Calling this function
            on a Brick inside of a stack will reset the whole stack.
            After a reset you have to create new device objects,
            calling functions on the existing ones will result in
            undefined behavior!
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Brick is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be '0'-'8' (stack position).
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.OnAccelerationCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.OnMagneticFieldCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.OnAngularVelocityCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.OnTemperatureCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.OnLinearAccelerationCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.OnGravityVectorCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.OnOrientationCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.OnQuaternionCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickIMUV2.OnAllDataCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickMaster">
            <summary>
            Basis to build stacks and has 4 Bricklet ports
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_STACK_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_STACK_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_EXTENSION_TYPE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_EXTENSION_TYPE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_IS_CHIBI_PRESENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_CHIBI_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_CHIBI_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_CHIBI_MASTER_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_CHIBI_MASTER_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_CHIBI_SLAVE_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_CHIBI_SLAVE_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_CHIBI_SIGNAL_STRENGTH">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_CHIBI_ERROR_LOG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_CHIBI_FREQUENCY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_CHIBI_FREQUENCY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_CHIBI_CHANNEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_CHIBI_CHANNEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_IS_RS485_PRESENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_RS485_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_RS485_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_RS485_SLAVE_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_RS485_SLAVE_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_RS485_ERROR_LOG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_RS485_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_RS485_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_IS_WIFI_PRESENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI_ENCRYPTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI_ENCRYPTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_REFRESH_WIFI_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI_CERTIFICATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI_CERTIFICATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI_POWER_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI_POWER_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI_BUFFER_INFO">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI_REGULATORY_DOMAIN">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI_REGULATORY_DOMAIN">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_USB_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_LONG_WIFI_KEY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_LONG_WIFI_KEY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI_HOSTNAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI_HOSTNAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_STACK_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_STACK_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_STACK_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_STACK_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_USB_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_USB_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_STACK_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_STACK_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_STACK_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_STACK_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_USB_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_USB_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_IS_ETHERNET_PRESENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_ETHERNET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_ETHERNET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_ETHERNET_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_ETHERNET_HOSTNAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_ETHERNET_MAC_ADDRESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_ETHERNET_WEBSOCKET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_ETHERNET_WEBSOCKET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_ETHERNET_AUTHENTICATION_SECRET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_ETHERNET_AUTHENTICATION_SECRET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI_AUTHENTICATION_SECRET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI_AUTHENTICATION_SECRET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_CONNECTION_TYPE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_IS_WIFI2_PRESENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_START_WIFI2_BOOTLOADER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_WRITE_WIFI2_SERIAL_PORT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_READ_WIFI2_SERIAL_PORT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_AUTHENTICATION_SECRET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_AUTHENTICATION_SECRET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_CLIENT_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_CLIENT_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_CLIENT_HOSTNAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_CLIENT_HOSTNAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_CLIENT_PASSWORD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_CLIENT_PASSWORD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_AP_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_AP_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_AP_PASSWORD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_AP_PASSWORD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SAVE_WIFI2_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_FIRMWARE_VERSION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_ENABLE_WIFI2_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_DISABLE_WIFI2_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_IS_WIFI2_STATUS_LED_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_MESH_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_MESH_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_MESH_ROUTER_SSID">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_MESH_ROUTER_SSID">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_WIFI2_MESH_ROUTER_PASSWORD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_MESH_ROUTER_PASSWORD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_MESH_COMMON_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_MESH_CLIENT_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_WIFI2_MESH_AP_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_SEND_TIMEOUT_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_SET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_SPITFP_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_ENABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_DISABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_IS_STATUS_LED_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_PROTOCOL1_BRICKLET_NAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_RESET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.EXTENSION_TYPE_CHIBI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.EXTENSION_TYPE_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.EXTENSION_TYPE_WIFI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.EXTENSION_TYPE_ETHERNET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.EXTENSION_TYPE_WIFI2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CHIBI_FREQUENCY_OQPSK_868_MHZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CHIBI_FREQUENCY_OQPSK_915_MHZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CHIBI_FREQUENCY_OQPSK_780_MHZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CHIBI_FREQUENCY_BPSK40_915_MHZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.RS485_PARITY_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.RS485_PARITY_EVEN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.RS485_PARITY_ODD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_CONNECTION_DHCP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_CONNECTION_STATIC_IP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_CONNECTION_ACCESS_POINT_DHCP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_CONNECTION_ACCESS_POINT_STATIC_IP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_CONNECTION_AD_HOC_DHCP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_CONNECTION_AD_HOC_STATIC_IP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_ENCRYPTION_WPA_WPA2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_ENCRYPTION_WPA_ENTERPRISE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_ENCRYPTION_WEP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_ENCRYPTION_NO_ENCRYPTION">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_EAP_OPTION_OUTER_AUTH_EAP_FAST">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_EAP_OPTION_OUTER_AUTH_EAP_TLS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_EAP_OPTION_OUTER_AUTH_EAP_TTLS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_EAP_OPTION_OUTER_AUTH_EAP_PEAP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_EAP_OPTION_INNER_AUTH_EAP_MSCHAP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_EAP_OPTION_INNER_AUTH_EAP_GTC">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_EAP_OPTION_CERT_TYPE_CA_CERT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_EAP_OPTION_CERT_TYPE_CLIENT_CERT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_EAP_OPTION_CERT_TYPE_PRIVATE_KEY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_STATE_DISASSOCIATED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_STATE_ASSOCIATED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_STATE_ASSOCIATING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_STATE_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_STATE_NOT_INITIALIZED_YET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_POWER_MODE_FULL_SPEED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_POWER_MODE_LOW_POWER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_DOMAIN_CHANNEL_1TO11">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_DOMAIN_CHANNEL_1TO13">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI_DOMAIN_CHANNEL_1TO14">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.ETHERNET_CONNECTION_DHCP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.ETHERNET_CONNECTION_STATIC_IP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CONNECTION_TYPE_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CONNECTION_TYPE_USB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CONNECTION_TYPE_SPI_STACK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CONNECTION_TYPE_CHIBI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CONNECTION_TYPE_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CONNECTION_TYPE_WIFI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CONNECTION_TYPE_ETHERNET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.CONNECTION_TYPE_WIFI2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_PHY_MODE_B">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_PHY_MODE_G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_PHY_MODE_N">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_CLIENT_STATUS_IDLE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_CLIENT_STATUS_CONNECTING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_CLIENT_STATUS_WRONG_PASSWORD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_CLIENT_STATUS_NO_AP_FOUND">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_CLIENT_STATUS_CONNECT_FAILED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_CLIENT_STATUS_GOT_IP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_CLIENT_STATUS_UNKNOWN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_AP_ENCRYPTION_OPEN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_AP_ENCRYPTION_WEP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_AP_ENCRYPTION_WPA_PSK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_AP_ENCRYPTION_WPA2_PSK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_AP_ENCRYPTION_WPA_WPA2_PSK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_MESH_STATUS_DISABLED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_MESH_STATUS_WIFI_CONNECTING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_MESH_STATUS_GOT_IP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_MESH_STATUS_MESH_LOCAL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_MESH_STATUS_MESH_ONLINE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_MESH_STATUS_AP_AVAILABLE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_MESH_STATUS_AP_SETUP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.WIFI2_MESH_STATUS_LEAF_AVAILABLE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.COMMUNICATION_METHOD_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.COMMUNICATION_METHOD_USB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.COMMUNICATION_METHOD_SPI_STACK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.COMMUNICATION_METHOD_CHIBI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.COMMUNICATION_METHOD_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.COMMUNICATION_METHOD_WIFI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.COMMUNICATION_METHOD_ETHERNET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickMaster.COMMUNICATION_METHOD_WIFI_V2">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.StackCurrentCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickMaster.SetStackCurrentCallbackPeriod(System.Int64)" />. The parameter is the current
            of the sensor.
            The <see cref="E:Tinkerforge.BrickMaster.StackCurrentCallback" /> callback is only triggered if the current has changed
            since the last triggering.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickMaster.StackCurrentEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.StackCurrent">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.StackVoltageCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickMaster.SetStackVoltageCallbackPeriod(System.Int64)" />. The parameter is the voltage
            of the sensor.
            The <see cref="E:Tinkerforge.BrickMaster.StackVoltageCallback" /> callback is only triggered if the voltage has changed
            since the last triggering.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickMaster.StackVoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.StackVoltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.USBVoltageCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickMaster.SetUSBVoltageCallbackPeriod(System.Int64)" />. The parameter is the USB
            voltage in mV.
            The <see cref="E:Tinkerforge.BrickMaster.USBVoltageCallback" /> callback is only triggered if the USB voltage has changed
            since the last triggering.
            Does not work with hardware version 2.1.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickMaster.USBVoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.USBVoltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.StackCurrentReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickMaster.SetStackCurrentCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the stack current in mA.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickMaster.SetDebouncePeriod(System.Int64)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickMaster.StackCurrentReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.StackCurrentReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.StackVoltageReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickMaster.SetStackVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the stack voltage in mV.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickMaster.SetDebouncePeriod(System.Int64)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickMaster.StackVoltageReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.StackVoltageReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.USBVoltageReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickMaster.SetUSBVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the voltage of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickMaster.SetDebouncePeriod(System.Int64)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickMaster.USBVoltageReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickMaster.USBVoltageReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetStackVoltage">
            <summary>
            Returns the stack voltage in mV. The stack voltage is the
            voltage that is supplied via the stack, i.e. it is given by a
            Step-Down or Step-Up Power Supply.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetStackCurrent">
            <summary>
            Returns the stack current in mA. The stack current is the
            current that is drawn via the stack, i.e. it is given by a
            Step-Down or Step-Up Power Supply.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetExtensionType(System.Byte,System.Int64)">
            <summary>
            Writes the extension type to the EEPROM of a specified extension.
            The extension is either 0 or 1 (0 is the on the bottom, 1 is the one on top,
            if only one extension is present use 0).
            Possible extension types:
            <code>
            "Type", "Description"
            "1",    "Chibi"
            "2",    "RS485"
            "3",    "WIFI"
            "4",    "Ethernet"
            "5",    "WIFI 2.0"
            </code>
            The extension type is already set when bought and it can be set with the
            Brick Viewer, it is unlikely that you need this function.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetExtensionType(System.Byte)">
            <summary>
            Returns the type for a given extension as set by <see cref="M:Tinkerforge.BrickMaster.SetExtensionType(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.IsChibiPresent">
            <summary>
            Returns *true* if a Chibi Extension is available to be used by the Master Brick.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetChibiAddress(System.Byte)">
            <summary>
            Sets the address (1-255) belonging to the Chibi Extension.
            It is possible to set the address with the Brick Viewer and it will be
            saved in the EEPROM of the Chibi Extension, it does not
            have to be set on every startup.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetChibiAddress">
            <summary>
            Returns the address as set by <see cref="M:Tinkerforge.BrickMaster.SetChibiAddress(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetChibiMasterAddress(System.Byte)">
            <summary>
            Sets the address (1-255) of the Chibi Master. This address is used if the
            Chibi Extension is used as slave (i.e. it does not have a USB connection).
            It is possible to set the address with the Brick Viewer and it will be
            saved in the EEPROM of the Chibi Extension, it does not
            have to be set on every startup.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetChibiMasterAddress">
            <summary>
            Returns the address as set by <see cref="M:Tinkerforge.BrickMaster.SetChibiMasterAddress(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetChibiSlaveAddress(System.Byte,System.Byte)">
            <summary>
            Sets up to 254 slave addresses. Valid addresses are in range 1-255. 0 has a
            special meaning, it is used as list terminator and not allowed as normal slave
            address. The address numeration (via num parameter) has to be used
            ascending from 0. For example: If you use the Chibi Extension in Master mode
            (i.e. the stack has an USB connection) and you want to talk to three other
            Chibi stacks with the slave addresses 17, 23, and 42, you should call with
            ``(0, 17)``, ``(1, 23)``, ``(2, 42)`` and ``(3, 0)``. The last call with
            ``(3, 0)`` is a list terminator and indicates that the Chibi slave address
            list contains 3 addresses in this case.
            It is possible to set the addresses with the Brick Viewer, that will take care
            of correct address numeration and list termination.
            The slave addresses will be saved in the EEPROM of the Chibi Extension, they
            don't have to be set on every startup.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetChibiSlaveAddress(System.Byte)">
            <summary>
            Returns the slave address for a given num as set by
            <see cref="M:Tinkerforge.BrickMaster.SetChibiSlaveAddress(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetChibiSignalStrength">
            <summary>
            Returns the signal strength in dBm. The signal strength updates every time a
            packet is received.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetChibiErrorLog(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns underrun, CRC error, no ACK and overflow error counts of the Chibi
            communication. If these errors start rising, it is likely that either the
            distance between two Chibi stacks is becoming too big or there are
            interferences.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetChibiFrequency(System.Byte)">
            <summary>
            Sets the Chibi frequency range for the Chibi Extension. Possible values are:
            <code>
            "Type", "Description"
            "0",    "OQPSK 868MHz (Europe)"
            "1",    "OQPSK 915MHz (US)"
            "2",    "OQPSK 780MHz (China)"
            "3",    "BPSK40 915MHz"
            </code>
            It is possible to set the frequency with the Brick Viewer and it will be
            saved in the EEPROM of the Chibi Extension, it does not
            have to be set on every startup.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetChibiFrequency">
            <summary>
            Returns the frequency value as set by <see cref="M:Tinkerforge.BrickMaster.SetChibiFrequency(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetChibiChannel(System.Byte)">
            <summary>
            Sets the channel used by the Chibi Extension. Possible channels are
            different for different frequencies:
            <code>
            "Frequency",             "Possible Channels"
            "OQPSK 868MHz (Europe)", "0"
            "OQPSK 915MHz (US)",     "1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
            "OQPSK 780MHz (China)",  "0, 1, 2, 3"
            "BPSK40 915MHz",         "1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
            </code>
            It is possible to set the channel with the Brick Viewer and it will be
            saved in the EEPROM of the Chibi Extension, it does not
            have to be set on every startup.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetChibiChannel">
            <summary>
            Returns the channel as set by <see cref="M:Tinkerforge.BrickMaster.SetChibiChannel(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.IsRS485Present">
            <summary>
            Returns *true* if a RS485 Extension is available to be used by the Master Brick.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetRS485Address(System.Byte)">
            <summary>
            Sets the address (0-255) belonging to the RS485 Extension.
            Set to 0 if the RS485 Extension should be the RS485 Master (i.e.
            connected to a PC via USB).
            It is possible to set the address with the Brick Viewer and it will be
            saved in the EEPROM of the RS485 Extension, it does not
            have to be set on every startup.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetRS485Address">
            <summary>
            Returns the address as set by <see cref="M:Tinkerforge.BrickMaster.SetRS485Address(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetRS485SlaveAddress(System.Byte,System.Byte)">
            <summary>
            Sets up to 255 slave addresses. Valid addresses are in range 1-255. 0 has a
            special meaning, it is used as list terminator and not allowed as normal slave
            address. The address numeration (via ``num`` parameter) has to be used
            ascending from 0. For example: If you use the RS485 Extension in Master mode
            (i.e. the stack has an USB connection) and you want to talk to three other
            RS485 stacks with the addresses 17, 23, and 42, you should call with
            ``(0, 17)``, ``(1, 23)``, ``(2, 42)`` and ``(3, 0)``. The last call with
            ``(3, 0)`` is a list terminator and indicates that the RS485 slave address list
            contains 3 addresses in this case.
            It is possible to set the addresses with the Brick Viewer, that will take care
            of correct address numeration and list termination.
            The slave addresses will be saved in the EEPROM of the Chibi Extension, they
            don't have to be set on every startup.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetRS485SlaveAddress(System.Byte)">
            <summary>
            Returns the slave address for a given ``num`` as set by
            <see cref="M:Tinkerforge.BrickMaster.SetRS485SlaveAddress(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetRS485ErrorLog">
            <summary>
            Returns CRC error counts of the RS485 communication.
            If this counter starts rising, it is likely that the distance
            between the RS485 nodes is too big or there is some kind of
            interference.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetRS485Configuration(System.Int64,System.Char,System.Byte)">
            <summary>
            Sets the configuration of the RS485 Extension. Speed is given in baud. The
            Master Brick will try to match the given baud rate as exactly as possible.
            The maximum recommended baud rate is 2000000 (2Mbit/s).
            Possible values for parity are 'n' (none), 'e' (even) and 'o' (odd).
            Possible values for stop bits are 1 and 2.
            If your RS485 is unstable (lost messages etc.), the first thing you should
            try is to decrease the speed. On very large bus (e.g. 1km), you probably
            should use a value in the range of 100000 (100kbit/s).
            The values are stored in the EEPROM and only applied on startup. That means
            you have to restart the Master Brick after configuration.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetRS485Configuration(System.Int64@,System.Char@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickMaster.SetRS485Configuration(System.Int64,System.Char,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.IsWifiPresent">
            <summary>
            Returns *true* if a WIFI Extension is available to be used by the Master Brick.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifiConfiguration(System.String,System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Sets the configuration of the WIFI Extension. The ``ssid`` can have a max length
            of 32 characters. Possible values for ``connection`` are:
            <code>
            "Value", "Description"
            "0", "DHCP"
            "1", "Static IP"
            "2", "Access Point: DHCP"
            "3", "Access Point: Static IP"
            "4", "Ad Hoc: DHCP"
            "5", "Ad Hoc: Static IP"
            </code>
            If you set ``connection`` to one of the static IP options then you have to
            supply ``ip``, ``subnet_mask`` and ``gateway`` as an array of size 4 (first
            element of the array is the least significant byte of the address). If
            ``connection`` is set to one of the DHCP options then ``ip``, ``subnet_mask``
            and ``gateway`` are ignored, you can set them to 0.
            The last parameter is the port that your program will connect to. The
            default port, that is used by brickd, is 4223.
            The values are stored in the EEPROM and only applied on startup. That means
            you have to restart the Master Brick after configuration.
            It is recommended to use the Brick Viewer to set the WIFI configuration.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifiConfiguration(System.String@,System.Byte@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickMaster.SetWifiConfiguration(System.String,System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifiEncryption(System.Byte,System.String,System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the encryption of the WIFI Extension. The first parameter is the
            type of the encryption. Possible values are:
            <code>
            "Value", "Description"
            "0", "WPA/WPA2"
            "1", "WPA Enterprise (EAP-FAST, EAP-TLS, EAP-TTLS, PEAP)"
            "2", "WEP"
            "3", "No Encryption"
            </code>
            The ``key`` has a max length of 50 characters and is used if ``encryption``
            is set to 0 or 2 (WPA/WPA2 or WEP). Otherwise the value is ignored.
            For WPA/WPA2 the key has to be at least 8 characters long. If you want to set
            a key with more than 50 characters, see <see cref="M:Tinkerforge.BrickMaster.SetLongWifiKey(System.String)" />.
            For WEP the key has to be either 10 or 26 hexadecimal digits long. It is
            possible to set the WEP ``key_index`` (1-4). If you don't know your
            ``key_index``, it is likely 1.
            If you choose WPA Enterprise as encryption, you have to set ``eap_options`` and
            the length of the certificates (for other encryption types these parameters
            are ignored). The certificate length are given in byte and the certificates
            themselves can be set with <see cref="M:Tinkerforge.BrickMaster.SetWifiCertificate(System.Int32,System.Byte[],System.Byte)" />. ``eap_options`` consist
            of the outer authentication (bits 1-2), inner authentication (bit 3) and
            certificate type (bits 4-5):
            <code>
            "Option", "Bits", "Description"
            "outer authentication", "1-2", "0=EAP-FAST, 1=EAP-TLS, 2=EAP-TTLS, 3=EAP-PEAP"
            "inner authentication", "3", "0=EAP-MSCHAP, 1=EAP-GTC"
            "certificate type", "4-5", "0=CA Certificate, 1=Client Certificate, 2=Private Key"
            </code>
            Example for EAP-TTLS + EAP-GTC + Private Key: ``option = 2 | (1 &lt;&lt; 2) | (2 &lt;&lt; 3)``.
            The values are stored in the EEPROM and only applied on startup. That means
            you have to restart the Master Brick after configuration.
            It is recommended to use the Brick Viewer to set the Wi-Fi encryption.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifiEncryption(System.Byte@,System.String@,System.Byte@,System.Byte@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the encryption as set by <see cref="M:Tinkerforge.BrickMaster.SetWifiEncryption(System.Byte,System.String,System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)" />.
            <note>
            Since Master Brick Firmware version 2.4.4 the key is not returned anymore.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifiStatus(System.Byte[]@,System.Byte[]@,System.Byte@,System.Int16@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Int64@,System.Int64@,System.Byte@)">
            <summary>
            Returns the status of the WIFI Extension. The ``state`` is updated automatically,
            all of the other parameters are updated on startup and every time
            <see cref="M:Tinkerforge.BrickMaster.RefreshWifiStatus" /> is called.
            Possible states are:
            <code>
            "State", "Description"
            "0", "Disassociated"
            "1", "Associated"
            "2", "Associating"
            "3", "Error"
            "255", "Not initialized yet"
            </code></summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.RefreshWifiStatus">
            <summary>
            Refreshes the Wi-Fi status (see <see cref="M:Tinkerforge.BrickMaster.GetWifiStatus(System.Byte[]@,System.Byte[]@,System.Byte@,System.Int16@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Int64@,System.Int64@,System.Byte@)" />). To read the status
            of the Wi-Fi module, the Master Brick has to change from data mode to
            command mode and back. This transaction and the readout itself is
            unfortunately time consuming. This means, that it might take some ms
            until the stack with attached WIFI Extension reacts again after this
            function is called.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifiCertificate(System.Int32,System.Byte[],System.Byte)">
            <summary>
            This function is used to set the certificate as well as password and username
            for WPA Enterprise. To set the username use index 0xFFFF,
            to set the password use index 0xFFFE. The max length of username and
            password is 32.
            The certificate is written in chunks of size 32 and the index is used as
            the index of the chunk. ``data_length`` should nearly always be 32. Only
            the last chunk can have a length that is not equal to 32.
            The starting index of the CA Certificate is 0, of the Client Certificate
            10000 and for the Private Key 20000. Maximum sizes are 1312, 1312 and
            4320 byte respectively.
            The values are stored in the EEPROM and only applied on startup. That means
            you have to restart the Master Brick after uploading the certificate.
            It is recommended to use the Brick Viewer to set the certificate, username
            and password.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifiCertificate(System.Int32,System.Byte[]@,System.Byte@)">
            <summary>
            Returns the certificate for a given index as set by <see cref="M:Tinkerforge.BrickMaster.SetWifiCertificate(System.Int32,System.Byte[],System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifiPowerMode(System.Byte)">
            <summary>
            Sets the power mode of the WIFI Extension. Possible modes are:
            <code>
            "Mode", "Description"
            "0", "Full Speed (high power consumption, high throughput)"
            "1", "Low Power (low power consumption, low throughput)"
            </code>
            The default value is 0 (Full Speed).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifiPowerMode">
            <summary>
            Returns the power mode as set by <see cref="M:Tinkerforge.BrickMaster.SetWifiPowerMode(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifiBufferInfo(System.Int64@,System.Int32@,System.Int32@)">
            <summary>
            Returns informations about the Wi-Fi receive buffer. The Wi-Fi
            receive buffer has a max size of 1500 byte and if data is transfered
            too fast, it might overflow.
            The return values are the number of overflows, the low watermark
            (i.e. the smallest number of bytes that were free in the buffer) and
            the bytes that are currently used.
            You should always try to keep the buffer empty, otherwise you will
            have a permanent latency. A good rule of thumb is, that you can transfer
            1000 messages per second without problems.
            Try to not send more then 50 messages at a time without any kind of
            break between them.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifiRegulatoryDomain(System.Byte)">
            <summary>
            Sets the regulatory domain of the WIFI Extension. Possible domains are:
            <code>
            "Domain", "Description"
            "0", "FCC: Channel 1-11 (N/S America, Australia, New Zealand)"
            "1", "ETSI: Channel 1-13 (Europe, Middle East, Africa)"
            "2", "TELEC: Channel 1-14 (Japan)"
            </code>
            The default value is 1 (ETSI).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifiRegulatoryDomain">
            <summary>
            Returns the regulatory domain as set by <see cref="M:Tinkerforge.BrickMaster.SetWifiRegulatoryDomain(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetUSBVoltage">
            <summary>
            Returns the USB voltage in mV. Does not work with hardware version 2.1.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetLongWifiKey(System.String)">
            <summary>
            Sets a long Wi-Fi key (up to 63 chars, at least 8 chars) for WPA encryption.
            This key will be used
            if the key in <see cref="M:Tinkerforge.BrickMaster.SetWifiEncryption(System.Byte,System.String,System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)" /> is set to "-". In the old protocol,
            a payload of size 63 was not possible, so the maximum key length was 50 chars.
            With the new protocol this is possible, since we didn't want to break API,
            this function was added additionally.
            .. versionadded:: 2.0.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetLongWifiKey">
            <summary>
            Returns the encryption key as set by <see cref="M:Tinkerforge.BrickMaster.SetLongWifiKey(System.String)" />.
            <note>
            Since Master Brick firmware version 2.4.4 the key is not returned anymore.
            </note>
            .. versionadded:: 2.0.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifiHostname(System.String)">
            <summary>
            Sets the hostname of the WIFI Extension. The hostname will be displayed
            by access points as the hostname in the DHCP clients table.
            Setting an empty String will restore the default hostname.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifiHostname">
            <summary>
            Returns the hostname as set by <see cref="M:Tinkerforge.BrickMaster.SetWifiHostname(System.String)" />.
            An empty String means, that the default hostname is used.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetStackCurrentCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickMaster.StackCurrentCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickMaster.StackCurrentCallback" /> callback is only triggered if the current has changed
            since the last triggering.
            The default value is 0.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetStackCurrentCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickMaster.SetStackCurrentCallbackPeriod(System.Int64)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetStackVoltageCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickMaster.StackVoltageCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickMaster.StackVoltageCallback" /> callback is only triggered if the voltage has changed
            since the last triggering.
            The default value is 0.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetStackVoltageCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickMaster.SetStackVoltageCallbackPeriod(System.Int64)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetUSBVoltageCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickMaster.USBVoltageCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickMaster.USBVoltageCallback" /> callback is only triggered if the voltage has changed
            since the last triggering.
            The default value is 0.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetUSBVoltageCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickMaster.SetUSBVoltageCallbackPeriod(System.Int64)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetStackCurrentCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickMaster.StackCurrentReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the current is *outside* the min and max values"
            "'i'",    "Callback is triggered when the current is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the current is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the current is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetStackCurrentCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickMaster.SetStackCurrentCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetStackVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickMaster.StackVoltageReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the voltage is *outside* the min and max values"
            "'i'",    "Callback is triggered when the voltage is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the voltage is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the voltage is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetStackVoltageCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickMaster.SetStackVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetUSBVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickMaster.USBVoltageReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the voltage is *outside* the min and max values"
            "'i'",    "Callback is triggered when the voltage is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the voltage is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the voltage is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetUSBVoltageCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickMaster.SetUSBVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickMaster.StackCurrentReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickMaster.StackVoltageReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickMaster.USBVoltageReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickMaster.SetStackCurrentCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickMaster.SetStackVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickMaster.SetUSBVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickMaster.SetDebouncePeriod(System.Int64)" />.
            .. versionadded:: 2.0.5$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.IsEthernetPresent">
            <summary>
            Returns *true* if a Ethernet Extension is available to be used by the Master
            Brick.
            .. versionadded:: 2.1.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetEthernetConfiguration(System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Sets the configuration of the Ethernet Extension. Possible values for
            ``connection`` are:
            <code>
            "Value", "Description"
            "0", "DHCP"
            "1", "Static IP"
            </code>
            If you set ``connection`` to static IP options then you have to supply ``ip``,
            ``subnet_mask`` and ``gateway`` as an array of size 4 (first element of the
            array is the least significant byte of the address). If ``connection`` is set
            to the DHCP options then ``ip``, ``subnet_mask`` and ``gateway`` are ignored,
            you can set them to 0.
            The last parameter is the port that your program will connect to. The
            default port, that is used by brickd, is 4223.
            The values are stored in the EEPROM and only applied on startup. That means
            you have to restart the Master Brick after configuration.
            It is recommended to use the Brick Viewer to set the Ethernet configuration.
            .. versionadded:: 2.1.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetEthernetConfiguration(System.Byte@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickMaster.SetEthernetConfiguration(System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Int32)" />.
            .. versionadded:: 2.1.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetEthernetStatus(System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Int64@,System.Int64@,System.String@)">
            <summary>
            Returns the status of the Ethernet Extension.
            ``mac_address``, ``ip``, ``subnet_mask`` and ``gateway`` are given as an array.
            The first element of the array is the least significant byte of the address.
            ``rx_count`` and ``tx_count`` are the number of bytes that have been
            received/send since last restart.
            ``hostname`` is the currently used hostname.
            .. versionadded:: 2.1.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetEthernetHostname(System.String)">
            <summary>
            Sets the hostname of the Ethernet Extension. The hostname will be displayed
            by access points as the hostname in the DHCP clients table.
            Setting an empty String will restore the default hostname.
            The current hostname can be discovered with <see cref="M:Tinkerforge.BrickMaster.GetEthernetStatus(System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Int64@,System.Int64@,System.String@)" />.
            .. versionadded:: 2.1.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetEthernetMACAddress(System.Byte[])">
            <summary>
            Sets the MAC address of the Ethernet Extension. The Ethernet Extension should
            come configured with a valid MAC address, that is also written on a
            sticker of the extension itself.
            The MAC address can be read out again with <see cref="M:Tinkerforge.BrickMaster.GetEthernetStatus(System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Int64@,System.Int64@,System.String@)" />.
            .. versionadded:: 2.1.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetEthernetWebsocketConfiguration(System.Byte,System.Int32)">
            <summary>
            Sets the Ethernet WebSocket configuration. The first parameter sets the number of socket
            connections that are reserved for WebSockets. The range is 0-7. The connections
            are shared with the plain sockets. Example: If you set the connections to 3,
            there will be 3 WebSocket and 4 plain socket connections available.
            The second parameter is the port for the WebSocket connections. The port can
            not be the same as the port for the plain socket connections.
            The values are stored in the EEPROM and only applied on startup. That means
            you have to restart the Master Brick after configuration.
            It is recommended to use the Brick Viewer to set the Ethernet configuration.
            The default values are 3 for the socket connections and 4280 for the port.
            .. versionadded:: 2.2.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetEthernetWebsocketConfiguration(System.Byte@,System.Int32@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickMaster.SetEthernetConfiguration(System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Int32)" />.
            .. versionadded:: 2.2.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetEthernetAuthenticationSecret(System.String)">
            <summary>
            Sets the Ethernet authentication secret. The secret can be a string of up to 64
            characters. An empty string disables the authentication.
            See the :ref:`authentication tutorial &lt;tutorial_authentication&gt;` for more
            information.
            The secret is stored in the EEPROM and only applied on startup. That means
            you have to restart the Master Brick after configuration.
            It is recommended to use the Brick Viewer to set the Ethernet authentication secret.
            The default value is an empty string (authentication disabled).
            .. versionadded:: 2.2.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetEthernetAuthenticationSecret">
            <summary>
            Returns the authentication secret as set by
            <see cref="M:Tinkerforge.BrickMaster.SetEthernetAuthenticationSecret(System.String)" />.
            .. versionadded:: 2.2.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifiAuthenticationSecret(System.String)">
            <summary>
            Sets the WIFI authentication secret. The secret can be a string of up to 64
            characters. An empty string disables the authentication.
            See the :ref:`authentication tutorial &lt;tutorial_authentication&gt;` for more
            information.
            The secret is stored in the EEPROM and only applied on startup. That means
            you have to restart the Master Brick after configuration.
            It is recommended to use the Brick Viewer to set the WIFI authentication secret.
            The default value is an empty string (authentication disabled).
            .. versionadded:: 2.2.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifiAuthenticationSecret">
            <summary>
            Returns the authentication secret as set by
            <see cref="M:Tinkerforge.BrickMaster.SetWifiAuthenticationSecret(System.String)" />.
            .. versionadded:: 2.2.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetConnectionType">
            <summary>
            Returns the type of the connection over which this function was called.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.IsWifi2Present">
            <summary>
            Returns *true* if a WIFI Extension 2.0 is available to be used by the Master
            Brick.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.StartWifi2Bootloader">
            <summary>
            Starts the bootloader of the WIFI Extension 2.0. Returns 0 on success.
            Afterwards the <see cref="M:Tinkerforge.BrickMaster.WriteWifi2SerialPort(System.Byte[],System.Byte)" /> and <see cref="M:Tinkerforge.BrickMaster.ReadWifi2SerialPort(System.Byte,System.Byte[]@,System.Byte@)" />
            functions can be used to communicate with the bootloader to flash a new
            firmware.
            The bootloader should only be started over a USB connection. It cannot be
            started over a WIFI2 connection, see the <see cref="M:Tinkerforge.BrickMaster.GetConnectionType" /> function.
            It is recommended to use the Brick Viewer to update the firmware of the WIFI
            Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.WriteWifi2SerialPort(System.Byte[],System.Byte)">
            <summary>
            Writes up to 60 bytes (number of bytes to be written specified by ``length``)
            to the serial port of the bootloader of the WIFI Extension 2.0. Returns 0 on
            success.
            Before this function can be used the bootloader has to be started using the
            <see cref="M:Tinkerforge.BrickMaster.StartWifi2Bootloader" /> function.
            It is recommended to use the Brick Viewer to update the firmware of the WIFI
            Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.ReadWifi2SerialPort(System.Byte,System.Byte[]@,System.Byte@)">
            <summary>
            Reads up to 60 bytes (number of bytes to be read specified by ``length``)
            from the serial port of the bootloader of the WIFI Extension 2.0.
            Returns the number of actually read bytes.
            Before this function can be used the bootloader has to be started using the
            <see cref="M:Tinkerforge.BrickMaster.StartWifi2Bootloader" /> function.
            It is recommended to use the Brick Viewer to update the firmware of the WIFI
            Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2AuthenticationSecret(System.String)">
            <summary>
            Sets the WIFI authentication secret. The secret can be a string of up to 64
            characters. An empty string disables the authentication. The default value is
            an empty string (authentication disabled).
            See the :ref:`authentication tutorial &lt;tutorial_authentication&gt;` for more
            information.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2AuthenticationSecret">
            <summary>
            Returns the WIFI authentication secret as set by
            <see cref="M:Tinkerforge.BrickMaster.SetWifi2AuthenticationSecret(System.String)" />.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2Configuration(System.Int32,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the general configuration of the WIFI Extension 2.0.
            The ``port`` parameter sets the port number that your programm will connect
            to. The default value is 4223.
            The ``websocket_port`` parameter sets the WebSocket port number that your
            JavaScript programm will connect to. The default value is 4280.
            The ``website_port`` parameter sets the port number for the website of the
            WIFI Extension 2.0. The default value is 80.
            The ``phy_mode`` parameter sets the specific wireless network mode to be used.
            Possible values are B, G and N. The default value is G.
            The ``sleep_mode`` parameter is currently unused.
            The ``website`` parameter is used to enable or disable the web interface of
            the WIFI Extension 2.0, which is available from firmware version 2.0.1. Note
            that, for firmware version 2.0.3 and older, to disable the the web interface
            the ``website_port`` parameter must be set to 1 and greater than 1 to enable
            the web interface. For firmware version 2.0.4 and later, setting this parameter
            to 1 will enable the web interface and setting it to 0 will disable the web
            interface.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2Configuration(System.Int32@,System.Int32@,System.Int32@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the general configuration as set by <see cref="M:Tinkerforge.BrickMaster.SetWifi2Configuration(System.Int32,System.Int32,System.Int32,System.Byte,System.Byte,System.Byte)" />.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2Status(System.Boolean@,System.Byte@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Int64@,System.Int64@,System.Int16@,System.Boolean@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Int64@,System.Int64@,System.Byte@)">
            <summary>
            Returns the client and access point status of the WIFI Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2ClientConfiguration(System.Boolean,System.String,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Sets the client specific configuration of the WIFI Extension 2.0.
            The ``enable`` parameter enables or disables the client part of the
            WIFI Extension 2.0. The default value is *true*.
            The ``ssid`` parameter sets the SSID (up to 32 characters) of the access point
            to connect to.
            If the ``ip`` parameter is set to all zero then ``subnet_mask`` and ``gateway``
            parameters are also set to all zero and DHCP is used for IP address configuration.
            Otherwise those three parameters can be used to configure a static IP address.
            The default configuration is DHCP.
            If the ``mac_address`` parameter is set to all zero then the factory MAC
            address is used. Otherwise this parameter can be used to set a custom MAC
            address.
            If the ``bssid`` parameter is set to all zero then WIFI Extension 2.0 will
            connect to any access point that matches the configured SSID. Otherwise this
            parameter can be used to make the WIFI Extension 2.0 only connect to an
            access point if SSID and BSSID match.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2ClientConfiguration(System.Boolean@,System.String@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@)">
            <summary>
            Returns the client configuration as set by <see cref="M:Tinkerforge.BrickMaster.SetWifi2ClientConfiguration(System.Boolean,System.String,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2ClientHostname(System.String)">
            <summary>
            Sets the client hostname (up to 32 characters) of the WIFI Extension 2.0. The
            hostname will be displayed by access points as the hostname in the DHCP clients
            table.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2ClientHostname">
            <summary>
            Returns the client hostname as set by <see cref="M:Tinkerforge.BrickMaster.SetWifi2ClientHostname(System.String)" />.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2ClientPassword(System.String)">
            <summary>
            Sets the client password (up to 63 chars) for WPA/WPA2 encryption.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2ClientPassword">
            <summary>
            Returns the client password as set by <see cref="M:Tinkerforge.BrickMaster.SetWifi2ClientPassword(System.String)" />.
            <note>
            Since WIFI Extension 2.0 firmware version 2.1.3 the password is not
            returned anymore.
            </note>
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2APConfiguration(System.Boolean,System.String,System.Byte[],System.Byte[],System.Byte[],System.Byte,System.Boolean,System.Byte,System.Byte[])">
            <summary>
            Sets the access point specific configuration of the WIFI Extension 2.0.
            The ``enable`` parameter enables or disables the access point part of the
            WIFI Extension 2.0. The default value is true.
            The ``ssid`` parameter sets the SSID (up to 32 characters) of the access point.
            If the ``ip`` parameter is set to all zero then ``subnet_mask`` and ``gateway``
            parameters are also set to all zero and DHCP is used for IP address configuration.
            Otherwise those three parameters can be used to configure a static IP address.
            The default configuration is DHCP.
            The ``encryption`` parameter sets the encryption mode to be used. Possible
            values are Open (no encryption), WEP or WPA/WPA2 PSK. The default value is
            WPA/WPA2 PSK. Use the <see cref="M:Tinkerforge.BrickMaster.SetWifi2APPassword(System.String)" /> function to set the encryption
            password.
            The ``hidden`` parameter makes the access point hide or show its SSID.
            The default value is *false*.
            The ``channel`` parameter sets the channel (1 to 13) of the access point.
            The default value is 1.
            If the ``mac_address`` parameter is set to all zero then the factory MAC
            address is used. Otherwise this parameter can be used to set a custom MAC
            address.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2APConfiguration(System.Boolean@,System.String@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte@,System.Boolean@,System.Byte@,System.Byte[]@)">
            <summary>
            Returns the access point configuration as set by <see cref="M:Tinkerforge.BrickMaster.SetWifi2APConfiguration(System.Boolean,System.String,System.Byte[],System.Byte[],System.Byte[],System.Byte,System.Boolean,System.Byte,System.Byte[])" />.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2APPassword(System.String)">
            <summary>
            Sets the access point password (up to 63 chars) for the configured encryption
            mode, see <see cref="M:Tinkerforge.BrickMaster.SetWifi2APConfiguration(System.Boolean,System.String,System.Byte[],System.Byte[],System.Byte[],System.Byte,System.Boolean,System.Byte,System.Byte[])" />.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2APPassword">
            <summary>
            Returns the access point password as set by <see cref="M:Tinkerforge.BrickMaster.SetWifi2APPassword(System.String)" />.
            <note>
            Since WIFI Extension 2.0 firmware version 2.1.3 the password is not
            returned anymore.
            </note>
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SaveWifi2Configuration">
            <summary>
            All configuration functions for the WIFI Extension 2.0 do not change the
            values permanently. After configuration this function has to be called to
            permanently store the values.
            The values are stored in the EEPROM and only applied on startup. That means
            you have to restart the Master Brick after configuration.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2FirmwareVersion">
            <summary>
            Returns the current version of the WIFI Extension 2.0 firmware (major, minor, revision).
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.EnableWifi2StatusLED">
            <summary>
            Turns the green status LED of the WIFI Extension 2.0 on.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.DisableWifi2StatusLED">
            <summary>
            Turns the green status LED of the WIFI Extension 2.0 off.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.IsWifi2StatusLEDEnabled">
            <summary>
            Returns *true* if the green status LED of the WIFI Extension 2.0 is turned on.
            .. versionadded:: 2.4.0$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2MeshConfiguration(System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Byte[],System.Int32)">
            <summary>
            Requires WIFI Extension 2.0 firmware 2.1.0.
            Sets the mesh specific configuration of the WIFI Extension 2.0.
            The ``enable`` parameter enables or disables the mesh part of the
            WIFI Extension 2.0. The default value is *false*. The mesh part cannot be
            enabled together with the client and access-point part.
            If the ``root_ip`` parameter is set to all zero then ``root_subnet_mask``
            and ``root_gateway`` parameters are also set to all zero and DHCP is used for
            IP address configuration. Otherwise those three parameters can be used to
            configure a static IP address. The default configuration is DHCP.
            If the ``router_bssid`` parameter is set to all zero then the information is
            taken from Wi-Fi scan when connecting the SSID as set by
            <see cref="M:Tinkerforge.BrickMaster.SetWifi2MeshRouterSSID(System.String)" />. This only works if the the SSID is not hidden.
            In case the router has hidden SSID this parameter must be specified, otherwise
            the node will not be able to reach the mesh router.
            The ``group_id`` and the ``group_ssid_prefix`` parameters identifies a
            particular mesh network and nodes configured with same ``group_id`` and the
            ``group_ssid_prefix`` are considered to be in the same mesh network.
            The ``gateway_ip`` and the ``gateway_port`` parameters specifies the location
            of the brickd that supports mesh feature.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2MeshConfiguration(System.Boolean@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.String@,System.Byte[]@,System.Int32@)">
            <summary>
            Requires WIFI Extension 2.0 firmware 2.1.0.
            Returns the mesh configuration as set by <see cref="M:Tinkerforge.BrickMaster.SetWifi2MeshConfiguration(System.Boolean,System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.String,System.Byte[],System.Int32)" />.
            .. versionadded:: 2.4.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2MeshRouterSSID(System.String)">
            <summary>
            Requires WIFI Extension 2.0 firmware 2.1.0.
            Sets the mesh router SSID of the WIFI Extension 2.0.
            It is used to specify the mesh router to connect to.
            Note that even though in the argument of this function a 32 characters long SSID
            is allowed, in practice valid SSID should have a maximum of 31 characters. This
            is due to a bug in the mesh library that we use in the firmware of the extension.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2MeshRouterSSID">
            <summary>
            Requires WIFI Extension 2.0 firmware 2.1.0.
            Returns the mesh router SSID as set by <see cref="M:Tinkerforge.BrickMaster.SetWifi2MeshRouterSSID(System.String)" />.
            .. versionadded:: 2.4.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetWifi2MeshRouterPassword(System.String)">
            <summary>
            Requires WIFI Extension 2.0 firmware 2.1.0.
            Sets the mesh router password (up to 64 characters) for WPA/WPA2 encryption.
            The password will be used to connect to the mesh router.
            To apply configuration changes to the WIFI Extension 2.0 the
            <see cref="M:Tinkerforge.BrickMaster.SaveWifi2Configuration" /> function has to be called and the Master Brick
            has to be restarted afterwards.
            It is recommended to use the Brick Viewer to configure the WIFI Extension 2.0.
            .. versionadded:: 2.4.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2MeshRouterPassword">
            <summary>
            Requires WIFI Extension 2.0 firmware 2.1.0.
            Returns the mesh router password as set by <see cref="M:Tinkerforge.BrickMaster.SetWifi2MeshRouterPassword(System.String)" />.
            .. versionadded:: 2.4.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2MeshCommonStatus(System.Byte@,System.Boolean@,System.Boolean@,System.Int32@,System.Int64@,System.Int64@)">
            <summary>
            Requires WIFI Extension 2.0 firmware 2.1.0.
            Returns the common mesh status of the WIFI Extension 2.0.
            .. versionadded:: 2.4.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2MeshClientStatus(System.String@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@)">
            <summary>
            Requires WIFI Extension 2.0 firmware 2.1.0.
            Returns the mesh client status of the WIFI Extension 2.0.
            .. versionadded:: 2.4.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetWifi2MeshAPStatus(System.String@,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@)">
            <summary>
            Requires WIFI Extension 2.0 firmware 2.1.0.
            Returns the mesh AP status of the WIFI Extension 2.0.
            .. versionadded:: 2.4.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)">
            <summary>
            The SPITF protocol can be used with a dynamic baudrate. If the dynamic baudrate is
            enabled, the Brick will try to adapt the baudrate for the communication
            between Bricks and Bricklets according to the amount of data that is transferred.
            The baudrate will be increased exponetially if lots of data is send/receieved and
            decreased linearly if little data is send/received.
            This lowers the baudrate in applications where little data is transferred (e.g.
            a weather station) and increases the robustness. If there is lots of data to transfer
            (e.g. Thermal Imaging Bricklet) it automatically increases the baudrate as needed.
            In cases where some data has to transferred as fast as possible every few seconds
            (e.g. RS485 Bricklet with a high baudrate but small payload) you may want to turn
            the dynamic baudrate off to get the highest possible performance.
            The maximum value of the baudrate can be set per port with the function
            <see cref="M:Tinkerforge.BrickMaster.SetSPITFPBaudrate(System.Char,System.Int64)" />. If the dynamic baudrate is disabled, the baudrate
            as set by <see cref="M:Tinkerforge.BrickMaster.SetSPITFPBaudrate(System.Char,System.Int64)" /> will be used statically.
            The minimum dynamic baudrate has a value range of 400000 to 2000000 baud.
            By default dynamic baudrate is enabled and the minimum dynamic baudrate is 400000.
            .. versionadded:: 2.4.6$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetSPITFPBaudrateConfig(System.Boolean@,System.Int64@)">
            <summary>
            Returns the baudrate config, see <see cref="M:Tinkerforge.BrickMaster.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />.
            .. versionadded:: 2.4.6$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetSendTimeoutCount(System.Byte)">
            <summary>
            Returns the timeout count for the different communication methods.
            The methods 0-2 are available for all Bricks, 3-7 only for Master Bricks.
            This function is mostly used for debugging during development, in normal operation
            the counters should nearly always stay at 0.
            .. versionadded:: 2.4.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.SetSPITFPBaudrate(System.Char,System.Int64)">
            <summary>
            Sets the baudrate for a specific Bricklet port ('a' - 'd'). The
            baudrate can be in the range 400000 to 2000000.
            If you want to increase the throughput of Bricklets you can increase
            the baudrate. If you get a high error count because of high
            interference (see <see cref="M:Tinkerforge.BrickMaster.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)" />) you can decrease the
            baudrate.
            If the dynamic baudrate feature is enabled, the baudrate set by this
            function corresponds to the maximum baudrate (see <see cref="M:Tinkerforge.BrickMaster.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />).
            Regulatory testing is done with the default baudrate. If CE compatability
            or similar is necessary in you applications we recommend to not change
            the baudrate.
            The default baudrate for all ports is 1400000.
            .. versionadded:: 2.4.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetSPITFPBaudrate(System.Char)">
            <summary>
            Returns the baudrate for a given Bricklet port, see <see cref="M:Tinkerforge.BrickMaster.SetSPITFPBaudrate(System.Char,System.Int64)" />.
            .. versionadded:: 2.4.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the error count for the communication between Brick and Bricklet.
            The errors are divided into
            * ACK checksum errors,
            * message checksum errors,
            * frameing errors and
            * overflow errors.
            The errors counts are for errors that occur on the Brick side. All
            Bricklets have a similar function that returns the errors on the Bricklet side.
            .. versionadded:: 2.4.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.EnableStatusLED">
            <summary>
            Enables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.DisableStatusLED">
            <summary>
            Disables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.IsStatusLEDEnabled">
            <summary>
            Returns *true* if the status LED is enabled, *false* otherwise.
            .. versionadded:: 2.3.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetProtocol1BrickletName(System.Char,System.Byte@,System.Byte[]@,System.String@)">
            <summary>
            Returns the firmware and protocol version and the name of the Bricklet for a
            given port.
            This functions sole purpose is to allow automatic flashing of v1.x.y Bricklet
            plugins.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetChipTemperature">
            <summary>
            Returns the temperature in °C/10 as measured inside the microcontroller. The
            value returned is not the ambient temperature!
            The temperature is only proportional to the real temperature and it has an
            accuracy of +-15%. Practically it is only useful as an indicator for
            temperature changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.Reset">
            <summary>
            Calling this function will reset the Brick. Calling this function
            on a Brick inside of a stack will reset the whole stack.
            After a reset you have to create new device objects,
            calling functions on the existing ones will result in
            undefined behavior!
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Brick is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be '0'-'8' (stack position).
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.OnStackCurrentCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.OnStackVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.OnUSBVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.OnStackCurrentReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.OnStackVoltageReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickMaster.OnUSBVoltageReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickRED">
            <summary>
            Executes user programs and controls other Bricks/Bricklets standalone
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_CREATE_SESSION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_EXPIRE_SESSION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_EXPIRE_SESSION_UNCHECKED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_KEEP_SESSION_ALIVE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_RELEASE_OBJECT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_RELEASE_OBJECT_UNCHECKED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_ALLOCATE_STRING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_TRUNCATE_STRING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_STRING_LENGTH">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_SET_STRING_CHUNK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_STRING_CHUNK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_ALLOCATE_LIST">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_LIST_LENGTH">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_LIST_ITEM">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_APPEND_TO_LIST">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_REMOVE_FROM_LIST">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_OPEN_FILE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_CREATE_PIPE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_FILE_INFO">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_READ_FILE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_READ_FILE_ASYNC">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_ABORT_ASYNC_FILE_READ">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_WRITE_FILE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_WRITE_FILE_UNCHECKED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_WRITE_FILE_ASYNC">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_SET_FILE_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_FILE_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_SET_FILE_EVENTS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_FILE_EVENTS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_OPEN_DIRECTORY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_DIRECTORY_NAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_NEXT_DIRECTORY_ENTRY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_REWIND_DIRECTORY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_CREATE_DIRECTORY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROCESSES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_SPAWN_PROCESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_KILL_PROCESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROCESS_COMMAND">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROCESS_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROCESS_STDIO">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROCESS_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROGRAMS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_DEFINE_PROGRAM">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_PURGE_PROGRAM">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROGRAM_IDENTIFIER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROGRAM_ROOT_DIRECTORY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_SET_PROGRAM_COMMAND">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROGRAM_COMMAND">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_SET_PROGRAM_STDIO_REDIRECTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROGRAM_STDIO_REDIRECTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_SET_PROGRAM_SCHEDULE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROGRAM_SCHEDULE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_PROGRAM_SCHEDULER_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_CONTINUE_PROGRAM_SCHEDULE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_START_PROGRAM">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_LAST_SPAWNED_PROGRAM_PROCESS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_CUSTOM_PROGRAM_OPTION_NAMES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_SET_CUSTOM_PROGRAM_OPTION_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_CUSTOM_PROGRAM_OPTION_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_REMOVE_CUSTOM_PROGRAM_OPTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_SUCCESS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_UNKNOWN_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_INVALID_OPERATION">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_OPERATION_ABORTED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_INTERNAL_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_UNKNOWN_SESSION_ID">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_NO_FREE_SESSION_ID">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_UNKNOWN_OBJECT_ID">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_NO_FREE_OBJECT_ID">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_OBJECT_IS_LOCKED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_NO_MORE_DATA">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_WRONG_LIST_ITEM_TYPE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_PROGRAM_IS_PURGED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_INVALID_PARAMETER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_NO_FREE_MEMORY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_NO_FREE_SPACE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_ACCESS_DENIED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_ALREADY_EXISTS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_DOES_NOT_EXIST">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_INTERRUPTED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_IS_DIRECTORY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_NOT_A_DIRECTORY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_WOULD_BLOCK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_OVERFLOW">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_BAD_FILE_DESCRIPTOR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_OUT_OF_RANGE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_NAME_TOO_LONG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_INVALID_SEEK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_NOT_SUPPORTED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.ERROR_CODE_TOO_MANY_OPEN_FILES">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.OBJECT_TYPE_STRING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.OBJECT_TYPE_LIST">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.OBJECT_TYPE_FILE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.OBJECT_TYPE_DIRECTORY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.OBJECT_TYPE_PROCESS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.OBJECT_TYPE_PROGRAM">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_READ_ONLY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_WRITE_ONLY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_READ_WRITE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_APPEND">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_CREATE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_EXCLUSIVE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_NON_BLOCKING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_TRUNCATE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_TEMPORARY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_FLAG_REPLACE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_USER_ALL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_USER_READ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_USER_WRITE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_USER_EXECUTE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_GROUP_ALL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_GROUP_READ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_GROUP_WRITE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_GROUP_EXECUTE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_OTHERS_ALL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_OTHERS_READ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_OTHERS_WRITE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_PERMISSION_OTHERS_EXECUTE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PIPE_FLAG_NON_BLOCKING_READ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PIPE_FLAG_NON_BLOCKING_WRITE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_TYPE_UNKNOWN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_TYPE_REGULAR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_TYPE_DIRECTORY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_TYPE_CHARACTER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_TYPE_BLOCK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_TYPE_FIFO">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_TYPE_SYMLINK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_TYPE_SOCKET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_TYPE_PIPE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_ORIGIN_BEGINNING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_ORIGIN_CURRENT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_ORIGIN_END">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_EVENT_READABLE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.FILE_EVENT_WRITABLE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_ENTRY_TYPE_UNKNOWN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_ENTRY_TYPE_REGULAR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_ENTRY_TYPE_DIRECTORY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_ENTRY_TYPE_CHARACTER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_ENTRY_TYPE_BLOCK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_ENTRY_TYPE_FIFO">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_ENTRY_TYPE_SYMLINK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_ENTRY_TYPE_SOCKET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_FLAG_RECURSIVE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.DIRECTORY_FLAG_EXCLUSIVE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_SIGNAL_INTERRUPT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_SIGNAL_QUIT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_SIGNAL_ABORT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_SIGNAL_KILL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_SIGNAL_USER1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_SIGNAL_USER2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_SIGNAL_TERMINATE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_SIGNAL_CONTINUE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_SIGNAL_STOP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_STATE_UNKNOWN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_STATE_RUNNING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_STATE_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_STATE_EXITED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_STATE_KILLED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROCESS_STATE_STOPPED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_STDIO_REDIRECTION_DEV_NULL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_STDIO_REDIRECTION_PIPE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_STDIO_REDIRECTION_FILE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_STDIO_REDIRECTION_INDIVIDUAL_LOG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_STDIO_REDIRECTION_CONTINUOUS_LOG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_STDIO_REDIRECTION_STDOUT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_START_MODE_NEVER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_START_MODE_ALWAYS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_START_MODE_INTERVAL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_START_MODE_CRON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_SCHEDULER_STATE_STOPPED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickRED.PROGRAM_SCHEDULER_STATE_RUNNING">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.AsyncFileReadCallback">
            <summary>
            This callback reports the result of a call to the <see cref="M:Tinkerforge.BrickRED.ReadFileAsync(System.Int32,System.Int64)" />
            function.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickRED.AsyncFileReadEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.AsyncFileRead">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.AsyncFileWriteCallback">
            <summary>
            This callback reports the result of a call to the <see cref="M:Tinkerforge.BrickRED.WriteFileAsync(System.Int32,System.Byte[],System.Byte)" />
            function.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickRED.AsyncFileWriteEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.AsyncFileWrite">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.FileEventsOccurredCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickRED.FileEventsOccurredEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.FileEventsOccurred">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.ProcessStateChangedCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickRED.ProcessStateChangedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.ProcessStateChanged">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.ProgramSchedulerStateChangedCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickRED.ProgramSchedulerStateChangedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.ProgramSchedulerStateChanged">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.ProgramProcessSpawnedCallback">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickRED.ProgramProcessSpawnedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickRED.ProgramProcessSpawned">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.CreateSession(System.Int64,System.Byte@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.ExpireSession(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.ExpireSessionUnchecked(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.KeepSessionAlive(System.Int32,System.Int64)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.ReleaseObject(System.Int32,System.Int32)">
            <summary>
            Decreases the reference count of an object by one and returns the resulting
            error code. If the reference count reaches zero the object gets destroyed.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.ReleaseObjectUnchecked(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.AllocateString(System.Int64,System.String,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            Allocates a new string object, reserves ``length_to_reserve`` bytes memory
            for it and sets up to the first 60 bytes. Set ``length_to_reserve`` to the
            length of the string that should be stored in the string object.
            Returns the object ID of the new string object and the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.TruncateString(System.Int32,System.Int64)">
            <summary>
            Truncates a string object to ``length`` bytes and returns the resulting
            error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetStringLength(System.Int32,System.Byte@,System.Int64@)">
            <summary>
            Returns the length of a string object in bytes and the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.SetStringChunk(System.Int32,System.Int64,System.String)">
            <summary>
            Sets a chunk of up to 58 bytes in a string object beginning at ``offset``.
            Returns the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetStringChunk(System.Int32,System.Int64,System.Byte@,System.String@)">
            <summary>
            Returns a chunk up to 63 bytes from a string object beginning at ``offset`` and
            returns the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.AllocateList(System.Int32,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            Allocates a new list object and reserves memory for ``length_to_reserve``
            items. Set ``length_to_reserve`` to the number of items that should be stored
            in the list object.
            Returns the object ID of the new list object and the resulting error code.
            When a list object gets destroyed then the reference count of each object in
            the list object is decreased by one.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetListLength(System.Int32,System.Byte@,System.Int32@)">
            <summary>
            Returns the length of a list object in items and the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetListItem(System.Int32,System.Int32,System.Int32,System.Byte@,System.Int32@,System.Byte@)">
            <summary>
            Returns the object ID and type of the object stored at ``index`` in a list
            object and returns the resulting error code.
            Possible object types are:
            * String = 0
            * List = 1
            * File = 2
            * Directory = 3
            * Process = 4
            * Program = 5
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.AppendToList(System.Int32,System.Int32)">
            <summary>
            Appends an object to a list object and increases the reference count of the
            appended object by one.
            Returns the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.RemoveFromList(System.Int32,System.Int32)">
            <summary>
            Removes the object stored at ``index`` from a list object and decreases the
            reference count of the removed object by one.
            Returns the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.OpenFile(System.Int32,System.Int64,System.Int32,System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            Opens an existing file or creates a new file and allocates a new file object
            for it.
            FIXME: name has to be absolute
            The reference count of the name string object is increased by one. When the
            file object gets destroyed then the reference count of the name string object is
            decreased by one. Also the name string object is locked and cannot be modified
            while the file object holds a reference to it.
            The ``flags`` parameter takes a ORed combination of the following possible file
            flags (in hexadecimal notation):
            * ReadOnly = 0x0001 (O_RDONLY)
            * WriteOnly = 0x0002 (O_WRONLY)
            * ReadWrite = 0x0004 (O_RDWR)
            * Append = 0x0008 (O_APPEND)
            * Create = 0x0010 (O_CREAT)
            * Exclusive = 0x0020 (O_EXCL)
            * NonBlocking = 0x0040 (O_NONBLOCK)
            * Truncate = 0x0080 (O_TRUNC)
            * Temporary = 0x0100
            * Replace = 0x0200
            FIXME: explain *Temporary* and *Replace* flag
            The ``permissions`` parameter takes a ORed combination of the following
            possible file permissions (in octal notation) that match the common UNIX
            permission bits:
            * UserRead = 00400
            * UserWrite = 00200
            * UserExecute = 00100
            * GroupRead = 00040
            * GroupWrite = 00020
            * GroupExecute = 00010
            * OthersRead = 00004
            * OthersWrite = 00002
            * OthersExecute = 00001
            Returns the object ID of the new file object and the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.CreatePipe(System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            Creates a new pipe and allocates a new file object for it.
            The ``flags`` parameter takes a ORed combination of the following possible
            pipe flags (in hexadecimal notation):
            * NonBlockingRead = 0x0001
            * NonBlockingWrite = 0x0002
            The length of the pipe buffer can be specified with the ``length`` parameter
            in bytes. If length is set to zero, then the default pipe buffer length is used.
            Returns the object ID of the new file object and the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetFileInfo(System.Int32,System.Int32,System.Byte@,System.Byte@,System.Int32@,System.Int64@,System.Int32@,System.Int64@,System.Int64@,System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns various information about a file and the resulting error code.
            Possible file types are:
            * Unknown = 0
            * Regular = 1
            * Directory = 2
            * Character = 3
            * Block = 4
            * FIFO = 5
            * Symlink = 6
            * Socket = 7
            * Pipe = 8
            If the file type is *Pipe* then the returned name string object is invalid,
            because a pipe has no name. Otherwise the returned name string object was used
            to open or create the file object, as passed to <see cref="M:Tinkerforge.BrickRED.OpenFile(System.Int32,System.Int64,System.Int32,System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" />.
            The returned flags were used to open or create the file object, as passed to
            <see cref="M:Tinkerforge.BrickRED.OpenFile(System.Int32,System.Int64,System.Int32,System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> or <see cref="M:Tinkerforge.BrickRED.CreatePipe(System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" />. See the respective function for a list
            of possible file and pipe flags.
            FIXME: everything except flags and length is invalid if file type is *Pipe*
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.ReadFile(System.Int32,System.Byte,System.Byte@,System.Byte[]@,System.Byte@)">
            <summary>
            Reads up to 62 bytes from a file object.
            Returns the bytes read, the actual number of bytes read and the resulting
            error code.
            If there is not data to be read, either because the file position reached
            end-of-file or because there is not data in the pipe, then zero bytes are
            returned.
            If the file object was created by <see cref="M:Tinkerforge.BrickRED.OpenFile(System.Int32,System.Int64,System.Int32,System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlocking*
            flag or by <see cref="M:Tinkerforge.BrickRED.CreatePipe(System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlockingRead* flag then the
            error code *NotSupported* is returned.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.ReadFileAsync(System.Int32,System.Int64)">
            <summary>
            Reads up to 2\ :sup:`63`\  - 1 bytes from a file object asynchronously.
            Reports the bytes read (in 60 byte chunks), the actual number of bytes read and
            the resulting error code via the <see cref="E:Tinkerforge.BrickRED.AsyncFileReadCallback" /> callback.
            If there is not data to be read, either because the file position reached
            end-of-file or because there is not data in the pipe, then zero bytes are
            reported.
            If the file object was created by <see cref="M:Tinkerforge.BrickRED.OpenFile(System.Int32,System.Int64,System.Int32,System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlocking*
            flag or by <see cref="M:Tinkerforge.BrickRED.CreatePipe(System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlockingRead* flag then the error
            code *NotSupported* is reported via the <see cref="E:Tinkerforge.BrickRED.AsyncFileReadCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.AbortAsyncFileRead(System.Int32)">
            <summary>
            Aborts a <see cref="M:Tinkerforge.BrickRED.ReadFileAsync(System.Int32,System.Int64)" /> operation in progress.
            Returns the resulting error code.
            On success the <see cref="E:Tinkerforge.BrickRED.AsyncFileReadCallback" /> callback will report *OperationAborted*.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.WriteFile(System.Int32,System.Byte[],System.Byte,System.Byte@,System.Byte@)">
            <summary>
            Writes up to 61 bytes to a file object.
            Returns the actual number of bytes written and the resulting error code.
            If the file object was created by <see cref="M:Tinkerforge.BrickRED.OpenFile(System.Int32,System.Int64,System.Int32,System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlocking*
            flag or by <see cref="M:Tinkerforge.BrickRED.CreatePipe(System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlockingWrite* flag then the
            error code *NotSupported* is returned.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.WriteFileUnchecked(System.Int32,System.Byte[],System.Byte)">
            <summary>
            Writes up to 61 bytes to a file object.
            Does neither report the actual number of bytes written nor the resulting error
            code.
            If the file object was created by <see cref="M:Tinkerforge.BrickRED.OpenFile(System.Int32,System.Int64,System.Int32,System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlocking*
            flag or by <see cref="M:Tinkerforge.BrickRED.CreatePipe(System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlockingWrite* flag then the
            write operation will fail silently.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.WriteFileAsync(System.Int32,System.Byte[],System.Byte)">
            <summary>
            Writes up to 61 bytes to a file object.
            Reports the actual number of bytes written and the resulting error code via the
            <see cref="E:Tinkerforge.BrickRED.AsyncFileWriteCallback" /> callback.
            If the file object was created by <see cref="M:Tinkerforge.BrickRED.OpenFile(System.Int32,System.Int64,System.Int32,System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlocking*
            flag or by <see cref="M:Tinkerforge.BrickRED.CreatePipe(System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> without the *NonBlockingWrite* flag then the
            error code *NotSupported* is reported via the <see cref="E:Tinkerforge.BrickRED.AsyncFileWriteCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.SetFilePosition(System.Int32,System.Int64,System.Byte,System.Byte@,System.Int64@)">
            <summary>
            Set the current seek position of a file object in bytes relative to ``origin``.
            Possible file origins are:
            * Beginning = 0
            * Current = 1
            * End = 2
            Returns the resulting absolute seek position and error code.
            If the file object was created by <see cref="M:Tinkerforge.BrickRED.CreatePipe(System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> then it has no seek
            position and the error code *InvalidSeek* is returned.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetFilePosition(System.Int32,System.Byte@,System.Int64@)">
            <summary>
            Returns the current seek position of a file object in bytes and returns the
            resulting error code.
            If the file object was created by <see cref="M:Tinkerforge.BrickRED.CreatePipe(System.Int64,System.Int64,System.Int32,System.Byte@,System.Int32@)" /> then it has no seek
            position and the error code *InvalidSeek* is returned.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.SetFileEvents(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetFileEvents(System.Int32,System.Byte@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.OpenDirectory(System.Int32,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            Opens an existing directory and allocates a new directory object for it.
            FIXME: name has to be absolute
            The reference count of the name string object is increased by one. When the
            directory object is destroyed then the reference count of the name string
            object is decreased by one. Also the name string object is locked and cannot be
            modified while the directory object holds a reference to it.
            Returns the object ID of the new directory object and the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetDirectoryName(System.Int32,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            Returns the name of a directory object, as passed to <see cref="M:Tinkerforge.BrickRED.OpenDirectory(System.Int32,System.Int32,System.Byte@,System.Int32@)" />, and
            the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetNextDirectoryEntry(System.Int32,System.Int32,System.Byte@,System.Int32@,System.Byte@)">
            <summary>
            Returns the next entry in a directory object and the resulting error code.
            If there is not next entry then error code *NoMoreData* is returned. To rewind
            a directory object call <see cref="M:Tinkerforge.BrickRED.RewindDirectory(System.Int32)" />.
            Possible directory entry types are:
            * Unknown = 0
            * Regular = 1
            * Directory = 2
            * Character = 3
            * Block = 4
            * FIFO = 5
            * Symlink = 6
            * Socket = 7
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.RewindDirectory(System.Int32)">
            <summary>
            Rewinds a directory object and returns the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.CreateDirectory(System.Int32,System.Int64,System.Int32,System.Int64,System.Int64)">
            <summary>
            FIXME: name has to be absolute
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProcesses(System.Int32,System.Byte@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.SpawnProcess(System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.KillProcess(System.Int32,System.Byte)">
            <summary>
            Sends a UNIX signal to a process object and returns the resulting error code.
            Possible UNIX signals are:
            * Interrupt = 2
            * Quit = 3
            * Abort = 6
            * Kill = 9
            * User1 = 10
            * User2 = 12
            * Terminate = 15
            * Continue =  18
            * Stop = 19
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProcessCommand(System.Int32,System.Int32,System.Byte@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the executable, arguments, environment and working directory used to
            spawn a process object, as passed to <see cref="M:Tinkerforge.BrickRED.SpawnProcess(System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte@,System.Int32@)" />, and the resulting
            error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProcessIdentity(System.Int32,System.Byte@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the process ID and the user and group ID used to spawn a process object,
            as passed to <see cref="M:Tinkerforge.BrickRED.SpawnProcess(System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte@,System.Int32@)" />, and the resulting error code.
            The process ID is only valid if the state is *Running* or *Stopped*, see
            <see cref="M:Tinkerforge.BrickRED.GetProcessState(System.Int32,System.Byte@,System.Byte@,System.Int64@,System.Byte@)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProcessStdio(System.Int32,System.Int32,System.Byte@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the stdin, stdout and stderr files used to spawn a process object, as
            passed to <see cref="M:Tinkerforge.BrickRED.SpawnProcess(System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte@,System.Int32@)" />, and the resulting error code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProcessState(System.Int32,System.Byte@,System.Byte@,System.Int64@,System.Byte@)">
            <summary>
            Returns the current state, timestamp and exit code of a process object, and
            the resulting error code.
            Possible process states are:
            * Unknown = 0
            * Running = 1
            * Error = 2
            * Exited = 3
            * Killed = 4
            * Stopped = 5
            The timestamp represents the UNIX time since when the process is in its current
            state.
            The exit code is only valid if the state is *Error*, *Exited*, *Killed* or
            *Stopped* and has different meanings depending on the state:
            * Error: error code for error occurred while spawning the process (see below)
            * Exited: exit status of the process
            * Killed: UNIX signal number used to kill the process
            * Stopped: UNIX signal number used to stop the process
            Possible exit/error codes in *Error* state are:
            * InternalError = 125
            * CannotExecute = 126
            * DoesNotExist = 127
            The *CannotExecute* error can be caused by the executable being opened for
            writing.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetPrograms(System.Int32,System.Byte@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.DefineProgram(System.Int32,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.PurgeProgram(System.Int32,System.Int64)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProgramIdentifier(System.Int32,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProgramRootDirectory(System.Int32,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            FIXME: root directory is absolute: &lt;home&gt;/programs/&lt;identifier&gt;
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.SetProgramCommand(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            FIXME: working directory is relative to &lt;home&gt;/programs/&lt;identifier&gt;/bin
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProgramCommand(System.Int32,System.Int32,System.Byte@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            FIXME: working directory is relative to &lt;home&gt;/programs/&lt;identifier&gt;/bin
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.SetProgramStdioRedirection(System.Int32,System.Byte,System.Int32,System.Byte,System.Int32,System.Byte,System.Int32)">
            <summary>
            FIXME: stdio file names are relative to &lt;home&gt;/programs/&lt;identifier&gt;/bin
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProgramStdioRedirection(System.Int32,System.Int32,System.Byte@,System.Byte@,System.Int32@,System.Byte@,System.Int32@,System.Byte@,System.Int32@)">
            <summary>
            FIXME: stdio file names are relative to &lt;home&gt;/programs/&lt;identifier&gt;/bin
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.SetProgramSchedule(System.Int32,System.Byte,System.Boolean,System.Int64,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProgramSchedule(System.Int32,System.Int32,System.Byte@,System.Byte@,System.Boolean@,System.Int64@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetProgramSchedulerState(System.Int32,System.Int32,System.Byte@,System.Byte@,System.Int64@,System.Int32@)">
            <summary>
            FIXME: message is currently valid in error-occurred state only
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.ContinueProgramSchedule(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.StartProgram(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetLastSpawnedProgramProcess(System.Int32,System.Int32,System.Byte@,System.Int32@,System.Int64@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetCustomProgramOptionNames(System.Int32,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.SetCustomProgramOptionValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetCustomProgramOptionValue(System.Int32,System.Int32,System.Int32,System.Byte@,System.Int32@)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.RemoveCustomProgramOption(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Brick is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be '0'-'8' (stack position).
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.OnAsyncFileReadCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.OnAsyncFileWriteCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.OnFileEventsOccurredCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.OnProcessStateChangedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.OnProgramSchedulerStateChangedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickRED.OnProgramProcessSpawnedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickServo">
            <summary>
            Drives up to 7 RC Servos with up to 3A
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_ENABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_DISABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_IS_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_CURRENT_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_CURRENT_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_ACCELERATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_ACCELERATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_OUTPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_OUTPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_PULSE_WIDTH">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_PULSE_WIDTH">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_DEGREE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_DEGREE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_SERVO_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_OVERALL_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_STACK_INPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_EXTERNAL_INPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_MINIMUM_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_MINIMUM_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_ENABLE_POSITION_REACHED_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_DISABLE_POSITION_REACHED_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_IS_POSITION_REACHED_CALLBACK_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_ENABLE_VELOCITY_REACHED_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_DISABLE_VELOCITY_REACHED_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_IS_VELOCITY_REACHED_CALLBACK_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_SEND_TIMEOUT_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_SET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_SPITFP_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_ENABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_DISABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_IS_STATUS_LED_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_PROTOCOL1_BRICKLET_NAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_RESET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.COMMUNICATION_METHOD_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.COMMUNICATION_METHOD_USB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.COMMUNICATION_METHOD_SPI_STACK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.COMMUNICATION_METHOD_CHIBI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.COMMUNICATION_METHOD_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.COMMUNICATION_METHOD_WIFI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.COMMUNICATION_METHOD_ETHERNET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickServo.COMMUNICATION_METHOD_WIFI_V2">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickServo.UnderVoltageCallback">
            <summary>
            This callback is triggered when the input voltage drops below the value set by
            <see cref="M:Tinkerforge.BrickServo.SetMinimumVoltage(System.Int32)" />. The parameter is the current voltage given
            in mV.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickServo.UnderVoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickServo.UnderVoltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickServo.PositionReachedCallback">
            <summary>
            This callback is triggered when a position set by <see cref="M:Tinkerforge.BrickServo.SetPosition(System.Byte,System.Int16)" />
            is reached. The parameters are the servo and the position that is reached.
            You can enable this callback with <see cref="M:Tinkerforge.BrickServo.EnablePositionReachedCallback" />.
            <note>
            Since we can't get any feedback from the servo, this only works if the
            velocity (see <see cref="M:Tinkerforge.BrickServo.SetVelocity(System.Byte,System.Int32)" />) is set smaller or equal to the
            maximum velocity of the servo. Otherwise the servo will lag behind the
            control value and the callback will be triggered too early.
            </note></summary>
        </member>
        <member name="T:Tinkerforge.BrickServo.PositionReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickServo.PositionReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickServo.VelocityReachedCallback">
            <summary>
            This callback is triggered when a velocity set by <see cref="M:Tinkerforge.BrickServo.SetVelocity(System.Byte,System.Int32)" />
            is reached. The parameters are the servo and the velocity that is reached.
            You can enable this callback with <see cref="M:Tinkerforge.BrickServo.EnableVelocityReachedCallback" />.
            <note>
            Since we can't get any feedback from the servo, this only works if the
            acceleration (see <see cref="M:Tinkerforge.BrickServo.SetAcceleration(System.Byte,System.Int32)" />) is set smaller or equal to the
            maximum acceleration of the servo. Otherwise the servo will lag behind the
            control value and the callback will be triggered too early.
            </note></summary>
        </member>
        <member name="T:Tinkerforge.BrickServo.VelocityReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickServo.VelocityReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.Enable(System.Byte)">
            <summary>
            Enables a servo (0 to 6). If a servo is enabled, the configured position,
            velocity, acceleration, etc. are applied immediately.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.Disable(System.Byte)">
            <summary>
            Disables a servo (0 to 6). Disabled servos are not driven at all, i.e. a
            disabled servo will not hold its position if a load is applied.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.IsEnabled(System.Byte)">
            <summary>
            Returns *true* if the specified servo is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetPosition(System.Byte,System.Int16)">
            <summary>
            Sets the position in °/100 for the specified servo.
            The default range of the position is -9000 to 9000, but it can be specified
            according to your servo with <see cref="M:Tinkerforge.BrickServo.SetDegree(System.Byte,System.Int16,System.Int16)" />.
            If you want to control a linear servo or RC brushless motor controller or
            similar with the Servo Brick, you can also define lengths or speeds with
            <see cref="M:Tinkerforge.BrickServo.SetDegree(System.Byte,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetPosition(System.Byte)">
            <summary>
            Returns the position of the specified servo as set by <see cref="M:Tinkerforge.BrickServo.SetPosition(System.Byte,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetCurrentPosition(System.Byte)">
            <summary>
            Returns the *current* position of the specified servo. This may not be the
            value of <see cref="M:Tinkerforge.BrickServo.SetPosition(System.Byte,System.Int16)" /> if the servo is currently approaching a
            position goal.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetVelocity(System.Byte,System.Int32)">
            <summary>
            Sets the maximum velocity of the specified servo in °/100s. The velocity
            is accelerated according to the value set by <see cref="M:Tinkerforge.BrickServo.SetAcceleration(System.Byte,System.Int32)" />.
            The minimum velocity is 0 (no movement) and the maximum velocity is 65535.
            With a value of 65535 the position will be set immediately (no velocity).
            The default value is 65535.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetVelocity(System.Byte)">
            <summary>
            Returns the velocity of the specified servo as set by <see cref="M:Tinkerforge.BrickServo.SetVelocity(System.Byte,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetCurrentVelocity(System.Byte)">
            <summary>
            Returns the *current* velocity of the specified servo. This may not be the
            value of <see cref="M:Tinkerforge.BrickServo.SetVelocity(System.Byte,System.Int32)" /> if the servo is currently approaching a
            velocity goal.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetAcceleration(System.Byte,System.Int32)">
            <summary>
            Sets the acceleration of the specified servo in °/100s².
            The minimum acceleration is 1 and the maximum acceleration is 65535.
            With a value of 65535 the velocity will be set immediately (no acceleration).
            The default value is 65535.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetAcceleration(System.Byte)">
            <summary>
            Returns the acceleration for the specified servo as set by
            <see cref="M:Tinkerforge.BrickServo.SetAcceleration(System.Byte,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetOutputVoltage(System.Int32)">
            <summary>
            Sets the output voltages with which the servos are driven in mV.
            The minimum output voltage is 2000mV and the maximum output voltage is
            9000mV.
            <note>
            We recommend that you set this value to the maximum voltage that is
            specified for your servo, most servos achieve their maximum force only
            with high voltages.
            </note>
            The default value is 5000.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetOutputVoltage">
            <summary>
            Returns the output voltage as specified by <see cref="M:Tinkerforge.BrickServo.SetOutputVoltage(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetPulseWidth(System.Byte,System.Int32,System.Int32)">
            <summary>
            Sets the minimum and maximum pulse width of the specified servo in µs.
            Usually, servos are controlled with a
            `PWM &lt;https://en.wikipedia.org/wiki/Pulse-width_modulation&gt;`__, whereby the
            length of the pulse controls the position of the servo. Every servo has
            different minimum and maximum pulse widths, these can be specified with
            this function.
            If you have a datasheet for your servo that specifies the minimum and
            maximum pulse width, you should set the values accordingly. If your servo
            comes without any datasheet you have to find the values via trial and error.
            Both values have a range from 1 to 65535 (unsigned 16-bit integer). The
            minimum must be smaller than the maximum.
            The default values are 1000µs (1ms) and 2000µs (2ms) for minimum and
            maximum pulse width.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetPulseWidth(System.Byte,System.Int32@,System.Int32@)">
            <summary>
            Returns the minimum and maximum pulse width for the specified servo as set by
            <see cref="M:Tinkerforge.BrickServo.SetPulseWidth(System.Byte,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetDegree(System.Byte,System.Int16,System.Int16)">
            <summary>
            Sets the minimum and maximum degree for the specified servo (by default
            given as °/100).
            This only specifies the abstract values between which the minimum and maximum
            pulse width is scaled. For example: If you specify a pulse width of 1000µs
            to 2000µs and a degree range of -90° to 90°, a call of <see cref="M:Tinkerforge.BrickServo.SetPosition(System.Byte,System.Int16)" />
            with 0 will result in a pulse width of 1500µs
            (-90° = 1000µs, 90° = 2000µs, etc.).
            Possible usage:
            * The datasheet of your servo specifies a range of 200° with the middle position
            at 110°. In this case you can set the minimum to -9000 and the maximum to 11000.
            * You measure a range of 220° on your servo and you don't have or need a middle
            position. In this case you can set the minimum to 0 and the maximum to 22000.
            * You have a linear servo with a drive length of 20cm, In this case you could
            set the minimum to 0 and the maximum to 20000. Now you can set the Position
            with <see cref="M:Tinkerforge.BrickServo.SetPosition(System.Byte,System.Int16)" /> with a resolution of cm/100. Also the velocity will
            have a resolution of cm/100s and the acceleration will have a resolution of
            cm/100s².
            * You don't care about units and just want the highest possible resolution. In
            this case you should set the minimum to -32767 and the maximum to 32767.
            * You have a brushless motor with a maximum speed of 10000 rpm and want to
            control it with a RC brushless motor controller. In this case you can set the
            minimum to 0 and the maximum to 10000. <see cref="M:Tinkerforge.BrickServo.SetPosition(System.Byte,System.Int16)" /> now controls the rpm.
            Both values have a possible range from -32767 to 32767
            (signed 16-bit integer). The minimum must be smaller than the maximum.
            The default values are -9000 and 9000 for the minimum and maximum degree.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetDegree(System.Byte,System.Int16@,System.Int16@)">
            <summary>
            Returns the minimum and maximum degree for the specified servo as set by
            <see cref="M:Tinkerforge.BrickServo.SetDegree(System.Byte,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetPeriod(System.Byte,System.Int32)">
            <summary>
            Sets the period of the specified servo in µs.
            Usually, servos are controlled with a
            `PWM &lt;https://en.wikipedia.org/wiki/Pulse-width_modulation&gt;`__. Different
            servos expect PWMs with different periods. Most servos run well with a
            period of about 20ms.
            If your servo comes with a datasheet that specifies a period, you should
            set it accordingly. If you don't have a datasheet and you have no idea
            what the correct period is, the default value (19.5ms) will most likely
            work fine.
            The minimum possible period is 1µs and the maximum is 65535µs.
            The default value is 19.5ms (19500µs).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetPeriod(System.Byte)">
            <summary>
            Returns the period for the specified servo as set by <see cref="M:Tinkerforge.BrickServo.SetPeriod(System.Byte,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetServoCurrent(System.Byte)">
            <summary>
            Returns the current consumption of the specified servo in mA.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetOverallCurrent">
            <summary>
            Returns the current consumption of all servos together in mA.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetStackInputVoltage">
            <summary>
            Returns the stack input voltage in mV. The stack input voltage is the
            voltage that is supplied via the stack, i.e. it is given by a
            Step-Down or Step-Up Power Supply.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetExternalInputVoltage">
            <summary>
            Returns the external input voltage in mV. The external input voltage is
            given via the black power input connector on the Servo Brick.
            If there is an external input voltage and a stack input voltage, the motors
            will be driven by the external input voltage. If there is only a stack
            voltage present, the motors will be driven by this voltage.
            <note type="caution">
            This means, if you have a high stack voltage and a low external voltage,
            the motors will be driven with the low external voltage. If you then remove
            the external connection, it will immediately be driven by the high
            stack voltage
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetMinimumVoltage(System.Int32)">
            <summary>
            Sets the minimum voltage in mV, below which the <see cref="E:Tinkerforge.BrickServo.UnderVoltageCallback" /> callback
            is triggered. The minimum possible value that works with the Servo Brick is 5V.
            You can use this function to detect the discharge of a battery that is used
            to drive the stepper motor. If you have a fixed power supply, you likely do
            not need this functionality.
            The default value is 5V (5000mV).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetMinimumVoltage">
            <summary>
            Returns the minimum voltage as set by <see cref="M:Tinkerforge.BrickServo.SetMinimumVoltage(System.Int32)" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.EnablePositionReachedCallback">
            <summary>
            Enables the <see cref="E:Tinkerforge.BrickServo.PositionReachedCallback" /> callback.
            Default is disabled.
            .. versionadded:: 2.0.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.DisablePositionReachedCallback">
            <summary>
            Disables the <see cref="E:Tinkerforge.BrickServo.PositionReachedCallback" /> callback.
            Default is disabled.
            .. versionadded:: 2.0.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.IsPositionReachedCallbackEnabled">
            <summary>
            Returns *true* if <see cref="E:Tinkerforge.BrickServo.PositionReachedCallback" /> callback is enabled, *false* otherwise.
            .. versionadded:: 2.0.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.EnableVelocityReachedCallback">
            <summary>
            Enables the <see cref="E:Tinkerforge.BrickServo.VelocityReachedCallback" /> callback.
            Default is disabled.
            .. versionadded:: 2.0.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.DisableVelocityReachedCallback">
            <summary>
            Disables the <see cref="E:Tinkerforge.BrickServo.VelocityReachedCallback" /> callback.
            Default is disabled.
            .. versionadded:: 2.0.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.IsVelocityReachedCallbackEnabled">
            <summary>
            Returns *true* if <see cref="E:Tinkerforge.BrickServo.VelocityReachedCallback" /> callback is enabled, *false* otherwise.
            .. versionadded:: 2.0.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)">
            <summary>
            The SPITF protocol can be used with a dynamic baudrate. If the dynamic baudrate is
            enabled, the Brick will try to adapt the baudrate for the communication
            between Bricks and Bricklets according to the amount of data that is transferred.
            The baudrate will be increased exponetially if lots of data is send/receieved and
            decreased linearly if little data is send/received.
            This lowers the baudrate in applications where little data is transferred (e.g.
            a weather station) and increases the robustness. If there is lots of data to transfer
            (e.g. Thermal Imaging Bricklet) it automatically increases the baudrate as needed.
            In cases where some data has to transferred as fast as possible every few seconds
            (e.g. RS485 Bricklet with a high baudrate but small payload) you may want to turn
            the dynamic baudrate off to get the highest possible performance.
            The maximum value of the baudrate can be set per port with the function
            <see cref="M:Tinkerforge.BrickServo.SetSPITFPBaudrate(System.Char,System.Int64)" />. If the dynamic baudrate is disabled, the baudrate
            as set by <see cref="M:Tinkerforge.BrickServo.SetSPITFPBaudrate(System.Char,System.Int64)" /> will be used statically.
            The minimum dynamic baudrate has a value range of 400000 to 2000000 baud.
            By default dynamic baudrate is enabled and the minimum dynamic baudrate is 400000.
            .. versionadded:: 2.3.4$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetSPITFPBaudrateConfig(System.Boolean@,System.Int64@)">
            <summary>
            Returns the baudrate config, see <see cref="M:Tinkerforge.BrickServo.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />.
            .. versionadded:: 2.3.4$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetSendTimeoutCount(System.Byte)">
            <summary>
            Returns the timeout count for the different communication methods.
            The methods 0-2 are available for all Bricks, 3-7 only for Master Bricks.
            This function is mostly used for debugging during development, in normal operation
            the counters should nearly always stay at 0.
            .. versionadded:: 2.3.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.SetSPITFPBaudrate(System.Char,System.Int64)">
            <summary>
            Sets the baudrate for a specific Bricklet port ('a' - 'd'). The
            baudrate can be in the range 400000 to 2000000.
            If you want to increase the throughput of Bricklets you can increase
            the baudrate. If you get a high error count because of high
            interference (see <see cref="M:Tinkerforge.BrickServo.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)" />) you can decrease the
            baudrate.
            If the dynamic baudrate feature is enabled, the baudrate set by this
            function corresponds to the maximum baudrate (see <see cref="M:Tinkerforge.BrickServo.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />).
            Regulatory testing is done with the default baudrate. If CE compatability
            or similar is necessary in you applications we recommend to not change
            the baudrate.
            The default baudrate for all ports is 1400000.
            .. versionadded:: 2.3.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetSPITFPBaudrate(System.Char)">
            <summary>
            Returns the baudrate for a given Bricklet port, see <see cref="M:Tinkerforge.BrickServo.SetSPITFPBaudrate(System.Char,System.Int64)" />.
            .. versionadded:: 2.3.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the error count for the communication between Brick and Bricklet.
            The errors are divided into
            * ACK checksum errors,
            * message checksum errors,
            * frameing errors and
            * overflow errors.
            The errors counts are for errors that occur on the Brick side. All
            Bricklets have a similar function that returns the errors on the Bricklet side.
            .. versionadded:: 2.3.2$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.EnableStatusLED">
            <summary>
            Enables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.DisableStatusLED">
            <summary>
            Disables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.IsStatusLEDEnabled">
            <summary>
            Returns *true* if the status LED is enabled, *false* otherwise.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetProtocol1BrickletName(System.Char,System.Byte@,System.Byte[]@,System.String@)">
            <summary>
            Returns the firmware and protocol version and the name of the Bricklet for a
            given port.
            This functions sole purpose is to allow automatic flashing of v1.x.y Bricklet
            plugins.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetChipTemperature">
            <summary>
            Returns the temperature in °C/10 as measured inside the microcontroller. The
            value returned is not the ambient temperature!
            The temperature is only proportional to the real temperature and it has an
            accuracy of +-15%. Practically it is only useful as an indicator for
            temperature changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.Reset">
            <summary>
            Calling this function will reset the Brick. Calling this function
            on a Brick inside of a stack will reset the whole stack.
            After a reset you have to create new device objects,
            calling functions on the existing ones will result in
            undefined behavior!
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Brick is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be '0'-'8' (stack position).
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.OnUnderVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.OnPositionReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickServo.OnVelocityReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickSilentStepper">
            <summary>
            Silently drives one bipolar stepper motor with up to 46V and 1.6A per phase
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_MAX_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_MAX_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_CURRENT_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_SPEED_RAMPING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_SPEED_RAMPING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_FULL_BRAKE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_CURRENT_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_CURRENT_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_TARGET_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_TARGET_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_STEPS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_STEPS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_REMAINING_STEPS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_STEP_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_STEP_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_DRIVE_FORWARD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_DRIVE_BACKWARD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_STOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_STACK_INPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_EXTERNAL_INPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_MOTOR_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_MOTOR_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_ENABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_DISABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_IS_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_BASIC_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_BASIC_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_SPREADCYCLE_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_SPREADCYCLE_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_STEALTH_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_STEALTH_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_COOLSTEP_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_COOLSTEP_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_MISC_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_MISC_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_DRIVER_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_MINIMUM_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_MINIMUM_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_TIME_BASE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_TIME_BASE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_ALL_DATA">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_ALL_DATA_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_ALL_DATA_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_SEND_TIMEOUT_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_SET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_SPITFP_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_ENABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_DISABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_IS_STATUS_LED_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_PROTOCOL1_BRICKLET_NAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_RESET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STEP_RESOLUTION_1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STEP_RESOLUTION_2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STEP_RESOLUTION_4">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STEP_RESOLUTION_8">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STEP_RESOLUTION_16">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STEP_RESOLUTION_32">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STEP_RESOLUTION_64">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STEP_RESOLUTION_128">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STEP_RESOLUTION_256">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CHOPPER_MODE_SPREAD_CYCLE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CHOPPER_MODE_FAST_DECAY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FREEWHEEL_MODE_NORMAL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FREEWHEEL_MODE_FREEWHEELING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FREEWHEEL_MODE_COIL_SHORT_LS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.FREEWHEEL_MODE_COIL_SHORT_HS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CURRENT_UP_STEP_INCREMENT_1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CURRENT_UP_STEP_INCREMENT_2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CURRENT_UP_STEP_INCREMENT_4">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CURRENT_UP_STEP_INCREMENT_8">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CURRENT_DOWN_STEP_DECREMENT_1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CURRENT_DOWN_STEP_DECREMENT_2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CURRENT_DOWN_STEP_DECREMENT_8">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.CURRENT_DOWN_STEP_DECREMENT_32">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.MINIMUM_CURRENT_HALF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.MINIMUM_CURRENT_QUARTER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STALLGUARD_MODE_STANDARD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STALLGUARD_MODE_FILTERED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.OPEN_LOAD_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.OPEN_LOAD_PHASE_A">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.OPEN_LOAD_PHASE_B">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.OPEN_LOAD_PHASE_AB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.SHORT_TO_GROUND_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.SHORT_TO_GROUND_PHASE_A">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.SHORT_TO_GROUND_PHASE_B">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.SHORT_TO_GROUND_PHASE_AB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.OVER_TEMPERATURE_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.OVER_TEMPERATURE_WARNING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.OVER_TEMPERATURE_LIMIT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STATE_STOP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STATE_ACCELERATION">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STATE_RUN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STATE_DEACCELERATION">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STATE_DIRECTION_CHANGE_TO_FORWARD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.STATE_DIRECTION_CHANGE_TO_BACKWARD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.COMMUNICATION_METHOD_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.COMMUNICATION_METHOD_USB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.COMMUNICATION_METHOD_SPI_STACK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.COMMUNICATION_METHOD_CHIBI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.COMMUNICATION_METHOD_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.COMMUNICATION_METHOD_WIFI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.COMMUNICATION_METHOD_ETHERNET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickSilentStepper.COMMUNICATION_METHOD_WIFI_V2">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickSilentStepper.UnderVoltageCallback">
            <summary>
            This callback is triggered when the input voltage drops below the value set by
            <see cref="M:Tinkerforge.BrickSilentStepper.SetMinimumVoltage(System.Int32)" />. The parameter is the current voltage given
            in mV.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickSilentStepper.UnderVoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickSilentStepper.PositionReachedCallback">
            <summary>
            This callback is triggered when a position set by <see cref="M:Tinkerforge.BrickSilentStepper.SetSteps(System.Int32)" /> or
            <see cref="M:Tinkerforge.BrickSilentStepper.SetTargetPosition(System.Int32)" /> is reached.
            <note>
            Since we can't get any feedback from the stepper motor, this only works if the
            acceleration (see <see cref="M:Tinkerforge.BrickSilentStepper.SetSpeedRamping(System.Int32,System.Int32)" />) is set smaller or equal to the
            maximum acceleration of the motor. Otherwise the motor will lag behind the
            control value and the callback will be triggered too early.
            </note></summary>
        </member>
        <member name="T:Tinkerforge.BrickSilentStepper.PositionReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickSilentStepper.AllDataCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickSilentStepper.SetAllDataPeriod(System.Int64)" />. The parameters are: the current velocity,
            the current position, the remaining steps, the stack voltage, the external
            voltage and the current consumption of the stepper motor.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickSilentStepper.AllDataEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickSilentStepper.NewStateCallback">
            <summary>
            This callback is triggered whenever the Slient Stepper Brick enters a new state.
            It returns the new state as well as the previous state.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickSilentStepper.NewStateEventHandler">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetMaxVelocity(System.Int32)">
            <summary>
            Sets the maximum velocity of the stepper motor in steps per second.
            This function does *not* start the motor, it merely sets the maximum
            velocity the stepper motor is accelerated to. To get the motor running use
            either <see cref="M:Tinkerforge.BrickSilentStepper.SetTargetPosition(System.Int32)" />, <see cref="M:Tinkerforge.BrickSilentStepper.SetSteps(System.Int32)" />, <see cref="M:Tinkerforge.BrickSilentStepper.DriveForward" /> or
            <see cref="M:Tinkerforge.BrickSilentStepper.DriveBackward" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetMaxVelocity">
            <summary>
            Returns the velocity as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetMaxVelocity(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetCurrentVelocity">
            <summary>
            Returns the *current* velocity of the stepper motor in steps per second.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetSpeedRamping(System.Int32,System.Int32)">
            <summary>
            Sets the acceleration and deacceleration of the stepper motor. The values
            are given in *steps/s²*. An acceleration of 1000 means, that
            every second the velocity is increased by 1000 *steps/s*.
            For example: If the current velocity is 0 and you want to accelerate to a
            velocity of 8000 *steps/s* in 10 seconds, you should set an acceleration
            of 800 *steps/s²*.
            An acceleration/deacceleration of 0 means instantaneous
            acceleration/deacceleration (not recommended)
            The default value is 1000 for both
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetSpeedRamping(System.Int32@,System.Int32@)">
            <summary>
            Returns the acceleration and deacceleration as set by
            <see cref="M:Tinkerforge.BrickSilentStepper.SetSpeedRamping(System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.FullBrake">
            <summary>
            Executes an active full brake.
            <note type="caution">
            This function is for emergency purposes,
            where an immediate brake is necessary. Depending on the current velocity and
            the strength of the motor, a full brake can be quite violent.
            </note>
            Call <see cref="M:Tinkerforge.BrickSilentStepper.Stop" /> if you just want to stop the motor.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetCurrentPosition(System.Int32)">
            <summary>
            Sets the current steps of the internal step counter. This can be used to
            set the current position to 0 when some kind of starting position
            is reached (e.g. when a CNC machine reaches a corner).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetCurrentPosition">
            <summary>
            Returns the current position of the stepper motor in steps. On startup
            the position is 0. The steps are counted with all possible driving
            functions (<see cref="M:Tinkerforge.BrickSilentStepper.SetTargetPosition(System.Int32)" />, <see cref="M:Tinkerforge.BrickSilentStepper.SetSteps(System.Int32)" />, <see cref="M:Tinkerforge.BrickSilentStepper.DriveForward" /> or
            <see cref="M:Tinkerforge.BrickSilentStepper.DriveBackward" />). It also is possible to reset the steps to 0 or
            set them to any other desired value with <see cref="M:Tinkerforge.BrickSilentStepper.SetCurrentPosition(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetTargetPosition(System.Int32)">
            <summary>
            Sets the target position of the stepper motor in steps. For example,
            if the current position of the motor is 500 and <see cref="M:Tinkerforge.BrickSilentStepper.SetTargetPosition(System.Int32)" /> is
            called with 1000, the stepper motor will drive 500 steps forward. It will
            use the velocity, acceleration and deacceleration as set by
            <see cref="M:Tinkerforge.BrickSilentStepper.SetMaxVelocity(System.Int32)" /> and <see cref="M:Tinkerforge.BrickSilentStepper.SetSpeedRamping(System.Int32,System.Int32)" />.
            A call of <see cref="M:Tinkerforge.BrickSilentStepper.SetTargetPosition(System.Int32)" /> with the parameter *x* is equivalent to
            a call of <see cref="M:Tinkerforge.BrickSilentStepper.SetSteps(System.Int32)" /> with the parameter
            (*x* - <see cref="M:Tinkerforge.BrickSilentStepper.GetCurrentPosition" />).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetTargetPosition">
            <summary>
            Returns the last target position as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetTargetPosition(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetSteps(System.Int32)">
            <summary>
            Sets the number of steps the stepper motor should run. Positive values
            will drive the motor forward and negative values backward.
            The velocity, acceleration and deacceleration as set by
            <see cref="M:Tinkerforge.BrickSilentStepper.SetMaxVelocity(System.Int32)" /> and <see cref="M:Tinkerforge.BrickSilentStepper.SetSpeedRamping(System.Int32,System.Int32)" /> will be used.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetSteps">
            <summary>
            Returns the last steps as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetSteps(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetRemainingSteps">
            <summary>
            Returns the remaining steps of the last call of <see cref="M:Tinkerforge.BrickSilentStepper.SetSteps(System.Int32)" />.
            For example, if <see cref="M:Tinkerforge.BrickSilentStepper.SetSteps(System.Int32)" /> is called with 2000 and
            <see cref="M:Tinkerforge.BrickSilentStepper.GetRemainingSteps" /> is called after the motor has run for 500 steps,
            it will return 1500.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetStepConfiguration(System.Byte,System.Boolean)">
            <summary>
            Sets the step resolution from full-step up to 1/256-step.
            If interpolation is turned on, the Silent Stepper Brick will always interpolate
            your step inputs as 1/256-step. If you use full-step mode with interpolation, each
            step will generate 256 1/256 steps.
            For maximum torque use full-step without interpolation. For maximum resolution use
            1/256-step. Turn interpolation on to make the Stepper driving less noisy.
            If you often change the speed with high acceleration you should turn the
            interpolation off.
            The default is 1/256-step with interpolation on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetStepConfiguration(System.Byte@,System.Boolean@)">
            <summary>
            Returns the step mode as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetStepConfiguration(System.Byte,System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.DriveForward">
            <summary>
            Drives the stepper motor forward until <see cref="M:Tinkerforge.BrickSilentStepper.DriveBackward" /> or
            <see cref="M:Tinkerforge.BrickSilentStepper.Stop" /> is called. The velocity, acceleration and deacceleration as
            set by <see cref="M:Tinkerforge.BrickSilentStepper.SetMaxVelocity(System.Int32)" /> and <see cref="M:Tinkerforge.BrickSilentStepper.SetSpeedRamping(System.Int32,System.Int32)" /> will be used.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.DriveBackward">
            <summary>
            Drives the stepper motor backward until <see cref="M:Tinkerforge.BrickSilentStepper.DriveForward" /> or
            <see cref="M:Tinkerforge.BrickSilentStepper.Stop" /> is triggered. The velocity, acceleration and deacceleration as
            set by <see cref="M:Tinkerforge.BrickSilentStepper.SetMaxVelocity(System.Int32)" /> and <see cref="M:Tinkerforge.BrickSilentStepper.SetSpeedRamping(System.Int32,System.Int32)" /> will be used.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.Stop">
            <summary>
            Stops the stepper motor with the deacceleration as set by
            <see cref="M:Tinkerforge.BrickSilentStepper.SetSpeedRamping(System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetStackInputVoltage">
            <summary>
            Returns the stack input voltage in mV. The stack input voltage is the
            voltage that is supplied via the stack, i.e. it is given by a
            Step-Down or Step-Up Power Supply.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetExternalInputVoltage">
            <summary>
            Returns the external input voltage in mV. The external input voltage is
            given via the black power input connector on the Slient Stepper Brick.
            If there is an external input voltage and a stack input voltage, the motor
            will be driven by the external input voltage. If there is only a stack
            voltage present, the motor will be driven by this voltage.
            <note type="caution">
            This means, if you have a high stack voltage and a low external voltage,
            the motor will be driven with the low external voltage. If you then remove
            the external connection, it will immediately be driven by the high
            stack voltage
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetMotorCurrent(System.Int32)">
            <summary>
            Sets the current in mA with which the motor will be driven.
            The minimum value is 360mA, the maximum value 1640mA and the
            default value is 800mA.
            <note type="caution">
            Do not set this value above the specifications of your stepper motor.
            Otherwise it may damage your motor.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetMotorCurrent">
            <summary>
            Returns the current as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetMotorCurrent(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.Enable">
            <summary>
            Enables the driver chip. The driver parameters can be configured (maximum velocity,
            acceleration, etc) before it is enabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.Disable">
            <summary>
            Disables the driver chip. The configurations are kept (maximum velocity,
            acceleration, etc) but the motor is not driven until it is enabled again.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.IsEnabled">
            <summary>
            Returns *true* if the driver chip is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetBasicConfiguration(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the basic configuration parameters for the different modes (Stealth, Coolstep, Classic).
            * Standstill Current: This value can be used to lower the current during stand still. This might
            be reasonable to reduce the heating of the motor and the Brick. When the motor is in standstill
            the configured motor phase current will be driven until the configured
            Power Down Time is elapsed. After that the phase current will be reduced to the standstill
            current. The elapsed time for this reduction can be configured with the Standstill Delay Time.
            The unit is in mA and the maximum allowed value is the configured maximum motor current
            (see <see cref="M:Tinkerforge.BrickSilentStepper.SetMotorCurrent(System.Int32)" />).
            * Motor Run Current: The value sets the motor current when the motor is running.
            Use a value of at least one half of the global maximum motor current for a good
            microstep performance. The unit is in mA and the maximum allowed value is the current
            motor current. The API maps the entered value to 1/32 ... 32/32 of the maximum
            motor current. This value should be used to change the motor current during motor movement,
            whereas the global maximum motor current should not be changed while the motor is moving
            (see <see cref="M:Tinkerforge.BrickSilentStepper.SetMotorCurrent(System.Int32)" />).
            * Standstill Delay Time: Controls the duration for motor power down after a motion
            as soon as standstill is detected and the Power Down Time is expired. A high Standstill Delay
            Time results in a smooth transition that avoids motor jerk during power down.
            The value range is 0 to 307ms
            * Power Down Time: Sets the delay time after a stand still.
            The value range is 0 to 5222ms.
            * Stealth Threshold: Sets the upper threshold for Stealth mode in steps/s. The value range is
            0-65536 steps/s. If the velocity of the motor goes above this value, Stealth mode is turned
            off. Otherwise it is turned on. In Stealth mode the torque declines with high speed.
            * Coolstep Threshold: Sets the lower threshold for Coolstep mode in steps/s. The value range is
            0-65536 steps/s. The Coolstep Threshold needs to be above the Stealth Threshold.
            * Classic Threshold: Sets the lower threshold for classic mode. The value range is
            0-65536 steps/s. In classic mode the stepper becomes more noisy, but the torque is maximized.
            * High Velocity Shopper Mode: If High Velocity Shopper Mode is enabled, the stepper control
            is optimized to run the stepper motors at high velocities.
            If you want to use all three thresholds make sure that
            Stealth Threshold &lt; Coolstep Threshold &lt; Classic Threshold.
            The default values are:
            * Standstill Current: 200
            * Motor Run Current: 800
            * Standstill Delay Time: 0
            * Power Down Time: 1000
            * Stealth Threshold: 500
            * Coolstep Threshold: 500
            * Classic Threshold: 1000
            * High Velocity Shopper Mode: false
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetBasicConfiguration(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetBasicConfiguration(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetSpreadcycleConfiguration(System.Byte,System.Boolean,System.Byte,System.Byte,System.Int16,System.Int16,System.Byte,System.Byte,System.Boolean)">
            <summary>
            Note: If you don't know what any of this means you can very likely keep all of
            the values as default!
            Sets the Spreadcycle configuration parameters. Spreadcycle is a chopper algorithm which actively
            controls the motor current flow. More information can be found in the TMC2130 datasheet on page
            47 (7 spreadCycle and Classic Chopper).
            * Slow Decay Duration: Controls duration of off time setting of slow decay phase. The value
            range is 0-15. 0 = driver disabled, all bridges off. Use 1 only with Comparator Blank time &gt;= 2.
            * Enable Random Slow Decay: Set to false to fix chopper off time as set by Slow Decay Duration.
            If you set it to true, Decay Duration is randomly modulated.
            * Fast Decay Duration: Sets the fast decay duration. The value range is 0-15. This parameters is
            only used if the Chopper Mode is set to Fast Decay.
            * Hysteresis Start Value: Sets the hysteresis start value. The value range is 0-7. This parameter is
            only used if the Chopper Mode is set to Spread Cycle.
            * Hysteresis End Value: Sets the hysteresis end value. The value range is -3 to 12. This parameter is
            only used if the Chopper Mode is set to Spread Cycle.
            * Sine Wave Offset: Sets the sine wave offset. The value range is -3 to 12. This parameters is
            only used if the Chopper Mode is set to Fast Decay. 1/512 of the value becomes added to the absolute
            value of the sine wave.
            * Chopper Mode: 0 = Spread Cycle, 1 = Fast Decay.
            * Comparator Blank Time: Sets the blank time of the comparator. Available values are
            * 0 = 16 clocks,
            * 1 = 24 clocks,
            * 2 = 36 clocks and
            * 3 = 54 clocks.
            A value of 1 or 2 is recommended for most applications.
            * Fast Decay Without Comparator: If set to true the current comparator usage for termination of the
            fast decay cycle is disabled.
            The default values are:
            * Slow Decay Duration: 4
            * Enable Random Slow Decay: 0
            * Fast Decay Duration: 0
            * Hysteresis Start Value: 0
            * Hysteresis End Value: 0
            * Sine Wave Offset: 0
            * Chopper Mode: 0
            * Comparator Blank Time: 1
            * Fast Decay Without Comparator: false
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetSpreadcycleConfiguration(System.Byte@,System.Boolean@,System.Byte@,System.Byte@,System.Int16@,System.Int16@,System.Byte@,System.Byte@,System.Boolean@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetBasicConfiguration(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetStealthConfiguration(System.Boolean,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Byte)">
            <summary>
            Note: If you don't know what any of this means you can very likely keep all of
            the values as default!
            Sets the configuration relevant for Stealth mode.
            * Enable Stealth: If set to true the stealth mode is enabled, if set to false the
            stealth mode is disabled, even if the speed is below the threshold set in <see cref="M:Tinkerforge.BrickSilentStepper.SetBasicConfiguration(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)" />.
            * Amplitude: If autoscale is disabled, the PWM amplitude is scaled by this value. If autoscale is enabled,
            this value defines the maximum PWM amplitude change per half wave. The value range is 0-255.
            * Gradient: If autoscale is disabled, the PWM gradient is scaled by this value. If autoscale is enabled,
            this value defines the maximum PWM gradient. With autoscale a value above 64 is recommended,
            otherwise the regulation might not be able to measure the current. The value range is 0-255.
            * Enable Autoscale: If set to true, automatic current control is used. Otherwise the user defined
            amplitude and gradient are used.
            * Force Symmetric: If true, A symmetric PWM cycle is enforced. Otherwise the PWM value may change within each
            PWM cycle.
            * Freewheel Mode: The freewheel mode defines the behavior in stand still if the Standstill Current
            (see <see cref="M:Tinkerforge.BrickSilentStepper.SetBasicConfiguration(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)" />) is set to 0.
            The default values are:
            * Enable Stealth: true
            * Amplitude: 128
            * Gradient: 4
            * Enable Autoscale: true
            * Force Symmetric: false
            * Freewheel Mode: 0 (Normal)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetStealthConfiguration(System.Boolean@,System.Byte@,System.Byte@,System.Boolean@,System.Boolean@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetStealthConfiguration(System.Boolean,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetCoolstepConfiguration(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Int16,System.Byte)">
            <summary>
            Note: If you don't know what any of this means you can very likely keep all of
            the values as default!
            Sets the configuration relevant for Coolstep.
            * Minimum Stallguard Value: If the Stallguard result falls below this value*32, the motor current
            is increased to reduce motor load angle. The value range is 0-15. A value of 0 turns Coolstep off.
            * Maximum Stallguard Value: If the Stallguard result goes above
            (Min Stallguard Value + Max Stallguard Value + 1) * 32, the motor current is decreased to save
            energy.
            * Current Up Step Width: Sets the up step increment per Stallguard value. The value range is 0-3,
            corresponding to the increments 1, 2, 4 and 8.
            * Current Down Step Width: Sets the down step decrement per Stallguard value. The value range is 0-3,
            corresponding to the decrements 1, 2, 8 and 16.
            * Minimum Current: Sets the minimum current for Coolstep current control. You can choose between
            half and quarter of the run current.
            * Stallguard Threshold Value: Sets the level for stall output (see <see cref="M:Tinkerforge.BrickSilentStepper.GetDriverStatus(System.Byte@,System.Byte@,System.Byte@,System.Boolean@,System.Byte@,System.Boolean@,System.Byte@,System.Byte@)" />). The value
            range is -64 to +63. A lower value gives a higher sensitivity. You have to find a suitable value for your
            motor by trial and error, 0 works for most motors.
            * Stallguard Mode: Set to 0 for standard resolution or 1 for filtered mode. In filtered mode the Stallguard
            signal will be updated every four full-steps.
            The default values are:
            * Minimum Stallguard Value: 2
            * Maximum Stallguard Value: 10
            * Current Up Step Width: 0
            * Current Down Step Width: 0
            * Minimum Current: 0
            * Stallguard Threshold Value: 0
            * Stallguard Mode: 0
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetCoolstepConfiguration(System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Int16@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetCoolstepConfiguration(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Int16,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetMiscConfiguration(System.Boolean,System.Byte)">
            <summary>
            Note: If you don't know what any of this means you can very likely keep all of
            the values as default!
            Sets miscellaneous configuration parameters.
            * Disable Short To Ground Protection: Set to false to enable short to ground protection, otherwise
            it is disabled.
            * Synchronize Phase Frequency: With this parameter you can synchronize the chopper for both phases
            of a two phase motor to avoid the occurrence of a beat. The value range is 0-15. If set to 0,
            the synchronization is turned off. Otherwise the synchronization is done through the formula
            f_sync = f_clk/(value*64). In Classic Mode the synchronization is automatically switched off.
            f_clk is 12.8MHz.
            The default values are:
            * Disable Short To Ground Protection: 0
            * Synchronize Phase Frequency: 0
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetMiscConfiguration(System.Boolean@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetMiscConfiguration(System.Boolean,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetDriverStatus(System.Byte@,System.Byte@,System.Byte@,System.Boolean@,System.Byte@,System.Boolean@,System.Byte@,System.Byte@)">
            <summary>
            Returns the current driver status.
            * Open Load: Indicates if an open load is present on phase A, B or both. This could mean that there is a problem
            with the wiring of the motor. False detection can occur in fast motion as well as during stand still.
            * Short To Ground: Indicates if a short to ground is present on phase A, B or both. If this is detected the driver
            automatically becomes disabled and stays disabled until it is enabled again manually.
            * Over Temperature: The over temperature indicator switches to "Warning" if the driver IC warms up. The warning flag
            is expected during long duration stepper uses. If the temperature limit is reached the indicator switches
            to "Limit". In this case the driver becomes disabled until it cools down again.
            * Motor Stalled: Is true if a motor stall was detected.
            * Actual Motor Current: Indicates the actual current control scaling as used in Coolstep mode.
            The returned value is between 0 and 31. It represents a multiplier of 1/32 to 32/32 of the
            ``Motor Run Current`` as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetBasicConfiguration(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)" />. Example: If a ``Motor Run Current``
            of 1000mA was set and the returned value is 15, the ``Actual Motor Current`` is 16/32*1000mA = 500mA.
            * Stallguard Result: Indicates the load of the motor. A lower value signals a higher load. Per trial and error
            you can find out which value corresponds to a suitable torque for the velocity used in your application.
            After that you can use this threshold value to find out if a motor stall becomes probable and react on it (e.g.
            decrease velocity).
            During stand still this value can not be used for stall detection, it shows the chopper on-time for motor coil A.
            * Stealth Voltage Amplitude: Shows the actual PWM scaling. In Stealth mode it can be used to detect motor load and
            stall if autoscale is enabled (see <see cref="M:Tinkerforge.BrickSilentStepper.SetStealthConfiguration(System.Boolean,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Byte)" />).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetMinimumVoltage(System.Int32)">
            <summary>
            Sets the minimum voltage in mV, below which the <see cref="E:Tinkerforge.BrickSilentStepper.UnderVoltageCallback" /> callback
            is triggered. The minimum possible value that works with the Slient Stepper
            Brick is 8V.
            You can use this function to detect the discharge of a battery that is used
            to drive the stepper motor. If you have a fixed power supply, you likely do
            not need this functionality.
            The default value is 8V.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetMinimumVoltage">
            <summary>
            Returns the minimum voltage as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetMinimumVoltage(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetTimeBase(System.Int64)">
            <summary>
            Sets the time base of the velocity and the acceleration of the Silent Stepper
            Brick (in seconds).
            For example, if you want to make one step every 1.5 seconds, you can set
            the time base to 15 and the velocity to 10. Now the velocity is
            10steps/15s = 1steps/1.5s.
            The default value is 1.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetTimeBase">
            <summary>
            Returns the time base as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetTimeBase(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetAllData(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the following parameters: The current velocity,
            the current position, the remaining steps, the stack voltage, the external
            voltage and the current consumption of the stepper motor.
            The current consumption is calculated by multiplying the ``Actual Motor Current``
            value (see <see cref="M:Tinkerforge.BrickSilentStepper.SetBasicConfiguration(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)" />) with the ``Motor Run Current``
            (see <see cref="M:Tinkerforge.BrickSilentStepper.GetDriverStatus(System.Byte@,System.Byte@,System.Byte@,System.Boolean@,System.Byte@,System.Boolean@,System.Byte@,System.Byte@)" />). This is an internal calculation of the
            driver, not an independent external measurement.
            The current consumption calculation was broken up to firmware 2.0.1, it is fixed
            since firmware 2.0.2.
            There is also a callback for this function, see <see cref="E:Tinkerforge.BrickSilentStepper.AllDataCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetAllDataPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickSilentStepper.AllDataCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetAllDataPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetAllDataPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)">
            <summary>
            The SPITF protocol can be used with a dynamic baudrate. If the dynamic baudrate is
            enabled, the Brick will try to adapt the baudrate for the communication
            between Bricks and Bricklets according to the amount of data that is transferred.
            The baudrate will be increased exponetially if lots of data is send/receieved and
            decreased linearly if little data is send/received.
            This lowers the baudrate in applications where little data is transferred (e.g.
            a weather station) and increases the robustness. If there is lots of data to transfer
            (e.g. Thermal Imaging Bricklet) it automatically increases the baudrate as needed.
            In cases where some data has to transferred as fast as possible every few seconds
            (e.g. RS485 Bricklet with a high baudrate but small payload) you may want to turn
            the dynamic baudrate off to get the highest possible performance.
            The maximum value of the baudrate can be set per port with the function
            <see cref="M:Tinkerforge.BrickSilentStepper.SetSPITFPBaudrate(System.Char,System.Int64)" />. If the dynamic baudrate is disabled, the baudrate
            as set by <see cref="M:Tinkerforge.BrickSilentStepper.SetSPITFPBaudrate(System.Char,System.Int64)" /> will be used statically.
            The minimum dynamic baudrate has a value range of 400000 to 2000000 baud.
            By default dynamic baudrate is enabled and the minimum dynamic baudrate is 400000.
            .. versionadded:: 2.0.4$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetSPITFPBaudrateConfig(System.Boolean@,System.Int64@)">
            <summary>
            Returns the baudrate config, see <see cref="M:Tinkerforge.BrickSilentStepper.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />.
            .. versionadded:: 2.0.4$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetSendTimeoutCount(System.Byte)">
            <summary>
            Returns the timeout count for the different communication methods.
            The methods 0-2 are available for all Bricks, 3-7 only for Master Bricks.
            This function is mostly used for debugging during development, in normal operation
            the counters should nearly always stay at 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.SetSPITFPBaudrate(System.Char,System.Int64)">
            <summary>
            Sets the baudrate for a specific Bricklet port ('a' - 'd'). The
            baudrate can be in the range 400000 to 2000000.
            If you want to increase the throughput of Bricklets you can increase
            the baudrate. If you get a high error count because of high
            interference (see <see cref="M:Tinkerforge.BrickSilentStepper.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)" />) you can decrease the
            baudrate.
            If the dynamic baudrate feature is enabled, the baudrate set by this
            function corresponds to the maximum baudrate (see <see cref="M:Tinkerforge.BrickSilentStepper.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />).
            Regulatory testing is done with the default baudrate. If CE compatability
            or similar is necessary in you applications we recommend to not change
            the baudrate.
            The default baudrate for all ports is 1400000.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetSPITFPBaudrate(System.Char)">
            <summary>
            Returns the baudrate for a given Bricklet port, see <see cref="M:Tinkerforge.BrickSilentStepper.SetSPITFPBaudrate(System.Char,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the error count for the communication between Brick and Bricklet.
            The errors are divided into
            * ACK checksum errors,
            * message checksum errors,
            * frameing errors and
            * overflow errors.
            The errors counts are for errors that occur on the Brick side. All
            Bricklets have a similar function that returns the errors on the Bricklet side.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.EnableStatusLED">
            <summary>
            Enables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.DisableStatusLED">
            <summary>
            Disables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.IsStatusLEDEnabled">
            <summary>
            Returns *true* if the status LED is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetProtocol1BrickletName(System.Char,System.Byte@,System.Byte[]@,System.String@)">
            <summary>
            Returns the firmware and protocol version and the name of the Bricklet for a
            given port.
            This functions sole purpose is to allow automatic flashing of v1.x.y Bricklet
            plugins.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetChipTemperature">
            <summary>
            Returns the temperature in °C/10 as measured inside the microcontroller. The
            value returned is not the ambient temperature!
            The temperature is only proportional to the real temperature and it has an
            accuracy of +-15%. Practically it is only useful as an indicator for
            temperature changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.Reset">
            <summary>
            Calling this function will reset the Brick. Calling this function
            on a Brick inside of a stack will reset the whole stack.
            After a reset you have to create new device objects,
            calling functions on the existing ones will result in
            undefined behavior!
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Brick is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be '0'-'8' (stack position).
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.OnUnderVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.OnPositionReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.OnAllDataCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickSilentStepper.OnNewStateCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickStepper">
            <summary>
            Drives one bipolar stepper motor with up to 38V and 2.5A per phase
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_MAX_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_MAX_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_CURRENT_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_SPEED_RAMPING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_SPEED_RAMPING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_FULL_BRAKE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_CURRENT_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_CURRENT_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_TARGET_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_TARGET_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_STEPS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_STEPS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_REMAINING_STEPS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_STEP_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_STEP_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_DRIVE_FORWARD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_DRIVE_BACKWARD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_STOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_STACK_INPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_EXTERNAL_INPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_CURRENT_CONSUMPTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_MOTOR_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_MOTOR_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_ENABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_DISABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_IS_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_DECAY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_DECAY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_MINIMUM_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_MINIMUM_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_SYNC_RECT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_IS_SYNC_RECT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_TIME_BASE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_TIME_BASE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_ALL_DATA">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_ALL_DATA_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_ALL_DATA_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_SPITFP_BAUDRATE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_SEND_TIMEOUT_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_SET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_SPITFP_BAUDRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_SPITFP_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_ENABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_DISABLE_STATUS_LED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_IS_STATUS_LED_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_PROTOCOL1_BRICKLET_NAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_RESET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STEP_MODE_FULL_STEP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STEP_MODE_HALF_STEP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STEP_MODE_QUARTER_STEP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STEP_MODE_EIGHTH_STEP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STATE_STOP">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STATE_ACCELERATION">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STATE_RUN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STATE_DEACCELERATION">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STATE_DIRECTION_CHANGE_TO_FORWARD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.STATE_DIRECTION_CHANGE_TO_BACKWARD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.COMMUNICATION_METHOD_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.COMMUNICATION_METHOD_USB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.COMMUNICATION_METHOD_SPI_STACK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.COMMUNICATION_METHOD_CHIBI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.COMMUNICATION_METHOD_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.COMMUNICATION_METHOD_WIFI">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.COMMUNICATION_METHOD_ETHERNET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickStepper.COMMUNICATION_METHOD_WIFI_V2">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickStepper.UnderVoltageCallback">
            <summary>
            This callback is triggered when the input voltage drops below the value set by
            <see cref="M:Tinkerforge.BrickStepper.SetMinimumVoltage(System.Int32)" />. The parameter is the current voltage given
            in mV.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickStepper.UnderVoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickStepper.UnderVoltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickStepper.PositionReachedCallback">
            <summary>
            This callback is triggered when a position set by <see cref="M:Tinkerforge.BrickStepper.SetSteps(System.Int32)" /> or
            <see cref="M:Tinkerforge.BrickStepper.SetTargetPosition(System.Int32)" /> is reached.
            <note>
            Since we can't get any feedback from the stepper motor, this only works if the
            acceleration (see <see cref="M:Tinkerforge.BrickStepper.SetSpeedRamping(System.Int32,System.Int32)" />) is set smaller or equal to the
            maximum acceleration of the motor. Otherwise the motor will lag behind the
            control value and the callback will be triggered too early.
            </note></summary>
        </member>
        <member name="T:Tinkerforge.BrickStepper.PositionReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickStepper.PositionReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickStepper.AllDataCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickStepper.SetAllDataPeriod(System.Int64)" />. The parameters are: the current velocity,
            the current position, the remaining steps, the stack voltage, the external
            voltage and the current consumption of the stepper motor.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickStepper.AllDataEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickStepper.AllData">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickStepper.NewStateCallback">
            <summary>
            This callback is triggered whenever the Stepper Brick enters a new state.
            It returns the new state as well as the previous state.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickStepper.NewStateEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickStepper.NewState">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetMaxVelocity(System.Int32)">
            <summary>
            Sets the maximum velocity of the stepper motor in steps per second.
            This function does *not* start the motor, it merely sets the maximum
            velocity the stepper motor is accelerated to. To get the motor running use
            either <see cref="M:Tinkerforge.BrickStepper.SetTargetPosition(System.Int32)" />, <see cref="M:Tinkerforge.BrickStepper.SetSteps(System.Int32)" />, <see cref="M:Tinkerforge.BrickStepper.DriveForward" /> or
            <see cref="M:Tinkerforge.BrickStepper.DriveBackward" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetMaxVelocity">
            <summary>
            Returns the velocity as set by <see cref="M:Tinkerforge.BrickStepper.SetMaxVelocity(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetCurrentVelocity">
            <summary>
            Returns the *current* velocity of the stepper motor in steps per second.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetSpeedRamping(System.Int32,System.Int32)">
            <summary>
            Sets the acceleration and deacceleration of the stepper motor. The values
            are given in *steps/s²*. An acceleration of 1000 means, that
            every second the velocity is increased by 1000 *steps/s*.
            For example: If the current velocity is 0 and you want to accelerate to a
            velocity of 8000 *steps/s* in 10 seconds, you should set an acceleration
            of 800 *steps/s²*.
            An acceleration/deacceleration of 0 means instantaneous
            acceleration/deacceleration (not recommended)
            The default value is 1000 for both
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetSpeedRamping(System.Int32@,System.Int32@)">
            <summary>
            Returns the acceleration and deacceleration as set by
            <see cref="M:Tinkerforge.BrickStepper.SetSpeedRamping(System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.FullBrake">
            <summary>
            Executes an active full brake.
            <note type="caution">
            This function is for emergency purposes,
            where an immediate brake is necessary. Depending on the current velocity and
            the strength of the motor, a full brake can be quite violent.
            </note>
            Call <see cref="M:Tinkerforge.BrickStepper.Stop" /> if you just want to stop the motor.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetCurrentPosition(System.Int32)">
            <summary>
            Sets the current steps of the internal step counter. This can be used to
            set the current position to 0 when some kind of starting position
            is reached (e.g. when a CNC machine reaches a corner).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetCurrentPosition">
            <summary>
            Returns the current position of the stepper motor in steps. On startup
            the position is 0. The steps are counted with all possible driving
            functions (<see cref="M:Tinkerforge.BrickStepper.SetTargetPosition(System.Int32)" />, <see cref="M:Tinkerforge.BrickStepper.SetSteps(System.Int32)" />, <see cref="M:Tinkerforge.BrickStepper.DriveForward" /> or
            <see cref="M:Tinkerforge.BrickStepper.DriveBackward" />). It also is possible to reset the steps to 0 or
            set them to any other desired value with <see cref="M:Tinkerforge.BrickStepper.SetCurrentPosition(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetTargetPosition(System.Int32)">
            <summary>
            Sets the target position of the stepper motor in steps. For example,
            if the current position of the motor is 500 and <see cref="M:Tinkerforge.BrickStepper.SetTargetPosition(System.Int32)" /> is
            called with 1000, the stepper motor will drive 500 steps forward. It will
            use the velocity, acceleration and deacceleration as set by
            <see cref="M:Tinkerforge.BrickStepper.SetMaxVelocity(System.Int32)" /> and <see cref="M:Tinkerforge.BrickStepper.SetSpeedRamping(System.Int32,System.Int32)" />.
            A call of <see cref="M:Tinkerforge.BrickStepper.SetTargetPosition(System.Int32)" /> with the parameter *x* is equivalent to
            a call of <see cref="M:Tinkerforge.BrickStepper.SetSteps(System.Int32)" /> with the parameter
            (*x* - <see cref="M:Tinkerforge.BrickStepper.GetCurrentPosition" />).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetTargetPosition">
            <summary>
            Returns the last target position as set by <see cref="M:Tinkerforge.BrickStepper.SetTargetPosition(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetSteps(System.Int32)">
            <summary>
            Sets the number of steps the stepper motor should run. Positive values
            will drive the motor forward and negative values backward.
            The velocity, acceleration and deacceleration as set by
            <see cref="M:Tinkerforge.BrickStepper.SetMaxVelocity(System.Int32)" /> and <see cref="M:Tinkerforge.BrickStepper.SetSpeedRamping(System.Int32,System.Int32)" /> will be used.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetSteps">
            <summary>
            Returns the last steps as set by <see cref="M:Tinkerforge.BrickStepper.SetSteps(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetRemainingSteps">
            <summary>
            Returns the remaining steps of the last call of <see cref="M:Tinkerforge.BrickStepper.SetSteps(System.Int32)" />.
            For example, if <see cref="M:Tinkerforge.BrickStepper.SetSteps(System.Int32)" /> is called with 2000 and
            <see cref="M:Tinkerforge.BrickStepper.GetRemainingSteps" /> is called after the motor has run for 500 steps,
            it will return 1500.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetStepMode(System.Byte)">
            <summary>
            Sets the step mode of the stepper motor. Possible values are:
            * Full Step = 1
            * Half Step = 2
            * Quarter Step = 4
            * Eighth Step = 8
            A higher value will increase the resolution and
            decrease the torque of the stepper motor.
            The default value is 8 (Eighth Step).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetStepMode">
            <summary>
            Returns the step mode as set by <see cref="M:Tinkerforge.BrickStepper.SetStepMode(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.DriveForward">
            <summary>
            Drives the stepper motor forward until <see cref="M:Tinkerforge.BrickStepper.DriveBackward" /> or
            <see cref="M:Tinkerforge.BrickStepper.Stop" /> is called. The velocity, acceleration and deacceleration as
            set by <see cref="M:Tinkerforge.BrickStepper.SetMaxVelocity(System.Int32)" /> and <see cref="M:Tinkerforge.BrickStepper.SetSpeedRamping(System.Int32,System.Int32)" /> will be used.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.DriveBackward">
            <summary>
            Drives the stepper motor backward until <see cref="M:Tinkerforge.BrickStepper.DriveForward" /> or
            <see cref="M:Tinkerforge.BrickStepper.Stop" /> is triggered. The velocity, acceleration and deacceleration as
            set by <see cref="M:Tinkerforge.BrickStepper.SetMaxVelocity(System.Int32)" /> and <see cref="M:Tinkerforge.BrickStepper.SetSpeedRamping(System.Int32,System.Int32)" /> will be used.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.Stop">
            <summary>
            Stops the stepper motor with the deacceleration as set by
            <see cref="M:Tinkerforge.BrickStepper.SetSpeedRamping(System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetStackInputVoltage">
            <summary>
            Returns the stack input voltage in mV. The stack input voltage is the
            voltage that is supplied via the stack, i.e. it is given by a
            Step-Down or Step-Up Power Supply.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetExternalInputVoltage">
            <summary>
            Returns the external input voltage in mV. The external input voltage is
            given via the black power input connector on the Stepper Brick.
            If there is an external input voltage and a stack input voltage, the motor
            will be driven by the external input voltage. If there is only a stack
            voltage present, the motor will be driven by this voltage.
            <note type="caution">
            This means, if you have a high stack voltage and a low external voltage,
            the motor will be driven with the low external voltage. If you then remove
            the external connection, it will immediately be driven by the high
            stack voltage
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetCurrentConsumption">
            <summary>
            Returns the current consumption of the motor in mA.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetMotorCurrent(System.Int32)">
            <summary>
            Sets the current in mA with which the motor will be driven.
            The minimum value is 100mA, the maximum value 2291mA and the
            default value is 800mA.
            <note type="caution">
            Do not set this value above the specifications of your stepper motor.
            Otherwise it may damage your motor.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetMotorCurrent">
            <summary>
            Returns the current as set by <see cref="M:Tinkerforge.BrickStepper.SetMotorCurrent(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.Enable">
            <summary>
            Enables the driver chip. The driver parameters can be configured (maximum velocity,
            acceleration, etc) before it is enabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.Disable">
            <summary>
            Disables the driver chip. The configurations are kept (maximum velocity,
            acceleration, etc) but the motor is not driven until it is enabled again.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.IsEnabled">
            <summary>
            Returns *true* if the driver chip is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetDecay(System.Int32)">
            <summary>
            Sets the decay mode of the stepper motor. The possible value range is
            between 0 and 65535. A value of 0 sets the fast decay mode, a value of
            65535 sets the slow decay mode and a value in between sets the mixed
            decay mode.
            Changing the decay mode is only possible if synchronous rectification
            is enabled (see <see cref="M:Tinkerforge.BrickStepper.SetSyncRect(System.Boolean)" />).
            For a good explanation of the different decay modes see
            `this &lt;http://ebldc.com/?p=86/&gt;`__ blog post by Avayan.
            A good decay mode is unfortunately different for every motor. The best
            way to work out a good decay mode for your stepper motor, if you can't
            measure the current with an oscilloscope, is to listen to the sound of
            the motor. If the value is too low, you often hear a high pitched
            sound and if it is too high you can often hear a humming sound.
            Generally, fast decay mode (small value) will be noisier but also
            allow higher motor speeds.
            The default value is 10000.
            <note>
            There is unfortunately no formula to calculate a perfect decay
            mode for a given stepper motor. If you have problems with loud noises
            or the maximum motor speed is too slow, you should try to tinker with
            the decay value
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetDecay">
            <summary>
            Returns the decay mode as set by <see cref="M:Tinkerforge.BrickStepper.SetDecay(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetMinimumVoltage(System.Int32)">
            <summary>
            Sets the minimum voltage in mV, below which the <see cref="E:Tinkerforge.BrickStepper.UnderVoltageCallback" /> callback
            is triggered. The minimum possible value that works with the Stepper Brick is 8V.
            You can use this function to detect the discharge of a battery that is used
            to drive the stepper motor. If you have a fixed power supply, you likely do
            not need this functionality.
            The default value is 8V.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetMinimumVoltage">
            <summary>
            Returns the minimum voltage as set by <see cref="M:Tinkerforge.BrickStepper.SetMinimumVoltage(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetSyncRect(System.Boolean)">
            <summary>
            Turns synchronous rectification on or off (*true* or *false*).
            With synchronous rectification on, the decay can be changed
            (see <see cref="M:Tinkerforge.BrickStepper.SetDecay(System.Int32)" />). Without synchronous rectification fast
            decay is used.
            For an explanation of synchronous rectification see
            `here &lt;https://en.wikipedia.org/wiki/Active_rectification&gt;`__.
            <note type="caution">
            If you want to use high speeds (&gt; 10000 steps/s) for a large
            stepper motor with a large inductivity we strongly
            suggest that you disable synchronous rectification. Otherwise the
            Brick may not be able to cope with the load and overheat.
            </note>
            The default value is *false*.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.IsSyncRect">
            <summary>
            Returns *true* if synchronous rectification is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetTimeBase(System.Int64)">
            <summary>
            Sets the time base of the velocity and the acceleration of the stepper brick
            (in seconds).
            For example, if you want to make one step every 1.5 seconds, you can set
            the time base to 15 and the velocity to 10. Now the velocity is
            10steps/15s = 1steps/1.5s.
            The default value is 1.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetTimeBase">
            <summary>
            Returns the time base as set by <see cref="M:Tinkerforge.BrickStepper.SetTimeBase(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetAllData(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the following parameters: The current velocity,
            the current position, the remaining steps, the stack voltage, the external
            voltage and the current consumption of the stepper motor.
            There is also a callback for this function, see <see cref="E:Tinkerforge.BrickStepper.AllDataCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetAllDataPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickStepper.AllDataCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetAllDataPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickStepper.SetAllDataPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)">
            <summary>
            The SPITF protocol can be used with a dynamic baudrate. If the dynamic baudrate is
            enabled, the Brick will try to adapt the baudrate for the communication
            between Bricks and Bricklets according to the amount of data that is transferred.
            The baudrate will be increased exponetially if lots of data is send/receieved and
            decreased linearly if little data is send/received.
            This lowers the baudrate in applications where little data is transferred (e.g.
            a weather station) and increases the robustness. If there is lots of data to transfer
            (e.g. Thermal Imaging Bricklet) it automatically increases the baudrate as needed.
            In cases where some data has to transferred as fast as possible every few seconds
            (e.g. RS485 Bricklet with a high baudrate but small payload) you may want to turn
            the dynamic baudrate off to get the highest possible performance.
            The maximum value of the baudrate can be set per port with the function
            <see cref="M:Tinkerforge.BrickStepper.SetSPITFPBaudrate(System.Char,System.Int64)" />. If the dynamic baudrate is disabled, the baudrate
            as set by <see cref="M:Tinkerforge.BrickStepper.SetSPITFPBaudrate(System.Char,System.Int64)" /> will be used statically.
            The minimum dynamic baudrate has a value range of 400000 to 2000000 baud.
            By default dynamic baudrate is enabled and the minimum dynamic baudrate is 400000.
            .. versionadded:: 2.3.6$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetSPITFPBaudrateConfig(System.Boolean@,System.Int64@)">
            <summary>
            Returns the baudrate config, see <see cref="M:Tinkerforge.BrickStepper.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />.
            .. versionadded:: 2.3.6$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetSendTimeoutCount(System.Byte)">
            <summary>
            Returns the timeout count for the different communication methods.
            The methods 0-2 are available for all Bricks, 3-7 only for Master Bricks.
            This function is mostly used for debugging during development, in normal operation
            the counters should nearly always stay at 0.
            .. versionadded:: 2.3.4$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.SetSPITFPBaudrate(System.Char,System.Int64)">
            <summary>
            Sets the baudrate for a specific Bricklet port ('a' - 'd'). The
            baudrate can be in the range 400000 to 2000000.
            If you want to increase the throughput of Bricklets you can increase
            the baudrate. If you get a high error count because of high
            interference (see <see cref="M:Tinkerforge.BrickStepper.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)" />) you can decrease the
            baudrate.
            If the dynamic baudrate feature is enabled, the baudrate set by this
            function corresponds to the maximum baudrate (see <see cref="M:Tinkerforge.BrickStepper.SetSPITFPBaudrateConfig(System.Boolean,System.Int64)" />).
            Regulatory testing is done with the default baudrate. If CE compatability
            or similar is necessary in you applications we recommend to not change
            the baudrate.
            The default baudrate for all ports is 1400000.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetSPITFPBaudrate(System.Char)">
            <summary>
            Returns the baudrate for a given Bricklet port, see <see cref="M:Tinkerforge.BrickStepper.SetSPITFPBaudrate(System.Char,System.Int64)" />.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetSPITFPErrorCount(System.Char,System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the error count for the communication between Brick and Bricklet.
            The errors are divided into
            * ACK checksum errors,
            * message checksum errors,
            * frameing errors and
            * overflow errors.
            The errors counts are for errors that occur on the Brick side. All
            Bricklets have a similar function that returns the errors on the Bricklet side.
            .. versionadded:: 2.3.3$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.EnableStatusLED">
            <summary>
            Enables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.DisableStatusLED">
            <summary>
            Disables the status LED.
            The status LED is the blue LED next to the USB connector. If enabled is is
            on and it flickers if data is transfered. If disabled it is always off.
            The default state is enabled.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.IsStatusLEDEnabled">
            <summary>
            Returns *true* if the status LED is enabled, *false* otherwise.
            .. versionadded:: 2.3.1$nbsp;(Firmware)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetProtocol1BrickletName(System.Char,System.Byte@,System.Byte[]@,System.String@)">
            <summary>
            Returns the firmware and protocol version and the name of the Bricklet for a
            given port.
            This functions sole purpose is to allow automatic flashing of v1.x.y Bricklet
            plugins.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetChipTemperature">
            <summary>
            Returns the temperature in °C/10 as measured inside the microcontroller. The
            value returned is not the ambient temperature!
            The temperature is only proportional to the real temperature and it has an
            accuracy of +-15%. Practically it is only useful as an indicator for
            temperature changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.Reset">
            <summary>
            Calling this function will reset the Brick. Calling this function
            on a Brick inside of a stack will reset the whole stack.
            After a reset you have to create new device objects,
            calling functions on the existing ones will result in
            undefined behavior!
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Brick is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be '0'-'8' (stack position).
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.OnUnderVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.OnPositionReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.OnAllDataCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickStepper.OnNewStateCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAccelerometer">
            <summary>
            Measures acceleration in three axis
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_GET_ACCELERATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_SET_ACCELERATION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_GET_ACCELERATION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_SET_ACCELERATION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_GET_ACCELERATION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_GET_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_LED_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_LED_OFF">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_IS_LED_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_3HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_6HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_12HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_25HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_50HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_100HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_400HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_800HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.DATA_RATE_1600HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FULL_SCALE_2G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FULL_SCALE_4G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FULL_SCALE_6G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FULL_SCALE_8G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FULL_SCALE_16G">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FILTER_BANDWIDTH_800HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FILTER_BANDWIDTH_400HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FILTER_BANDWIDTH_200HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAccelerometer.FILTER_BANDWIDTH_50HZ">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAccelerometer.AccelerationCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletAccelerometer.SetAccelerationCallbackPeriod(System.Int64)" />. The parameters are the
            X, Y and Z acceleration.
            The <see cref="E:Tinkerforge.BrickletAccelerometer.AccelerationCallback" /> callback is only triggered if the acceleration has
            changed since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAccelerometer.AccelerationEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAccelerometer.Acceleration">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAccelerometer.AccelerationReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletAccelerometer.SetAccelerationCallbackThreshold(System.Char,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)" /> is reached.
            The parameters are the X, Y and Z acceleration.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletAccelerometer.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAccelerometer.AccelerationReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAccelerometer.AccelerationReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.GetAcceleration(System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the acceleration in x, y and z direction. The values
            are given in g/1000 (1g = 9.80665m/s²), not to be confused with grams.
            If you want to get the acceleration periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletAccelerometer.AccelerationCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletAccelerometer.SetAccelerationCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.SetAccelerationCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletAccelerometer.AccelerationCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletAccelerometer.AccelerationCallback" /> callback is only triggered if the acceleration has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.GetAccelerationCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletAccelerometer.SetAccelerationCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.SetAccelerationCallbackThreshold(System.Char,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletAccelerometer.AccelerationReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the acceleration is *outside* the min and max values"
            "'i'",    "Callback is triggered when the acceleration is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the acceleration is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the acceleration is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0, 0, 0, 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.GetAccelerationCallbackThreshold(System.Char@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletAccelerometer.SetAccelerationCallbackThreshold(System.Char,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletAccelerometer.AccelerationReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletAccelerometer.SetAccelerationCallbackThreshold(System.Char,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletAccelerometer.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.GetTemperature">
            <summary>
            Returns the temperature of the accelerometer in °C.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.SetConfiguration(System.Byte,System.Byte,System.Byte)">
            <summary>
            Configures the data rate, full scale range and filter bandwidth.
            Possible values are:
            * Data rate of 0Hz to 1600Hz.
            * Full scale range of -2G to +2G up to -16G to +16G.
            * Filter bandwidth between 50Hz and 800Hz.
            Decreasing data rate or full scale range will also decrease the noise on
            the data.
            The default values are 100Hz data rate, -4G to +4G range and 200Hz
            filter bandwidth.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.GetConfiguration(System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletAccelerometer.SetConfiguration(System.Byte,System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.LEDOn">
            <summary>
            Enables the LED on the Bricklet.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.LEDOff">
            <summary>
            Disables the LED on the Bricklet.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.IsLEDOn">
            <summary>
            Returns *true* if the LED is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.OnAccelerationCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAccelerometer.OnAccelerationReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAmbientLight">
            <summary>
            Measures ambient light up to 900lux
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_GET_ILLUMINANCE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_SET_ILLUMINANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_GET_ILLUMINANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_SET_ILLUMINANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_GET_ILLUMINANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLight.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLight.IlluminanceCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletAmbientLight.SetIlluminanceCallbackPeriod(System.Int64)" />. The parameter is the illuminance of the
            ambient light sensor.
            The <see cref="E:Tinkerforge.BrickletAmbientLight.IlluminanceCallback" /> callback is only triggered if the illuminance has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAmbientLight.IlluminanceEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLight.Illuminance">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLight.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletAmbientLight.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the analog value of the
            ambient light sensor.
            The <see cref="E:Tinkerforge.BrickletAmbientLight.AnalogValueCallback" /> callback is only triggered if the analog value has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAmbientLight.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLight.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLight.IlluminanceReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletAmbientLight.SetIlluminanceCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the illuminance of the ambient light sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletAmbientLight.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAmbientLight.IlluminanceReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLight.IlluminanceReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLight.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletAmbientLight.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the ambient light sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletAmbientLight.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAmbientLight.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLight.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.GetIlluminance">
            <summary>
            Returns the illuminance of the ambient light sensor. The value
            has a range of 0 to 9000 and is given in lux/10, i.e. a value
            of 4500 means that an illuminance of 450lux is measured.
            If you want to get the illuminance periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletAmbientLight.IlluminanceCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletAmbientLight.SetIlluminanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            <note>
            The value returned by <see cref="M:Tinkerforge.BrickletAmbientLight.GetIlluminance" /> is averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletAmbientLight.GetAnalogValue" /> gives back raw
            unfiltered analog values. The only reason to use <see cref="M:Tinkerforge.BrickletAmbientLight.GetAnalogValue" /> is,
            if you need the full resolution of the analog-to-digital converter.
            </note>
            Also, the analog-to-digital converter covers three different ranges that are
            set dynamically depending on the light intensity. It is impossible to
            distinguish between these ranges with the analog value.
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletAmbientLight.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletAmbientLight.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.SetIlluminanceCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletAmbientLight.IlluminanceCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletAmbientLight.IlluminanceCallback" /> callback is only triggered if the illuminance has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.GetIlluminanceCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletAmbientLight.SetIlluminanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletAmbientLight.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletAmbientLight.AnalogValueCallback" /> callback is only triggered if the analog value has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletAmbientLight.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.SetIlluminanceCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletAmbientLight.IlluminanceReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the illuminance is *outside* the min and max values"
            "'i'",    "Callback is triggered when the illuminance is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the illuminance is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the illuminance is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.GetIlluminanceCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletAmbientLight.SetIlluminanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletAmbientLight.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletAmbientLight.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletAmbientLight.IlluminanceReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletAmbientLight.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletAmbientLight.SetIlluminanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletAmbientLight.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletAmbientLight.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.OnIlluminanceCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.OnIlluminanceReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLight.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAmbientLightV2">
            <summary>
            Measures ambient light up to 64000lux
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_GET_ILLUMINANCE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_SET_ILLUMINANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_GET_ILLUMINANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_SET_ILLUMINANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_GET_ILLUMINANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.ILLUMINANCE_RANGE_UNLIMITED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.ILLUMINANCE_RANGE_64000LUX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.ILLUMINANCE_RANGE_32000LUX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.ILLUMINANCE_RANGE_16000LUX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.ILLUMINANCE_RANGE_8000LUX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.ILLUMINANCE_RANGE_1300LUX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.ILLUMINANCE_RANGE_600LUX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.INTEGRATION_TIME_50MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.INTEGRATION_TIME_100MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.INTEGRATION_TIME_150MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.INTEGRATION_TIME_200MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.INTEGRATION_TIME_250MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.INTEGRATION_TIME_300MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.INTEGRATION_TIME_350MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAmbientLightV2.INTEGRATION_TIME_400MS">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetIlluminanceCallbackPeriod(System.Int64)" />. The parameter is the illuminance of the
            ambient light sensor.
            The <see cref="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceCallback" /> callback is only triggered if the illuminance has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAmbientLightV2.IlluminanceEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLightV2.Illuminance">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetIlluminanceCallbackThreshold(System.Char,System.Int64,System.Int64)" /> is reached.
            The parameter is the illuminance of the ambient light sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAmbientLightV2.IlluminanceReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.GetIlluminance">
            <summary>
            Returns the illuminance of the ambient light sensor. The measurement range goes
            up to about 100000lux, but above 64000lux the precision starts to drop.
            The illuminance is given in lux/100, i.e. a value of 450000 means that an
            illuminance of 4500lux is measured.
            .. versionchanged:: 2.0.2$nbsp;(Plugin)
            An illuminance of 0lux indicates that the sensor is saturated and the
            configuration should be modified, see <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetConfiguration(System.Byte,System.Byte)" />.
            If you want to get the illuminance periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetIlluminanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.SetIlluminanceCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceCallback" /> callback is only triggered if the illuminance has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.GetIlluminanceCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetIlluminanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.SetIlluminanceCallbackThreshold(System.Char,System.Int64,System.Int64)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the illuminance is *outside* the min and max values"
            "'i'",    "Callback is triggered when the illuminance is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the illuminance is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the illuminance is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.GetIlluminanceCallbackThreshold(System.Char@,System.Int64@,System.Int64@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetIlluminanceCallbackThreshold(System.Char,System.Int64,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceReachedCallback" />,
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetIlluminanceCallbackThreshold(System.Char,System.Int64,System.Int64)" />,
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.SetConfiguration(System.Byte,System.Byte)">
            <summary>
            Sets the configuration. It is possible to configure an illuminance range
            between 0-600lux and 0-64000lux and an integration time between 50ms and 400ms.
            .. versionadded:: 2.0.2$nbsp;(Plugin)
            The unlimited illuminance range allows to measure up to about 100000lux, but
            above 64000lux the precision starts to drop.
            A smaller illuminance range increases the resolution of the data. A longer
            integration time will result in less noise on the data.
            .. versionchanged:: 2.0.2$nbsp;(Plugin)
            If the actual measure illuminance is out-of-range then the current illuminance
            range maximum +0.01lux is reported by <see cref="M:Tinkerforge.BrickletAmbientLightV2.GetIlluminance" /> and the
            <see cref="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceCallback" /> callback. For example, 800001 for the 0-8000lux range.
            .. versionchanged:: 2.0.2$nbsp;(Plugin)
            With a long integration time the sensor might be saturated before the measured
            value reaches the maximum of the selected illuminance range. In this case 0lux
            is reported by <see cref="M:Tinkerforge.BrickletAmbientLightV2.GetIlluminance" /> and the <see cref="E:Tinkerforge.BrickletAmbientLightV2.IlluminanceCallback" /> callback.
            If the measurement is out-of-range or the sensor is saturated then you should
            configure the next higher illuminance range. If the highest range is already
            in use, then start to reduce the integration time.
            The default values are 0-8000lux illuminance range and 200ms integration time.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.GetConfiguration(System.Byte@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletAmbientLightV2.SetConfiguration(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.OnIlluminanceCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAmbientLightV2.OnIlluminanceReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogIn">
            <summary>
            Measures DC voltage between 0V and 45V
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_SET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_SET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_SET_RANGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_RANGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_SET_AVERAGING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_AVERAGING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.RANGE_AUTOMATIC">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.RANGE_UP_TO_6V">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.RANGE_UP_TO_10V">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.RANGE_UP_TO_36V">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.RANGE_UP_TO_45V">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogIn.RANGE_UP_TO_3V">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogIn.VoltageCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletAnalogIn.SetVoltageCallbackPeriod(System.Int64)" />. The parameter is the voltage of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletAnalogIn.VoltageCallback" /> callback is only triggered if the voltage has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogIn.VoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogIn.Voltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogIn.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletAnalogIn.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the analog
            value of the sensor.
            The <see cref="E:Tinkerforge.BrickletAnalogIn.AnalogValueCallback" /> callback is only triggered if the voltage has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogIn.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogIn.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogIn.VoltageReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletAnalogIn.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the voltage of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletAnalogIn.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogIn.VoltageReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogIn.VoltageReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogIn.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletAnalogIn.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletAnalogIn.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogIn.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogIn.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetVoltage">
            <summary>
            Returns the voltage of the sensor. The value is in mV and
            between 0V and 45V. The resolution between 0 and 6V is about 2mV.
            Between 6 and 45V the resolution is about 10mV.
            If you want to get the voltage periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletAnalogIn.VoltageCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletAnalogIn.SetVoltageCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            <note>
            The value returned by <see cref="M:Tinkerforge.BrickletAnalogIn.GetVoltage" /> is averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletAnalogIn.GetAnalogValue" /> gives back raw
            unfiltered analog values. The only reason to use <see cref="M:Tinkerforge.BrickletAnalogIn.GetAnalogValue" /> is,
            if you need the full resolution of the analog-to-digital converter.
            </note>
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletAnalogIn.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletAnalogIn.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.SetVoltageCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletAnalogIn.VoltageCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletAnalogIn.VoltageCallback" /> callback is only triggered if the voltage has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetVoltageCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletAnalogIn.SetVoltageCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletAnalogIn.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletAnalogIn.AnalogValueCallback" /> callback is only triggered if the analog value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletAnalogIn.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletAnalogIn.VoltageReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the voltage is *outside* the min and max values"
            "'i'",    "Callback is triggered when the voltage is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the voltage is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the voltage is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetVoltageCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletAnalogIn.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletAnalogIn.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletAnalogIn.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletAnalogIn.VoltageReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletAnalogIn.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletAnalogIn.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletAnalogIn.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletAnalogIn.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.SetRange(System.Byte)">
            <summary>
            Sets the measurement range. Possible ranges:
            * 0: Automatically switched
            * 1: 0V - 6.05V, ~1.48mV resolution
            * 2: 0V - 10.32V, ~2.52mV resolution
            * 3: 0V - 36.30V, ~8.86mV resolution
            * 4: 0V - 45.00V, ~11.25mV resolution
            * 5: 0V - 3.3V, ~0.81mV resolution, new in version 2.0.3$nbsp;(Plugin)
            The default measurement range is 0.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetRange">
            <summary>
            Returns the measurement range as set by <see cref="M:Tinkerforge.BrickletAnalogIn.SetRange(System.Byte)" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.SetAveraging(System.Byte)">
            <summary>
            Set the length of a averaging for the voltage value.
            Setting the length to 0 will turn the averaging completely off. If the
            averaging is off, there is more noise on the data, but the data is without
            delay.
            The default value is 50.
            .. versionadded:: 2.0.3$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetAveraging">
            <summary>
            Returns the averaging configuration as set by <see cref="M:Tinkerforge.BrickletAnalogIn.SetAveraging(System.Byte)" />.
            .. versionadded:: 2.0.3$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.OnVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.OnVoltageReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogIn.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogInV2">
            <summary>
            Measures DC voltage between 0V and 42V
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_GET_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_SET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_GET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_SET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_GET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_SET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_GET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogInV2.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogInV2.VoltageCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletAnalogInV2.SetVoltageCallbackPeriod(System.Int64)" />. The parameter is the voltage of the
            sensor.
            Der <see cref="E:Tinkerforge.BrickletAnalogInV2.VoltageCallback" /> callback is only triggered if the voltage has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogInV2.VoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogInV2.Voltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogInV2.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletAnalogInV2.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the analog
            value of the sensor.
            The <see cref="E:Tinkerforge.BrickletAnalogInV2.AnalogValueCallback" /> callback is only triggered if the voltage has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogInV2.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogInV2.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogInV2.VoltageReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletAnalogInV2.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the voltage of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletAnalogInV2.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogInV2.VoltageReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogInV2.VoltageReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogInV2.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletAnalogInV2.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletAnalogInV2.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogInV2.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletAnalogInV2.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.GetVoltage">
            <summary>
            Returns the measured voltage. The value is in mV and
            between 0V and 42V. The resolution is approximately 10mV.
            If you want to get the voltage periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletAnalogInV2.VoltageCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletAnalogInV2.SetVoltageCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletAnalogInV2.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletAnalogInV2.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.SetVoltageCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletAnalogInV2.VoltageCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletAnalogInV2.VoltageCallback" /> callback is only triggered if the voltage has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.GetVoltageCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletAnalogInV2.SetVoltageCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletAnalogInV2.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletAnalogInV2.AnalogValueCallback" /> callback is only triggered if the analog value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletAnalogInV2.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletAnalogInV2.VoltageReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the voltage is *outside* the min and max values"
            "'i'",    "Callback is triggered when the voltage is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the voltage is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the voltage is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.GetVoltageCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletAnalogInV2.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletAnalogInV2.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletAnalogInV2.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletAnalogInV2.VoltageReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletAnalogInV2.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletAnalogInV2.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletAnalogInV2.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletAnalogInV2.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.SetMovingAverage(System.Byte)">
            <summary>
            Sets the length of a `moving averaging &lt;https://en.wikipedia.org/wiki/Moving_average&gt;`__
            for the voltage.
            Setting the length to 1 will turn the averaging off. With less
            averaging, there is more noise on the data.
            The range for the averaging is 1-50.
            The default value is 50.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.GetMovingAverage">
            <summary>
            Returns the length of the moving average as set by <see cref="M:Tinkerforge.BrickletAnalogInV2.SetMovingAverage(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.OnVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.OnVoltageReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogInV2.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogOut">
            <summary>
            Generates configurable DC voltage between 0V and 5V
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.FUNCTION_SET_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.FUNCTION_GET_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.FUNCTION_SET_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.FUNCTION_GET_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.MODE_ANALOG_VALUE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.MODE_1K_TO_GROUND">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.MODE_100K_TO_GROUND">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOut.MODE_500K_TO_GROUND">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOut.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOut.SetVoltage(System.Int32)">
            <summary>
            Sets the voltage in mV. The possible range is 0V to 5V (0-5000).
            Calling this function will set the mode to 0 (see <see cref="M:Tinkerforge.BrickletAnalogOut.SetMode(System.Byte)" />).
            The default value is 0 (with mode 1).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOut.GetVoltage">
            <summary>
            Returns the voltage as set by <see cref="M:Tinkerforge.BrickletAnalogOut.SetVoltage(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOut.SetMode(System.Byte)">
            <summary>
            Sets the mode of the analog value. Possible modes:
            * 0: Normal Mode (Analog value as set by <see cref="M:Tinkerforge.BrickletAnalogOut.SetVoltage(System.Int32)" /> is applied)
            * 1: 1k Ohm resistor to ground
            * 2: 100k Ohm resistor to ground
            * 3: 500k Ohm resistor to ground
            Setting the mode to 0 will result in an output voltage of 0. You can jump
            to a higher output voltage directly by calling <see cref="M:Tinkerforge.BrickletAnalogOut.SetVoltage(System.Int32)" />.
            The default mode is 1.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOut.GetMode">
            <summary>
            Returns the mode as set by <see cref="M:Tinkerforge.BrickletAnalogOut.SetMode(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOut.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletAnalogOutV2">
            <summary>
            Generates configurable DC voltage between 0V and 12V
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOutV2.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOutV2.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOutV2.FUNCTION_SET_OUTPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOutV2.FUNCTION_GET_OUTPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOutV2.FUNCTION_GET_INPUT_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletAnalogOutV2.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOutV2.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOutV2.SetOutputVoltage(System.Int32)">
            <summary>
            Sets the voltage in mV. The possible range is 0V to 12V (0-12000).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOutV2.GetOutputVoltage">
            <summary>
            Returns the voltage as set by <see cref="M:Tinkerforge.BrickletAnalogOutV2.SetOutputVoltage(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOutV2.GetInputVoltage">
            <summary>
            Returns the input voltage in mV.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletAnalogOutV2.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletBarometer">
            <summary>
            Measures air pressure and altitude changes
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_AIR_PRESSURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_ALTITUDE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_SET_AIR_PRESSURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_AIR_PRESSURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_SET_ALTITUDE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_ALTITUDE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_SET_AIR_PRESSURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_AIR_PRESSURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_SET_ALTITUDE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_ALTITUDE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_SET_REFERENCE_AIR_PRESSURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_REFERENCE_AIR_PRESSURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_SET_AVERAGING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_AVERAGING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletBarometer.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletBarometer.AirPressureCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletBarometer.SetAirPressureCallbackPeriod(System.Int64)" />. The parameter is the air
            pressure of the air pressure sensor.
            The <see cref="E:Tinkerforge.BrickletBarometer.AirPressureCallback" /> callback is only triggered if the air pressure has
            changed since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletBarometer.AirPressureEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletBarometer.AirPressure">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletBarometer.AltitudeCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletBarometer.SetAltitudeCallbackPeriod(System.Int64)" />. The parameter is the altitude of
            the air pressure sensor.
            The <see cref="E:Tinkerforge.BrickletBarometer.AltitudeCallback" /> callback is only triggered if the altitude has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletBarometer.AltitudeEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletBarometer.Altitude">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletBarometer.AirPressureReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletBarometer.SetAirPressureCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the air pressure of the air pressure sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletBarometer.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletBarometer.AirPressureReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletBarometer.AirPressureReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletBarometer.AltitudeReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletBarometer.SetAltitudeCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the altitude of the air pressure sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletBarometer.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletBarometer.AltitudeReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletBarometer.AltitudeReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetAirPressure">
            <summary>
            Returns the air pressure of the air pressure sensor. The value
            has a range of 10000 to 1200000 and is given in mbar/1000, i.e. a value
            of 1001092 means that an air pressure of 1001.092 mbar is measured.
            If you want to get the air pressure periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletBarometer.AirPressureCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletBarometer.SetAirPressureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetAltitude">
            <summary>
            Returns the relative altitude of the air pressure sensor. The value is given in
            cm and is calculated based on the difference between the current air pressure
            and the reference air pressure that can be set with <see cref="M:Tinkerforge.BrickletBarometer.SetReferenceAirPressure(System.Int32)" />.
            If you want to get the altitude periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletBarometer.AltitudeCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletBarometer.SetAltitudeCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.SetAirPressureCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletBarometer.AirPressureCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletBarometer.AirPressureCallback" /> callback is only triggered if the air pressure has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetAirPressureCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletBarometer.SetAirPressureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.SetAltitudeCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletBarometer.AltitudeCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletBarometer.AltitudeCallback" /> callback is only triggered if the altitude has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetAltitudeCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletBarometer.SetAltitudeCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.SetAirPressureCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletBarometer.AirPressureReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the air pressure is *outside* the min and max values"
            "'i'",    "Callback is triggered when the air pressure is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the air pressure is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the air pressure is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetAirPressureCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletBarometer.SetAirPressureCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.SetAltitudeCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletBarometer.AltitudeReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the altitude is *outside* the min and max values"
            "'i'",    "Callback is triggered when the altitude is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the altitude is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the altitude is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetAltitudeCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletBarometer.SetAltitudeCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletBarometer.AirPressureReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletBarometer.AltitudeReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletBarometer.SetAirPressureCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletBarometer.SetAltitudeCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletBarometer.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.SetReferenceAirPressure(System.Int32)">
            <summary>
            Sets the reference air pressure in mbar/1000 for the altitude calculation.
            Valid values are between 10000 and 1200000.
            Setting the reference to the current air pressure results in a calculated
            altitude of 0cm. Passing 0 is a shortcut for passing the current air pressure as
            reference.
            Well known reference values are the Q codes
            `QNH &lt;https://en.wikipedia.org/wiki/QNH&gt;`__ and
            `QFE &lt;https://en.wikipedia.org/wiki/Mean_sea_level_pressure#Mean_sea_level_pressure&gt;`__
            used in aviation.
            The default value is 1013.25mbar.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetChipTemperature">
            <summary>
            Returns the temperature of the air pressure sensor. The value
            has a range of -4000 to 8500 and is given in °C/100, i.e. a value
            of 2007 means that a temperature of 20.07 °C is measured.
            This temperature is used internally for temperature compensation of the air
            pressure measurement. It is not as accurate as the temperature measured by the
            :ref:`temperature_bricklet` or the :ref:`temperature_ir_bricklet`.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetReferenceAirPressure">
            <summary>
            Returns the reference air pressure as set by <see cref="M:Tinkerforge.BrickletBarometer.SetReferenceAirPressure(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.SetAveraging(System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the different averaging parameters. It is possible to set
            the length of a normal averaging for the temperature and pressure,
            as well as an additional length of a
            `moving average &lt;https://en.wikipedia.org/wiki/Moving_average&gt;`__
            for the pressure. The moving average is calculated from the normal
            averages.  There is no moving average for the temperature.
            The maximum length for the pressure average is 10, for the
            temperature average is 255 and for the moving average is 25.
            Setting the all three parameters to 0 will turn the averaging
            completely off. If the averaging is off, there is lots of noise
            on the data, but the data is without delay. Thus we recommend
            to turn the averaging off if the Barometer Bricklet data is
            to be used for sensor fusion with other sensors.
            The default values are 10 for the normal averages and 25 for the
            moving average.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetAveraging(System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the averaging configuration as set by <see cref="M:Tinkerforge.BrickletBarometer.SetAveraging(System.Byte,System.Byte,System.Byte)" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.OnAirPressureCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.OnAltitudeCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.OnAirPressureReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletBarometer.OnAltitudeReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCAN">
            <summary>
            Communicates with CAN bus devices
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_WRITE_FRAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_READ_FRAME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_ENABLE_FRAME_READ_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_DISABLE_FRAME_READ_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_IS_FRAME_READ_CALLBACK_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_SET_READ_FILTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_GET_READ_FILTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_GET_ERROR_LOG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FRAME_TYPE_STANDARD_DATA">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FRAME_TYPE_STANDARD_REMOTE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FRAME_TYPE_EXTENDED_DATA">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FRAME_TYPE_EXTENDED_REMOTE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.BAUD_RATE_10KBPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.BAUD_RATE_20KBPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.BAUD_RATE_50KBPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.BAUD_RATE_125KBPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.BAUD_RATE_250KBPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.BAUD_RATE_500KBPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.BAUD_RATE_800KBPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.BAUD_RATE_1000KBPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.TRANSCEIVER_MODE_NORMAL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.TRANSCEIVER_MODE_LOOPBACK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.TRANSCEIVER_MODE_READ_ONLY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FILTER_MODE_DISABLED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FILTER_MODE_ACCEPT_ALL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FILTER_MODE_MATCH_STANDARD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FILTER_MODE_MATCH_STANDARD_AND_DATA">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCAN.FILTER_MODE_MATCH_EXTENDED">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCAN.FrameReadCallback">
            <summary>
            This callback is triggered if a data or remote frame was received by the CAN
            transceiver.
            The ``identifier`` return value follows the identifier format described for
            <see cref="M:Tinkerforge.BrickletCAN.WriteFrame(System.Byte,System.Int64,System.Byte[],System.Byte)" />.
            For remote frames the ``data`` return value always contains invalid values.
            A configurable read filter can be used to define which frames should be
            received by the CAN transceiver at all (see <see cref="M:Tinkerforge.BrickletCAN.SetReadFilter(System.Byte,System.Int64,System.Int64,System.Int64)" />).
            To enable this callback, use <see cref="M:Tinkerforge.BrickletCAN.EnableFrameReadCallback" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCAN.FrameReadEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCAN.FrameRead">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.WriteFrame(System.Byte,System.Int64,System.Byte[],System.Byte)">
            <summary>
            Writes a data or remote frame to the write buffer to be transmitted over the
            CAN transceiver.
            The Bricklet supports the standard 11-bit (CAN 2.0A) and the additional extended
            18-bit (CAN 2.0B) identifiers. For standard frames the Bricklet uses bit 0 to 10
            from the ``identifier`` parameter as standard 11-bit identifier. For extended
            frames the Bricklet additionally uses bit 11 to 28 from the ``identifier``
            parameter as extended 18-bit identifier.
            For remote frames the ``data`` parameter is ignored.
            Returns *true* if the frame was successfully added to the write buffer. Returns
            *false* if the frame could not be added because write buffer is already full.
            The write buffer can overflow if frames are written to it at a higher rate
            than the Bricklet can transmitted them over the CAN transceiver. This may
            happen if the CAN transceiver is configured as read-only or is using a low baud
            rate (see <see cref="M:Tinkerforge.BrickletCAN.SetConfiguration(System.Byte,System.Byte,System.Int32)" />). It can also happen if the CAN bus is
            congested and the frame cannot be transmitted because it constantly loses
            arbitration or because the CAN transceiver is currently disabled due to a high
            write error level (see <see cref="M:Tinkerforge.BrickletCAN.GetErrorLog(System.Byte@,System.Byte@,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)" />).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.ReadFrame(System.Boolean@,System.Byte@,System.Int64@,System.Byte[]@,System.Byte@)">
            <summary>
            Tries to read the next data or remote frame from the read buffer and return it.
            If a frame was successfully read, then the ``success`` return value is set to
            *true* and the other return values contain the frame. If the read buffer is
            empty and no frame could be read, then the ``success`` return value is set to
            *false* and the other return values contain invalid data.
            The ``identifier`` return value follows the identifier format described for
            <see cref="M:Tinkerforge.BrickletCAN.WriteFrame(System.Byte,System.Int64,System.Byte[],System.Byte)" />.
            For remote frames the ``data`` return value always contains invalid data.
            A configurable read filter can be used to define which frames should be
            received by the CAN transceiver and put into the read buffer (see
            <see cref="M:Tinkerforge.BrickletCAN.SetReadFilter(System.Byte,System.Int64,System.Int64,System.Int64)" />).
            Instead of polling with this function, you can also use callbacks. See the
            <see cref="M:Tinkerforge.BrickletCAN.EnableFrameReadCallback" /> function and the <see cref="E:Tinkerforge.BrickletCAN.FrameReadCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.EnableFrameReadCallback">
            <summary>
            Enables the <see cref="E:Tinkerforge.BrickletCAN.FrameReadCallback" /> callback.
            By default the callback is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.DisableFrameReadCallback">
            <summary>
            Disables the <see cref="E:Tinkerforge.BrickletCAN.FrameReadCallback" /> callback.
            By default the callback is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.IsFrameReadCallbackEnabled">
            <summary>
            Returns *true* if the <see cref="E:Tinkerforge.BrickletCAN.FrameReadCallback" /> callback is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.SetConfiguration(System.Byte,System.Byte,System.Int32)">
            <summary>
            Sets the configuration for the CAN bus communication.
            The baud rate can be configured in steps between 10 and 1000 kbit/s.
            The CAN transceiver has three different modes:
            * Normal: Reads from and writes and to the CAN bus and performs active bus
            error detection and acknowledgement.
            * Loopback: All reads and writes are performed internally. The transceiver
            is disconnected from the actual CAN bus.
            * Read-Only: Only reads from the CAN bus, but does neither active bus error
            detection nor acknowledgement. Only the receiving part of the transceiver
            is connected to the CAN bus.
            The write timeout has three different modes that define how a failed frame
            transmission should be handled:
            * One-Shot (&lt; 0): Only one transmission attempt will be made. If the
            transmission fails then the frame is discarded.
            * Infinite (= 0): Infinite transmission attempts will be made. The frame will
            never be discarded.
            * Milliseconds (&gt; 0): A limited number of transmission attempts will be made.
            If the frame could not be transmitted successfully after the configured
            number of milliseconds then the frame is discarded.
            The default is: 125 kbit/s, normal transceiver mode and infinite write timeout.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.GetConfiguration(System.Byte@,System.Byte@,System.Int32@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletCAN.SetConfiguration(System.Byte,System.Byte,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.SetReadFilter(System.Byte,System.Int64,System.Int64,System.Int64)">
            <summary>
            Set the read filter configuration. This can be used to define which frames
            should be received by the CAN transceiver and put into the read buffer.
            The read filter has five different modes that define if and how the mask and
            the two filters are applied:
            * Disabled: No filtering is applied at all. All frames are received even
            incomplete and defective frames. This mode should be used for debugging only.
            * Accept-All: All complete and error-free frames are received.
            * Match-Standard: Only standard frames with a matching identifier are received.
            * Match-Standard-and-Data: Only standard frames with matching identifier and
            data bytes are received.
            * Match-Extended: Only extended frames with a matching identifier are received.
            The mask and filters are used as bit masks. Their usage depends on the mode:
            * Disabled: Mask and filters are ignored.
            * Accept-All: Mask and filters are ignored.
            * Match-Standard: Bit 0 to 10 (11 bits) of mask and filters are used to match
            the 11-bit identifier of standard frames.
            * Match-Standard-and-Data: Bit 0 to 10 (11 bits) of mask and filters are used
            to match the 11-bit identifier of standard frames. Bit 11 to 18 (8 bits) and
            bit 19 to 26 (8 bits) of mask and filters are used to match the first and
            second data byte (if present) of standard frames.
            * Match-Extended: Bit 0 to 10 (11 bits) of mask and filters are used
            to match the standard 11-bit identifier part of extended frames. Bit 11 to 28
            (18 bits) of mask and filters are used to match the extended 18-bit identifier
            part of extended frames.
            The mask and filters are applied in this way: The mask is used to select the
            identifier and data bits that should be compared to the corresponding filter
            bits. All unselected bits are automatically accepted. All selected bits have
            to match one of the filters to be accepted. If all bits for the selected mode
            are accepted then the frame is accepted and is added to the read buffer.
            <code>
            "Mask Bit", "Filter Bit", "Identifier/Data Bit", "Result"
            0, X, X, Accept
            1, 0, 0, Accept
            1, 0, 1, Reject
            1, 1, 0, Reject
            1, 1, 1, Accept
            </code>
            For example, to receive standard frames with identifier 0x123 only the mode can
            be set to Match-Standard with 0x7FF as mask and 0x123 as filter 1 and filter 2.
            The mask of 0x7FF selects all 11 identifier bits for matching so that the
            identifier has to be exactly 0x123 to be accepted.
            To accept identifier 0x123 and identifier 0x456 at the same time, just set
            filter 2 to 0x456 and keep mask and filter 1 unchanged.
            The default mode is accept-all.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.GetReadFilter(System.Byte@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the read filter as set by <see cref="M:Tinkerforge.BrickletCAN.SetReadFilter(System.Byte,System.Int64,System.Int64,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.GetErrorLog(System.Byte@,System.Byte@,System.Boolean@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns information about different kinds of errors.
            The write and read error levels indicate the current level of checksum,
            acknowledgement, form, bit and stuffing errors during CAN bus write and read
            operations.
            When the write error level extends 255 then the CAN transceiver gets disabled
            and no frames can be transmitted or received anymore. The CAN transceiver will
            automatically be activated again after the CAN bus is idle for a while.
            The write and read error levels are not available in read-only transceiver mode
            (see <see cref="M:Tinkerforge.BrickletCAN.SetConfiguration(System.Byte,System.Byte,System.Int32)" />) and are reset to 0 as a side effect of changing
            the configuration or the read filter.
            The write timeout, read register and buffer overflow counts represents the
            number of these errors:
            * A write timeout occurs if a frame could not be transmitted before the
            configured write timeout expired (see <see cref="M:Tinkerforge.BrickletCAN.SetConfiguration(System.Byte,System.Byte,System.Int32)" />).
            * A read register overflow occurs if the read register of the CAN transceiver
            still contains the last received frame when the next frame arrives. In this
            case the newly arrived frame is lost. This happens if the CAN transceiver
            receives more frames than the Bricklet can handle. Using the read filter
            (see <see cref="M:Tinkerforge.BrickletCAN.SetReadFilter(System.Byte,System.Int64,System.Int64,System.Int64)" />) can help to reduce the amount of received frames.
            This count is not exact, but a lower bound, because the Bricklet might not
            able detect all overflows if they occur in rapid succession.
            * A read buffer overflow occurs if the read buffer of the Bricklet is already
            full when the next frame should be read from the read register of the CAN
            transceiver. In this case the frame in the read register is lost. This
            happens if the CAN transceiver receives more frames to be added to the read
            buffer than are removed from the read buffer using the <see cref="M:Tinkerforge.BrickletCAN.ReadFrame(System.Boolean@,System.Byte@,System.Int64@,System.Byte[]@,System.Byte@)" />
            function. Using the <see cref="E:Tinkerforge.BrickletCAN.FrameReadCallback" /> callback ensures that the read buffer
            can not overflow.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCAN.OnFrameReadCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCO2">
            <summary>
            Measures CO2 concentration in ppm
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.FUNCTION_GET_CO2_CONCENTRATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.FUNCTION_SET_CO2_CONCENTRATION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.FUNCTION_GET_CO2_CONCENTRATION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.FUNCTION_SET_CO2_CONCENTRATION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.FUNCTION_GET_CO2_CONCENTRATION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCO2.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCO2.CO2ConcentrationCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletCO2.SetCO2ConcentrationCallbackPeriod(System.Int64)" />. The parameter is the CO2
            concentration of the sensor.
            The <see cref="E:Tinkerforge.BrickletCO2.CO2ConcentrationCallback" /> callback is only triggered if the CO2 concentration
            has changed since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCO2.CO2ConcentrationEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCO2.CO2Concentration">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCO2.CO2ConcentrationReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletCO2.SetCO2ConcentrationCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the CO2 concentration.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletCO2.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCO2.CO2ConcentrationReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCO2.CO2ConcentrationReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.GetCO2Concentration">
            <summary>
            Returns the measured CO2 concentration. The value is in
            `ppm (parts per million) &lt;https://en.wikipedia.org/wiki/Parts-per_notation&gt;`__
            and between 0 to 10000.
            If you want to get the CO2 concentration periodically, it is recommended to use
            the <see cref="E:Tinkerforge.BrickletCO2.CO2ConcentrationCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletCO2.SetCO2ConcentrationCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.SetCO2ConcentrationCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletCO2.CO2ConcentrationCallback" /> callback is
            triggered periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletCO2.CO2ConcentrationCallback" /> callback is only triggered if the CO2 concentration
            has changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.GetCO2ConcentrationCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletCO2.SetCO2ConcentrationCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.SetCO2ConcentrationCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletCO2.CO2ConcentrationReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the CO2 concentration is *outside* the min and max values"
            "'i'",    "Callback is triggered when the CO2 concentration is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the CO2 concentration is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the CO2 concentration is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.GetCO2ConcentrationCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletCO2.SetCO2ConcentrationCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletCO2.CO2ConcentrationReachedCallback" />,
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletCO2.SetCO2ConcentrationCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletCO2.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.OnCO2ConcentrationCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCO2.OnCO2ConcentrationReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletColor">
            <summary>
            Measures color (RGB value), illuminance and color temperature
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_COLOR">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_SET_COLOR_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_COLOR_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_SET_COLOR_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_COLOR_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_LIGHT_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_LIGHT_OFF">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_IS_LIGHT_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_SET_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_ILLUMINANCE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_COLOR_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_SET_ILLUMINANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_ILLUMINANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_SET_COLOR_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_COLOR_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.LIGHT_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.LIGHT_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.GAIN_1X">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.GAIN_4X">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.GAIN_16X">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.GAIN_60X">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.INTEGRATION_TIME_2MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.INTEGRATION_TIME_24MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.INTEGRATION_TIME_101MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.INTEGRATION_TIME_154MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletColor.INTEGRATION_TIME_700MS">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletColor.ColorCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletColor.SetColorCallbackPeriod(System.Int64)" />. The parameter is the color
            of the sensor as RGBC.
            The <see cref="E:Tinkerforge.BrickletColor.ColorCallback" /> callback is only triggered if the color has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletColor.ColorEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletColor.Color">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletColor.ColorReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletColor.SetColorCallbackThreshold(System.Char,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /> is reached.
            The parameter is the color
            of the sensor as RGBC.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletColor.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletColor.ColorReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletColor.ColorReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletColor.IlluminanceCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletColor.SetIlluminanceCallbackPeriod(System.Int64)" />. The parameter is the illuminance.
            See <see cref="M:Tinkerforge.BrickletColor.GetIlluminance" /> for how to interpret this value.
            The <see cref="E:Tinkerforge.BrickletColor.IlluminanceCallback" /> callback is only triggered if the illuminance has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletColor.IlluminanceEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletColor.Illuminance">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletColor.ColorTemperatureCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletColor.SetColorTemperatureCallbackPeriod(System.Int64)" />. The parameter is the
            color temperature in Kelvin.
            The <see cref="E:Tinkerforge.BrickletColor.ColorTemperatureCallback" /> callback is only triggered if the color temperature
            has changed since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletColor.ColorTemperatureEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletColor.ColorTemperature">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetColor(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the measured color of the sensor. The values
            have a range of 0 to 65535.
            The red (r), green (g), blue (b) and clear (c) colors are measured
            with four different photodiodes that are responsive at different
            wavelengths:
            .. image:: /Images/Bricklets/bricklet_color_wavelength_chart_600.jpg
            :scale: 100 %
            :alt: Chart Responsivity / Wavelength
            :align: center
            :target: ../../_images/Bricklets/bricklet_color_wavelength_chart_600.jpg
            If you want to get the color periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletColor.ColorCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletColor.SetColorCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.SetColorCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletColor.ColorCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletColor.ColorCallback" /> callback is only triggered if the color has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetColorCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletColor.SetColorCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.SetColorCallbackThreshold(System.Char,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletColor.ColorReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the temperature is *outside* the min and max values"
            "'i'",    "Callback is triggered when the temperature is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the temperature is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the temperature is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0, 0, 0, 0, 0, 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetColorCallbackThreshold(System.Char@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletColor.SetColorCallbackThreshold(System.Char,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletColor.ColorReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletColor.SetColorCallbackThreshold(System.Char,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletColor.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.LightOn">
            <summary>
            Turns the LED on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.LightOff">
            <summary>
            Turns the LED off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.IsLightOn">
            <summary>
            Returns the state of the LED. Possible values are:
            * 0: On
            * 1: Off
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.SetConfig(System.Byte,System.Byte)">
            <summary>
            Sets the configuration of the sensor. Gain and integration time
            can be configured in this way.
            For configuring the gain:
            * 0: 1x Gain
            * 1: 4x Gain
            * 2: 16x Gain
            * 3: 60x Gain
            For configuring the integration time:
            * 0: 2.4ms
            * 1: 24ms
            * 2: 101ms
            * 3: 154ms
            * 4: 700ms
            Increasing the gain enables the sensor to detect a
            color from a higher distance.
            The integration time provides a trade-off between conversion time
            and accuracy. With a longer integration time the values read will
            be more accurate but it will take longer time to get the conversion
            results.
            The default values are 60x gain and 154ms integration time.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetConfig(System.Byte@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletColor.SetConfig(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetIlluminance">
            <summary>
            Returns the illuminance affected by the gain and integration time as
            set by <see cref="M:Tinkerforge.BrickletColor.SetConfig(System.Byte,System.Byte)" />. To get the illuminance in Lux apply this formula::
            lux = illuminance * 700 / gain / integration_time
            To get a correct illuminance measurement make sure that the color
            values themself are not saturated. The color value (R, G or B)
            is saturated if it is equal to the maximum value of 65535.
            In that case you have to reduce the gain, see <see cref="M:Tinkerforge.BrickletColor.SetConfig(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetColorTemperature">
            <summary>
            Returns the color temperature in Kelvin.
            To get a correct color temperature measurement make sure that the color
            values themself are not saturated. The color value (R, G or B)
            is saturated if it is equal to the maximum value of 65535.
            In that case you have to reduce the gain, see <see cref="M:Tinkerforge.BrickletColor.SetConfig(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.SetIlluminanceCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletColor.IlluminanceCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletColor.IlluminanceCallback" /> callback is only triggered if the illuminance has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetIlluminanceCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletColor.SetIlluminanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.SetColorTemperatureCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletColor.ColorTemperatureCallback" /> callback is
            triggered periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletColor.ColorTemperatureCallback" /> callback is only triggered if the color temperature
            has changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetColorTemperatureCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletColor.SetColorTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.OnColorCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.OnColorReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.OnIlluminanceCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletColor.OnColorTemperatureCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent12">
            <summary>
            Measures AC/DC current between -12.5A and +12.5A
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_GET_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_CALIBRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_IS_OVER_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_SET_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_GET_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_SET_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_GET_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent12.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.CurrentCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletCurrent12.SetCurrentCallbackPeriod(System.Int64)" />. The parameter is the current of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletCurrent12.CurrentCallback" /> callback is only triggered if the current has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent12.CurrentEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.Current">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletCurrent12.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the analog value
            of the sensor.
            The <see cref="E:Tinkerforge.BrickletCurrent12.AnalogValueCallback" /> callback is only triggered if the current has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent12.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.CurrentReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletCurrent12.SetCurrentCallbackThreshold(System.Char,System.Int16,System.Int16)" /> is reached.
            The parameter is the current of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletCurrent12.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent12.CurrentReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.CurrentReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletCurrent12.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletCurrent12.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent12.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.OverCurrentCallback">
            <summary>
            This callback is triggered when an over current is measured
            (see <see cref="M:Tinkerforge.BrickletCurrent12.IsOverCurrent" />).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent12.OverCurrentEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent12.OverCurrent">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.GetCurrent">
            <summary>
            Returns the current of the sensor. The value is in mA
            and between -12500mA and 12500mA.
            If you want to get the current periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletCurrent12.CurrentCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletCurrent12.SetCurrentCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.Calibrate">
            <summary>
            Calibrates the 0 value of the sensor. You have to call this function
            when there is no current present.
            The zero point of the current sensor
            is depending on the exact properties of the analog-to-digital converter,
            the length of the Bricklet cable and the temperature. Thus, if you change
            the Brick or the environment in which the Bricklet is used, you might
            have to recalibrate.
            The resulting calibration will be saved on the EEPROM of the Current
            Bricklet.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.IsOverCurrent">
            <summary>
            Returns *true* if more than 12.5A were measured.
            <note>
            To reset this value you have to power cycle the Bricklet.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            <note>
            The value returned by <see cref="M:Tinkerforge.BrickletCurrent12.GetCurrent" /> is averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletCurrent12.GetAnalogValue" /> gives back raw
            unfiltered analog values. The only reason to use <see cref="M:Tinkerforge.BrickletCurrent12.GetAnalogValue" /> is,
            if you need the full resolution of the analog-to-digital converter.
            </note>
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletCurrent12.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletCurrent12.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.SetCurrentCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletCurrent12.CurrentCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletCurrent12.CurrentCallback" /> callback is only triggered if the current has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.GetCurrentCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletCurrent12.SetCurrentCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletCurrent12.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletCurrent12.AnalogValueCallback" /> callback is only triggered if the analog value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletCurrent12.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.SetCurrentCallbackThreshold(System.Char,System.Int16,System.Int16)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletCurrent12.CurrentReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the current is *outside* the min and max values"
            "'i'",    "Callback is triggered when the current is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the current is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the current is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.GetCurrentCallbackThreshold(System.Char@,System.Int16@,System.Int16@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletCurrent12.SetCurrentCallbackThreshold(System.Char,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletCurrent12.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletCurrent12.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletCurrent12.CurrentReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletCurrent12.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletCurrent12.SetCurrentCallbackThreshold(System.Char,System.Int16,System.Int16)" />,
            * <see cref="M:Tinkerforge.BrickletCurrent12.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletCurrent12.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.OnCurrentCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.OnCurrentReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent12.OnOverCurrentCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent25">
            <summary>
            Measures AC/DC current between -25A and +25A
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_GET_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_CALIBRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_IS_OVER_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_SET_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_GET_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_SET_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_GET_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletCurrent25.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.CurrentCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletCurrent25.SetCurrentCallbackPeriod(System.Int64)" />. The parameter is the current of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletCurrent25.CurrentCallback" /> callback is only triggered if the current has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent25.CurrentEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.Current">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletCurrent25.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the analog value of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletCurrent25.AnalogValueCallback" /> callback is only triggered if the current has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent25.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.CurrentReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletCurrent25.SetCurrentCallbackThreshold(System.Char,System.Int16,System.Int16)" /> is reached.
            The parameter is the current of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletCurrent25.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent25.CurrentReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.CurrentReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletCurrent25.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletCurrent25.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent25.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.OverCurrentCallback">
            <summary>
            This callback is triggered when an over current is measured
            (see <see cref="M:Tinkerforge.BrickletCurrent25.IsOverCurrent" />).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletCurrent25.OverCurrentEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletCurrent25.OverCurrent">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.GetCurrent">
            <summary>
            Returns the current of the sensor. The value is in mA
            and between -25000mA and 25000mA.
            If you want to get the current periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletCurrent25.CurrentCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletCurrent25.SetCurrentCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.Calibrate">
            <summary>
            Calibrates the 0 value of the sensor. You have to call this function
            when there is no current present.
            The zero point of the current sensor
            is depending on the exact properties of the analog-to-digital converter,
            the length of the Bricklet cable and the temperature. Thus, if you change
            the Brick or the environment in which the Bricklet is used, you might
            have to recalibrate.
            The resulting calibration will be saved on the EEPROM of the Current
            Bricklet.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.IsOverCurrent">
            <summary>
            Returns *true* if more than 25A were measured.
            <note>
            To reset this value you have to power cycle the Bricklet.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            <note>
            The value returned by <see cref="M:Tinkerforge.BrickletCurrent25.GetCurrent" /> is averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletCurrent25.GetAnalogValue" /> gives back raw
            unfiltered analog values. The only reason to use <see cref="M:Tinkerforge.BrickletCurrent25.GetAnalogValue" /> is,
            if you need the full resolution of the analog-to-digital converter.
            </note>
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletCurrent25.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletCurrent25.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.SetCurrentCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletCurrent25.CurrentCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletCurrent25.CurrentCallback" /> callback is only triggered if the current has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.GetCurrentCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletCurrent25.SetCurrentCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletCurrent25.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletCurrent25.AnalogValueCallback" /> callback is only triggered if the analog value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletCurrent25.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.SetCurrentCallbackThreshold(System.Char,System.Int16,System.Int16)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletCurrent25.CurrentReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the current is *outside* the min and max values"
            "'i'",    "Callback is triggered when the current is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the current is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the current is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.GetCurrentCallbackThreshold(System.Char@,System.Int16@,System.Int16@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletCurrent25.SetCurrentCallbackThreshold(System.Char,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletCurrent25.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletCurrent25.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletCurrent25.CurrentReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletCurrent25.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletCurrent25.SetCurrentCallbackThreshold(System.Char,System.Int16,System.Int16)" />,
            * <see cref="M:Tinkerforge.BrickletCurrent25.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletCurrent25.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.OnCurrentCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.OnCurrentReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletCurrent25.OnOverCurrentCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDistanceIR">
            <summary>
            Measures distance up to 150cm with infrared light
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_GET_DISTANCE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_SET_SAMPLING_POINT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_GET_SAMPLING_POINT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_SET_DISTANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_GET_DISTANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_SET_DISTANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_GET_DISTANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceIR.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceIR.DistanceCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletDistanceIR.SetDistanceCallbackPeriod(System.Int64)" />. The parameter is the distance of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletDistanceIR.DistanceCallback" /> callback is only triggered if the distance has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDistanceIR.DistanceEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceIR.Distance">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceIR.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletDistanceIR.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the analog value of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletDistanceIR.AnalogValueCallback" /> callback is only triggered if the analog value has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDistanceIR.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceIR.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceIR.DistanceReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletDistanceIR.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the distance of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletDistanceIR.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDistanceIR.DistanceReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceIR.DistanceReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceIR.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletDistanceIR.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletDistanceIR.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDistanceIR.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceIR.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.GetDistance">
            <summary>
            Returns the distance measured by the sensor. The value is in mm and possible
            distance ranges are 40 to 300, 100 to 800 and 200 to 1500, depending on the
            selected IR sensor.
            If you want to get the distance periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletDistanceIR.DistanceCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletDistanceIR.SetDistanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            <note>
            The value returned by <see cref="M:Tinkerforge.BrickletDistanceIR.GetDistance" /> is averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletDistanceIR.GetAnalogValue" /> gives back raw
            unfiltered analog values. The only reason to use <see cref="M:Tinkerforge.BrickletDistanceIR.GetAnalogValue" /> is,
            if you need the full resolution of the analog-to-digital converter.
            </note>
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletDistanceIR.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletDistanceIR.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.SetSamplingPoint(System.Byte,System.Int32)">
            <summary>
            Sets a sampling point value to a specific position of the lookup table.
            The lookup table comprises 128 equidistant analog values with
            corresponding distances.
            If you measure a distance of 50cm at the analog value 2048, you
            should call this function with (64, 5000). The utilized analog-to-digital
            converter has a resolution of 12 bit. With 128 sampling points on the
            whole range, this means that every sampling point has a size of 32
            analog values. Thus the analog value 2048 has the corresponding sampling
            point 64 = 2048/32.
            Sampling points are saved on the EEPROM of the Distance IR Bricklet and
            loaded again on startup.
            <note>
            An easy way to calibrate the sampling points of the Distance IR Bricklet is
            implemented in the Brick Viewer. If you want to calibrate your Bricklet it is
            highly recommended to use this implementation.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.GetSamplingPoint(System.Byte)">
            <summary>
            Returns the distance to a sampling point position as set by
            <see cref="M:Tinkerforge.BrickletDistanceIR.SetSamplingPoint(System.Byte,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.SetDistanceCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletDistanceIR.DistanceCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletDistanceIR.DistanceCallback" /> callback is only triggered if the distance has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.GetDistanceCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletDistanceIR.SetDistanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletDistanceIR.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletDistanceIR.AnalogValueCallback" /> callback is only triggered if the analog value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletDistanceIR.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletDistanceIR.DistanceReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the distance is *outside* the min and max values"
            "'i'",    "Callback is triggered when the distance is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the distance is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the distance is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.GetDistanceCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletDistanceIR.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletDistanceIR.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletDistanceIR.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletDistanceIR.DistanceReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletDistanceIR.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletDistanceIR.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletDistanceIR.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletDistanceIR.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.OnDistanceCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.OnDistanceReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceIR.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDistanceUS">
            <summary>
            Measures distance between 2cm and 400cm with ultrasound
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_GET_DISTANCE_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_SET_DISTANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_GET_DISTANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_SET_DISTANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_GET_DISTANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_SET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_GET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDistanceUS.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceUS.DistanceCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletDistanceUS.SetDistanceCallbackPeriod(System.Int64)" />. The parameter is the distance value
            of the sensor.
            The <see cref="E:Tinkerforge.BrickletDistanceUS.DistanceCallback" /> callback is only triggered if the distance value has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDistanceUS.DistanceEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceUS.Distance">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceUS.DistanceReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletDistanceUS.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the distance value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletDistanceUS.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDistanceUS.DistanceReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDistanceUS.DistanceReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.GetDistanceValue">
            <summary>
            Returns the current distance value measured by the sensor. The value has a
            range of 0 to 4095. A small value corresponds to a small distance, a big
            value corresponds to a big distance. The relation between the measured distance
            value and the actual distance is affected by the 5V supply voltage (deviations
            in the supply voltage result in deviations in the distance values) and is
            non-linear (resolution is bigger at close range).
            If you want to get the distance value periodically, it is recommended to
            use the <see cref="E:Tinkerforge.BrickletDistanceUS.DistanceCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletDistanceUS.SetDistanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.SetDistanceCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletDistanceUS.DistanceCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            Der <see cref="E:Tinkerforge.BrickletDistanceUS.DistanceCallback" /> callback is only triggered if the distance value has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.GetDistanceCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletDistanceUS.SetDistanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletDistanceUS.DistanceReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the distance value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the distance value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the distance value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the distance value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.GetDistanceCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletDistanceUS.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletDistanceUS.DistanceReachedCallback" />,
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletDistanceUS.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletDistanceUS.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.SetMovingAverage(System.Byte)">
            <summary>
            Sets the length of a `moving averaging &lt;https://en.wikipedia.org/wiki/Moving_average&gt;`__
            for the distance value.
            Setting the length to 0 will turn the averaging completely off. With less
            averaging, there is more noise on the data.
            The range for the averaging is 0-100.
            The default value is 20.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.GetMovingAverage">
            <summary>
            Returns the length moving average as set by <see cref="M:Tinkerforge.BrickletDistanceUS.SetMovingAverage(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.OnDistanceCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDistanceUS.OnDistanceReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDualButton">
            <summary>
            Two tactile buttons with built-in blue LEDs
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.FUNCTION_SET_LED_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.FUNCTION_GET_LED_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.FUNCTION_GET_BUTTON_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.FUNCTION_SET_SELECTED_LED_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.LED_STATE_AUTO_TOGGLE_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.LED_STATE_AUTO_TOGGLE_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.LED_STATE_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.LED_STATE_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.BUTTON_STATE_PRESSED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.BUTTON_STATE_RELEASED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.LED_LEFT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualButton.LED_RIGHT">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDualButton.StateChangedCallback">
            <summary>
            This callback is called whenever a button is pressed.
            Possible states for buttons are:
            * 0 = pressed
            * 1 = released
            Possible states for LEDs are:
            * 0 = AutoToggleOn: Auto toggle enabled and LED on.
            * 1 = AutoToggleOff: Auto toggle enabled and LED off.
            * 2 = On: LED on (auto toggle is disabled).
            * 3 = Off: LED off (auto toggle is disabled).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDualButton.StateChangedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDualButton.StateChanged">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualButton.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualButton.SetLEDState(System.Byte,System.Byte)">
            <summary>
            Sets the state of the LEDs. Possible states are:
            * 0 = AutoToggleOn: Enables auto toggle with initially enabled LED.
            * 1 = AutoToggleOff: Activates auto toggle with initially disabled LED.
            * 2 = On: Enables LED (auto toggle is disabled).
            * 3 = Off: Disables LED (auto toggle is disabled).
            In auto toggle mode the LED is toggled automatically at each press of a button.
            If you just want to set one of the LEDs and don't know the current state
            of the other LED, you can get the state with <see cref="M:Tinkerforge.BrickletDualButton.GetLEDState(System.Byte@,System.Byte@)" /> or you
            can use <see cref="M:Tinkerforge.BrickletDualButton.SetSelectedLEDState(System.Byte,System.Byte)" />.
            The default value is (1, 1).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualButton.GetLEDState(System.Byte@,System.Byte@)">
            <summary>
            Returns the current state of the LEDs, as set by <see cref="M:Tinkerforge.BrickletDualButton.SetLEDState(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualButton.GetButtonState(System.Byte@,System.Byte@)">
            <summary>
            Returns the current state for both buttons. Possible states are:
            * 0 = pressed
            * 1 = released
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualButton.SetSelectedLEDState(System.Byte,System.Byte)">
            <summary>
            Sets the state of the selected LED (0 or 1).
            The other LED remains untouched.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualButton.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualButton.OnStateChangedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDualRelay">
            <summary>
            Two relays to switch AC/DC devices
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualRelay.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualRelay.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualRelay.FUNCTION_SET_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualRelay.FUNCTION_GET_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualRelay.FUNCTION_SET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualRelay.FUNCTION_GET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualRelay.FUNCTION_SET_SELECTED_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDualRelay.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDualRelay.MonoflopDoneCallback">
            <summary>
            This callback is triggered whenever a monoflop timer reaches 0. The
            parameter contain the relay (1 or 2) and the current state of the relay
            (the state after the monoflop).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDualRelay.MonoflopDoneEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDualRelay.MonoflopDone">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualRelay.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualRelay.SetState(System.Boolean,System.Boolean)">
            <summary>
            Sets the state of the relays, *true* means on and *false* means off.
            For example: (true, false) turns relay 1 on and relay 2 off.
            If you just want to set one of the relays and don't know the current state
            of the other relay, you can get the state with <see cref="M:Tinkerforge.BrickletDualRelay.GetState(System.Boolean@,System.Boolean@)" /> or you
            can use <see cref="M:Tinkerforge.BrickletDualRelay.SetSelectedState(System.Byte,System.Boolean)" />.
            Running monoflop timers will be overwritten if this function is called.
            The default value is (*false*, *false*).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualRelay.GetState(System.Boolean@,System.Boolean@)">
            <summary>
            Returns the state of the relays, *true* means on and *false* means off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualRelay.SetMonoflop(System.Byte,System.Boolean,System.Int64)">
            <summary>
            The first parameter can be 1 or 2 (relay 1 or relay 2). The second parameter
            is the desired state of the relay (*true* means on and *false* means off).
            The third parameter indicates the time (in ms) that the relay should hold
            the state.
            If this function is called with the parameters (1, true, 1500):
            Relay 1 will turn on and in 1.5s it will turn off again.
            A monoflop can be used as a failsafe mechanism. For example: Lets assume you
            have a RS485 bus and a Dual Relay Bricklet connected to one of the slave
            stacks. You can now call this function every second, with a time parameter
            of two seconds. The relay will be on all the time. If now the RS485
            connection is lost, the relay will turn off in at most two seconds.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualRelay.GetMonoflop(System.Byte,System.Boolean@,System.Int64@,System.Int64@)">
            <summary>
            Returns (for the given relay) the current state and the time as set by
            <see cref="M:Tinkerforge.BrickletDualRelay.SetMonoflop(System.Byte,System.Boolean,System.Int64)" /> as well as the remaining time until the state flips.
            If the timer is not running currently, the remaining time will be returned
            as 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualRelay.SetSelectedState(System.Byte,System.Boolean)">
            <summary>
            Sets the state of the selected relay (1 or 2), *true* means on and *false* means off.
            The other relay remains untouched.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualRelay.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDualRelay.OnMonoflopDoneCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDustDetector">
            <summary>
            Measures dust density
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_GET_DUST_DENSITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_SET_DUST_DENSITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_GET_DUST_DENSITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_SET_DUST_DENSITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_GET_DUST_DENSITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_SET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_GET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletDustDetector.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDustDetector.DustDensityCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletDustDetector.SetDustDensityCallbackPeriod(System.Int64)" />. The parameter is the
            dust density of the sensor.
            Der <see cref="E:Tinkerforge.BrickletDustDetector.DustDensityCallback" /> callback is only triggered if the dust density value has
            changed since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDustDetector.DustDensityEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDustDetector.DustDensity">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDustDetector.DustDensityReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletDustDetector.SetDustDensityCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the dust density of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletDustDetector.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletDustDetector.DustDensityReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletDustDetector.DustDensityReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.GetDustDensity">
            <summary>
            Returns the dust density in µg/m³.
            If you want to get the dust density periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletDustDetector.DustDensityCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletDustDetector.SetDustDensityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.SetDustDensityCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletDustDetector.DustDensityCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletDustDetector.DustDensityCallback" /> callback is only triggered if the dust density has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.GetDustDensityCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletDustDetector.SetDustDensityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.SetDustDensityCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletDustDetector.DustDensityReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the dust density value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the dust density value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the dust density value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the dust density value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.GetDustDensityCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletDustDetector.SetDustDensityCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletDustDetector.DustDensityReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletDustDetector.SetDustDensityCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletDustDetector.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.SetMovingAverage(System.Byte)">
            <summary>
            Sets the length of a `moving averaging &lt;https://en.wikipedia.org/wiki/Moving_average&gt;`__
            for the dust_density.
            Setting the length to 0 will turn the averaging completely off. With less
            averaging, there is more noise on the data.
            The range for the averaging is 0-100.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.GetMovingAverage">
            <summary>
            Returns the length moving average as set by <see cref="M:Tinkerforge.BrickletDustDetector.SetMovingAverage(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.OnDustDensityCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletDustDetector.OnDustDensityReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPS">
            <summary>
            Determine position, velocity and altitude using GPS
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_COORDINATES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_ALTITUDE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_MOTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_DATE_TIME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_RESTART">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_SET_COORDINATES_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_COORDINATES_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_SET_STATUS_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_STATUS_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_SET_ALTITUDE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_ALTITUDE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_SET_MOTION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_MOTION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_SET_DATE_TIME_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_DATE_TIME_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FIX_NO_FIX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FIX_2D_FIX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.FIX_3D_FIX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.RESTART_TYPE_HOT_START">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.RESTART_TYPE_WARM_START">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.RESTART_TYPE_COLD_START">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPS.RESTART_TYPE_FACTORY_RESET">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.CoordinatesCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPS.SetCoordinatesCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPS.GetCoordinates(System.Int64@,System.Char@,System.Int64@,System.Char@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)" />.
            The <see cref="E:Tinkerforge.BrickletGPS.CoordinatesCallback" /> callback is only triggered if the coordinates changed
            since the last triggering and if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPS.GetStatus(System.Byte@,System.Byte@,System.Byte@)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPS.CoordinatesEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.Coordinates">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.StatusCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPS.SetStatusCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPS.GetStatus(System.Byte@,System.Byte@,System.Byte@)" />.
            The <see cref="E:Tinkerforge.BrickletGPS.StatusCallback" /> callback is only triggered if the status changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPS.StatusEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.Status">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.AltitudeCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPS.SetAltitudeCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPS.GetAltitude(System.Int32@,System.Int32@)" />.
            The <see cref="E:Tinkerforge.BrickletGPS.AltitudeCallback" /> callback is only triggered if the altitude changed since
            the last triggering and if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPS.GetStatus(System.Byte@,System.Byte@,System.Byte@)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPS.AltitudeEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.Altitude">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.MotionCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPS.SetMotionCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPS.GetMotion(System.Int64@,System.Int64@)" />.
            The <see cref="E:Tinkerforge.BrickletGPS.MotionCallback" /> callback is only triggered if the motion changed since the
            last triggering and if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPS.GetStatus(System.Byte@,System.Byte@,System.Byte@)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPS.MotionEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.Motion">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.DateTimeCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPS.SetDateTimeCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPS.GetDateTime(System.Int64@,System.Int64@)" />.
            The <see cref="E:Tinkerforge.BrickletGPS.DateTimeCallback" /> callback is only triggered if the date or time changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPS.DateTimeEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPS.DateTime">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetCoordinates(System.Int64@,System.Char@,System.Int64@,System.Char@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the GPS coordinates. Latitude and longitude are given in the
            ``DD.dddddd°`` format, the value 57123468 means 57.123468°.
            The parameter ``ns`` and ``ew`` are the cardinal directions for
            latitude and longitude. Possible values for ``ns`` and ``ew`` are 'N', 'S', 'E'
            and 'W' (north, south, east and west).
            PDOP, HDOP and VDOP are the dilution of precision (DOP) values. They specify
            the additional multiplicative effect of GPS satellite geometry on GPS
            precision. See
            `here &lt;https://en.wikipedia.org/wiki/Dilution_of_precision_(GPS)&gt;`__
            for more information. The values are give in hundredths.
            EPE is the "Estimated Position Error". The EPE is given in cm. This is not the
            absolute maximum error, it is the error with a specific confidence. See
            `here &lt;https://www.nps.gov/gis/gps/WhatisEPE.html&gt;`__ for more information.
            This data is only valid if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPS.GetStatus(System.Byte@,System.Byte@,System.Byte@)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetStatus(System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the current fix status, the number of satellites that are in view and
            the number of satellites that are currently used.
            Possible fix status values can be:
            <code>
            "Value", "Description"
            "1", "No Fix, <see cref="M:Tinkerforge.BrickletGPS.GetCoordinates(System.Int64@,System.Char@,System.Int64@,System.Char@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)" />, <see cref="M:Tinkerforge.BrickletGPS.GetAltitude(System.Int32@,System.Int32@)" /> and <see cref="M:Tinkerforge.BrickletGPS.GetMotion(System.Int64@,System.Int64@)" /> return invalid data"
            "2", "2D Fix, only <see cref="M:Tinkerforge.BrickletGPS.GetCoordinates(System.Int64@,System.Char@,System.Int64@,System.Char@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)" /> and <see cref="M:Tinkerforge.BrickletGPS.GetMotion(System.Int64@,System.Int64@)" /> return valid data"
            "3", "3D Fix, <see cref="M:Tinkerforge.BrickletGPS.GetCoordinates(System.Int64@,System.Char@,System.Int64@,System.Char@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)" />, <see cref="M:Tinkerforge.BrickletGPS.GetAltitude(System.Int32@,System.Int32@)" /> and <see cref="M:Tinkerforge.BrickletGPS.GetMotion(System.Int64@,System.Int64@)" /> return valid data"
            </code>
            There is also a :ref:`blue LED &lt;gps_bricklet_fix_led&gt;` on the Bricklet that
            indicates the fix status.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetAltitude(System.Int32@,System.Int32@)">
            <summary>
            Returns the current altitude and corresponding geoidal separation.
            Both values are given in cm.
            This data is only valid if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPS.GetStatus(System.Byte@,System.Byte@,System.Byte@)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetMotion(System.Int64@,System.Int64@)">
            <summary>
            Returns the current course and speed. Course is given in hundredths degree
            and speed is given in hundredths km/h. A course of 0° means the Bricklet is
            traveling north bound and 90° means it is traveling east bound.
            Please note that this only returns useful values if an actual movement
            is present.
            This data is only valid if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPS.GetStatus(System.Byte@,System.Byte@,System.Byte@)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetDateTime(System.Int64@,System.Int64@)">
            <summary>
            Returns the current date and time. The date is
            given in the format ``ddmmyy`` and the time is given
            in the format ``hhmmss.sss``. For example, 140713 means
            14.05.13 as date and 195923568 means 19:59:23.568 as time.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.Restart(System.Byte)">
            <summary>
            Restarts the GPS Bricklet, the following restart types are available:
            <code>
            "Value", "Description"
            "0", "Hot start (use all available data in the NV store)"
            "1", "Warm start (don't use ephemeris at restart)"
            "2", "Cold start (don't use time, position, almanacs and ephemeris at restart)"
            "3", "Factory reset (clear all system/user configurations at restart)"
            </code></summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.SetCoordinatesCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPS.CoordinatesCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPS.CoordinatesCallback" /> callback is only triggered if the coordinates changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetCoordinatesCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPS.SetCoordinatesCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.SetStatusCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPS.StatusCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPS.StatusCallback" /> callback is only triggered if the status changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetStatusCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPS.SetStatusCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.SetAltitudeCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPS.AltitudeCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPS.AltitudeCallback" /> callback is only triggered if the altitude changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetAltitudeCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPS.SetAltitudeCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.SetMotionCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPS.MotionCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPS.MotionCallback" /> callback is only triggered if the motion changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetMotionCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPS.SetMotionCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.SetDateTimeCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPS.DateTimeCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPS.DateTimeCallback" /> callback is only triggered if the date or time changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetDateTimeCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPS.SetDateTimeCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.OnCoordinatesCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.OnStatusCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.OnAltitudeCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.OnMotionCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPS.OnDateTimeCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPSV2">
            <summary>
            Determine position, velocity and altitude using GPS
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_COORDINATES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_ALTITUDE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_MOTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_DATE_TIME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_RESTART">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_SATELLITE_SYSTEM_STATUS_LOW_LEVEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_SATELLITE_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_SET_FIX_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_FIX_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_SET_COORDINATES_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_COORDINATES_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_SET_STATUS_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_STATUS_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_SET_ALTITUDE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_ALTITUDE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_SET_MOTION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_MOTION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_SET_DATE_TIME_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_DATE_TIME_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_SPITFP_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_SET_BOOTLOADER_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_BOOTLOADER_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_SET_WRITE_FIRMWARE_POINTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_WRITE_FIRMWARE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_SET_STATUS_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_STATUS_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_RESET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_WRITE_UID">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_READ_UID">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.RESTART_TYPE_HOT_START">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.RESTART_TYPE_WARM_START">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.RESTART_TYPE_COLD_START">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.RESTART_TYPE_FACTORY_RESET">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.SATELLITE_SYSTEM_GPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.SATELLITE_SYSTEM_GLONASS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.SATELLITE_SYSTEM_GALILEO">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FIX_NO_FIX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FIX_2D_FIX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FIX_3D_FIX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FIX_LED_CONFIG_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FIX_LED_CONFIG_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FIX_LED_CONFIG_SHOW_HEARTBEAT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FIX_LED_CONFIG_SHOW_FIX">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.FIX_LED_CONFIG_SHOW_PPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_MODE_BOOTLOADER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_MODE_FIRMWARE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_MODE_BOOTLOADER_WAIT_FOR_REBOOT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_MODE_FIRMWARE_WAIT_FOR_REBOOT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_MODE_FIRMWARE_WAIT_FOR_ERASE_AND_REBOOT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_STATUS_OK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_STATUS_INVALID_MODE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_STATUS_NO_CHANGE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_STATUS_ENTRY_FUNCTION_NOT_PRESENT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_STATUS_DEVICE_IDENTIFIER_INCORRECT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.BOOTLOADER_STATUS_CRC_MISMATCH">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.STATUS_LED_CONFIG_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.STATUS_LED_CONFIG_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.STATUS_LED_CONFIG_SHOW_HEARTBEAT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletGPSV2.STATUS_LED_CONFIG_SHOW_STATUS">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPSV2.PulsePerSecondCallback">
            <summary>
            This callback is triggered precisely once per second,
            see `PPS &lt;https://en.wikipedia.org/wiki/Pulse-per-second_signal&gt;`__.
            The precision of two subsequent pulses will be skewed because
            of the latency in the USB/RS485/Ethernet connection. But in the
            long run this will be very precise. For example a count of
            3600 pulses will take exactly 1 hour.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPSV2.PulsePerSecondEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPSV2.CoordinatesCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPSV2.SetCoordinatesCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPSV2.GetCoordinates(System.Int64@,System.Char@,System.Int64@,System.Char@)" />.
            The <see cref="E:Tinkerforge.BrickletGPSV2.CoordinatesCallback" /> callback is only triggered if the coordinates changed
            since the last triggering and if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPSV2.GetStatus(System.Boolean@,System.Byte@)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPSV2.CoordinatesEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPSV2.StatusCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPSV2.SetStatusCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPSV2.GetStatus(System.Boolean@,System.Byte@)" />.
            The <see cref="E:Tinkerforge.BrickletGPSV2.StatusCallback" /> callback is only triggered if the status changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPSV2.StatusEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPSV2.AltitudeCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPSV2.SetAltitudeCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPSV2.GetAltitude(System.Int32@,System.Int32@)" />.
            The <see cref="E:Tinkerforge.BrickletGPSV2.AltitudeCallback" /> callback is only triggered if the altitude changed since the
            last triggering and if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPSV2.GetStatus(System.Boolean@,System.Byte@)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPSV2.AltitudeEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPSV2.MotionCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPSV2.SetMotionCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPSV2.GetMotion(System.Int64@,System.Int64@)" />.
            The <see cref="E:Tinkerforge.BrickletGPSV2.MotionCallback" /> callback is only triggered if the motion changed since the
            last triggering and if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPSV2.GetStatus(System.Boolean@,System.Byte@)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPSV2.MotionEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletGPSV2.DateTimeCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletGPSV2.SetDateTimeCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletGPSV2.GetDateTime(System.Int64@,System.Int64@)" />.
            The <see cref="E:Tinkerforge.BrickletGPSV2.DateTimeCallback" /> callback is only triggered if the date or time changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletGPSV2.DateTimeEventHandler">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetCoordinates(System.Int64@,System.Char@,System.Int64@,System.Char@)">
            <summary>
            Returns the GPS coordinates. Latitude and longitude are given in the
            ``DD.dddddd°`` format, the value 57123468 means 57.123468°.
            The parameter ``ns`` and ``ew`` are the cardinal directions for
            latitude and longitude. Possible values for ``ns`` and ``ew`` are 'N', 'S', 'E'
            and 'W' (north, south, east and west).
            This data is only valid if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPSV2.GetStatus(System.Boolean@,System.Byte@)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetStatus(System.Boolean@,System.Byte@)">
            <summary>
            Returns if a fix is currently available as well as the, the number of
            satellites that are in view.
            There is also a :ref:`green LED &lt;gps_v2_bricklet_fix_led&gt;` on the Bricklet that
            indicates the fix status.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetAltitude(System.Int32@,System.Int32@)">
            <summary>
            Returns the current altitude and corresponding geoidal separation.
            Both values are given in cm.
            This data is only valid if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPSV2.GetStatus(System.Boolean@,System.Byte@)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetMotion(System.Int64@,System.Int64@)">
            <summary>
            Returns the current course and speed. Course is given in hundredths degree
            and speed is given in hundredths km/h. A course of 0° means the Bricklet is
            traveling north bound and 90° means it is traveling east bound.
            Please note that this only returns useful values if an actual movement
            is present.
            This data is only valid if there is currently a fix as indicated by
            <see cref="M:Tinkerforge.BrickletGPSV2.GetStatus(System.Boolean@,System.Byte@)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetDateTime(System.Int64@,System.Int64@)">
            <summary>
            Returns the current date and time. The date is
            given in the format ``ddmmyy`` and the time is given
            in the format ``hhmmss.sss``. For example, 140713 means
            14.05.13 as date and 195923568 means 19:59:23.568 as time.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.Restart(System.Byte)">
            <summary>
            Restarts the GPS Bricklet, the following restart types are available:
            <code>
            "Value", "Description"
            "0", "Hot start (use all available data in the NV store)"
            "1", "Warm start (don't use ephemeris at restart)"
            "2", "Cold start (don't use time, position, almanacs and ephemeris at restart)"
            "3", "Factory reset (clear all system/user configurations at restart)"
            </code></summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetSatelliteSystemStatusLowLevel(System.Byte,System.Byte@,System.Byte[]@,System.Byte@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the
            * satellite numbers list (up to 12 items)
            * fix value,
            * PDOP value,
            * HDOP value and
            * VDOP value
            for a given satellite system. Currently GPS and GLONASS are supported, Galileo
            is not yet supported.
            The GPS and GLONASS satellites have unique numbers and the satellite list gives
            the numbers of the satellites that are currently utilized. The number 0 is not
            a valid satellite number and can be ignored in the list.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetSatelliteStatus(System.Byte,System.Byte,System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the current
            * elevation (0° - 90°),
            * azimuth (0° - 359°) and
            * SNR (0dB - 99dB)
            for a given satellite and satellite system.
            The satellite number here always goes from 1 to 32. For GLONASS it corresponds to
            the satellites 65-96.
            Galileo is not yet supported.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.SetFixLEDConfig(System.Byte)">
            <summary>
            Sets the fix LED configuration. By default the LED shows if
            the Bricklet got a GPS fix yet. If a fix is established the LED turns on.
            If there is no fix then the LED is turned off.
            You can also turn the LED permanently on/off, show a heartbeat or let it blink
            in sync with the PPS (pulse per second) output of the GPS module.
            If the Bricklet is in bootloader mode, the LED is off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetFixLEDConfig">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletGPSV2.SetFixLEDConfig(System.Byte)" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.SetCoordinatesCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPSV2.CoordinatesCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPSV2.CoordinatesCallback" /> callback is only triggered if the coordinates changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetCoordinatesCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPSV2.SetCoordinatesCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.SetStatusCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPSV2.StatusCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPSV2.StatusCallback" /> callback is only triggered if the status changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetStatusCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPSV2.SetStatusCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.SetAltitudeCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPSV2.AltitudeCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPSV2.AltitudeCallback" /> callback is only triggered if the altitude changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetAltitudeCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPSV2.SetAltitudeCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.SetMotionCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPSV2.MotionCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPSV2.MotionCallback" /> callback is only triggered if the motion changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetMotionCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPSV2.SetMotionCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.SetDateTimeCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletGPSV2.DateTimeCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletGPSV2.DateTimeCallback" /> callback is only triggered if the date or time changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetDateTimeCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletGPSV2.SetDateTimeCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetSPITFPErrorCount(System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the error count for the communication between Brick and Bricklet.
            The errors are divided into
            * ack checksum errors,
            * message checksum errors,
            * frameing errors and
            * overflow errors.
            The errors counts are for errors that occur on the Bricklet side. All
            Bricks have a similar function that returns the errors on the Brick side.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.SetBootloaderMode(System.Byte)">
            <summary>
            Sets the bootloader mode and returns the status after the requested
            mode change was instigated.
            You can change from bootloader mode to firmware mode and vice versa. A change
            from bootloader mode to firmware mode will only take place if the entry function,
            device identifier und crc are present and correct.
            This function is used by Brick Viewer during flashing. It should not be
            necessary to call it in a normal user program.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetBootloaderMode">
            <summary>
            Returns the current bootloader mode, see <see cref="M:Tinkerforge.BrickletGPSV2.SetBootloaderMode(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.SetWriteFirmwarePointer(System.Int64)">
            <summary>
            Sets the firmware pointer for func:`WriteFirmware`. The pointer has
            to be increased by chunks of size 64. The data is written to flash
            every 4 chunks (which equals to one page of size 256).
            This function is used by Brick Viewer during flashing. It should not be
            necessary to call it in a normal user program.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.WriteFirmware(System.Byte[])">
            <summary>
            Writes 64 Bytes of firmware at the position as written by
            <see cref="M:Tinkerforge.BrickletGPSV2.SetWriteFirmwarePointer(System.Int64)" /> before. The firmware is written
            to flash every 4 chunks.
            You can only write firmware in bootloader mode.
            This function is used by Brick Viewer during flashing. It should not be
            necessary to call it in a normal user program.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.SetStatusLEDConfig(System.Byte)">
            <summary>
            Sets the status LED configuration. By default the LED shows
            communication traffic between Brick and Bricklet, it flickers once
            for every 10 received data packets.
            You can also turn the LED permanently on/off or show a heartbeat.
            If the Bricklet is in bootloader mode, the LED is will show heartbeat by default.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetStatusLEDConfig">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletGPSV2.SetStatusLEDConfig(System.Byte)" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetChipTemperature">
            <summary>
            Returns the temperature in °C as measured inside the microcontroller. The
            value returned is not the ambient temperature!
            The temperature is only proportional to the real temperature and it has bad
            accuracy. Practically it is only useful as an indicator for
            temperature changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.Reset">
            <summary>
            Calling this function will reset the Bricklet. All configurations
            will be lost.
            After a reset you have to create new device objects,
            calling functions on the existing ones will result in
            undefined behavior!
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.WriteUID(System.Int64)">
            <summary>
            Writes a new UID into flash. If you want to set a new UID
            you have to decode the Base58 encoded UID string into an
            integer first.
            We recommend that you use Brick Viewer to change the UID.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.ReadUID">
            <summary>
            Returns the current UID as an integer. Encode as
            Base58 to get the usual string version.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.GetSatelliteSystemStatus(System.Byte,System.Byte[]@,System.Byte@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the
            * satellite numbers list (up to 12 items)
            * fix value,
            * PDOP value,
            * HDOP value and
            * VDOP value
            for a given satellite system. Currently GPS and GLONASS are supported, Galileo
            is not yet supported.
            The GPS and GLONASS satellites have unique numbers and the satellite list gives
            the numbers of the satellites that are currently utilized. The number 0 is not
            a valid satellite number and can be ignored in the list.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.OnPulsePerSecondCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.OnCoordinatesCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.OnStatusCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.OnAltitudeCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.OnMotionCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletGPSV2.OnDateTimeCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletHallEffect">
            <summary>
            Detects presence of magnetic field
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_GET_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_GET_EDGE_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_SET_EDGE_COUNT_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_GET_EDGE_COUNT_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_SET_EDGE_INTERRUPT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_GET_EDGE_INTERRUPT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_SET_EDGE_COUNT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_GET_EDGE_COUNT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_EDGE_INTERRUPT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.EDGE_TYPE_RISING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.EDGE_TYPE_FALLING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHallEffect.EDGE_TYPE_BOTH">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHallEffect.EdgeCountCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletHallEffect.SetEdgeCountCallbackPeriod(System.Int64)" />. The parameters are the
            current count and the current value (see <see cref="M:Tinkerforge.BrickletHallEffect.GetValue" /> and
            <see cref="M:Tinkerforge.BrickletHallEffect.GetEdgeCount(System.Boolean)" />).
            The <see cref="E:Tinkerforge.BrickletHallEffect.EdgeCountCallback" /> callback is only triggered if the count or value changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletHallEffect.EdgeCountEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHallEffect.EdgeCount">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.GetValue">
            <summary>
            Returns *true* if a magnetic field of 35 Gauss (3.5mT) or greater is detected.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.GetEdgeCount(System.Boolean)">
            <summary>
            Returns the current value of the edge counter. You can configure
            edge type (rising, falling, both) that is counted with
            <see cref="M:Tinkerforge.BrickletHallEffect.SetEdgeCountConfig(System.Byte,System.Byte)" />.
            If you set the reset counter to *true*, the count is set back to 0
            directly after it is read.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.SetEdgeCountConfig(System.Byte,System.Byte)">
            <summary>
            The edge type parameter configures if rising edges, falling edges or
            both are counted. Possible edge types are:
            * 0 = rising (default)
            * 1 = falling
            * 2 = both
            A magnetic field of 35 Gauss (3.5mT) or greater causes a falling edge and a
            magnetic field of 25 Gauss (2.5mT) or smaller causes a rising edge.
            If a magnet comes near the Bricklet the signal goes low (falling edge), if
            a magnet is removed from the vicinity the signal goes high (rising edge).
            The debounce time is given in ms.
            Configuring an edge counter resets its value to 0.
            If you don't know what any of this means, just leave it at default. The
            default configuration is very likely OK for you.
            Default values: 0 (edge type) and 100ms (debounce time)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.GetEdgeCountConfig(System.Byte@,System.Byte@)">
            <summary>
            Returns the edge type and debounce time as set by <see cref="M:Tinkerforge.BrickletHallEffect.SetEdgeCountConfig(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.SetEdgeInterrupt(System.Int64)">
            <summary>
            Sets the number of edges until an interrupt is invoked.
            If *edges* is set to n, an interrupt is invoked for every n-th detected edge.
            If *edges* is set to 0, the interrupt is disabled.
            Default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.GetEdgeInterrupt">
            <summary>
            Returns the edges as set by <see cref="M:Tinkerforge.BrickletHallEffect.SetEdgeInterrupt(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.SetEdgeCountCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletHallEffect.EdgeCountCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletHallEffect.EdgeCountCallback" /> callback is only triggered if the edge count has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.GetEdgeCountCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletHallEffect.SetEdgeCountCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.EdgeInterrupt(System.Int64@,System.Boolean@)">
            <summary>
            This callback is triggered every n-th count, as configured with
            <see cref="M:Tinkerforge.BrickletHallEffect.SetEdgeInterrupt(System.Int64)" />. The parameters are the
            current count and the current value (see <see cref="M:Tinkerforge.BrickletHallEffect.GetValue" /> and
            <see cref="M:Tinkerforge.BrickletHallEffect.GetEdgeCount(System.Boolean)" />).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHallEffect.OnEdgeCountCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletHumidity">
            <summary>
            Measures relative humidity
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_GET_HUMIDITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_SET_HUMIDITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_GET_HUMIDITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_SET_HUMIDITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_GET_HUMIDITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletHumidity.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHumidity.HumidityCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletHumidity.SetHumidityCallbackPeriod(System.Int64)" />. The parameter is the humidity of
            the sensor.
            The <see cref="E:Tinkerforge.BrickletHumidity.HumidityCallback" /> callback is only triggered if the humidity has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletHumidity.HumidityEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHumidity.Humidity">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHumidity.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletHumidity.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the analog
            value of the sensor.
            The <see cref="E:Tinkerforge.BrickletHumidity.AnalogValueCallback" /> callback is only triggered if the humidity has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletHumidity.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHumidity.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHumidity.HumidityReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletHumidity.SetHumidityCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the humidity of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletHumidity.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletHumidity.HumidityReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHumidity.HumidityReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHumidity.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletHumidity.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletHumidity.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletHumidity.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletHumidity.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.GetHumidity">
            <summary>
            Returns the humidity of the sensor. The value
            has a range of 0 to 1000 and is given in %RH/10 (Relative Humidity),
            i.e. a value of 421 means that a humidity of 42.1 %RH is measured.
            If you want to get the humidity periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletHumidity.HumidityCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletHumidity.SetHumidityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            <note>
            The value returned by <see cref="M:Tinkerforge.BrickletHumidity.GetHumidity" /> is averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletHumidity.GetAnalogValue" /> gives back raw
            unfiltered analog values. The returned humidity value is calibrated for
            room temperatures, if you use the sensor in extreme cold or extreme
            warm environments, you might want to calculate the humidity from
            the analog value yourself. See the `HIH 5030 datasheet
            &lt;https://github.com/Tinkerforge/humidity-bricklet/raw/master/datasheets/hih-5030.pdf&gt;`__.
            </note>
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletHumidity.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletHumidity.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.SetHumidityCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletHumidity.HumidityCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletHumidity.HumidityCallback" /> callback is only triggered if the humidity has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.GetHumidityCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletHumidity.SetHumidityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletHumidity.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletHumidity.AnalogValueCallback" /> callback is only triggered if the analog value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletHumidity.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.SetHumidityCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletHumidity.HumidityReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the humidity is *outside* the min and max values"
            "'i'",    "Callback is triggered when the humidity is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the humidity is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the humidity is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.GetHumidityCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletHumidity.SetHumidityCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletHumidity.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletHumidity.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletHumidity.HumidityReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletHumidity.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletHumidity.SetHumidityCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletHumidity.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletHumidity.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.OnHumidityCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.OnHumidityReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletHumidity.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialAnalogOut">
            <summary>
            Generates configurable DC voltage and current, 0V to 10V and 4mA to 20mA
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_ENABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_DISABLE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_IS_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_SET_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_GET_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_SET_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_GET_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.VOLTAGE_RANGE_0_TO_5V">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.VOLTAGE_RANGE_0_TO_10V">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.CURRENT_RANGE_4_TO_20MA">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.CURRENT_RANGE_0_TO_20MA">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialAnalogOut.CURRENT_RANGE_0_TO_24MA">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.Enable">
            <summary>
            Enables the output of voltage and current.
            The default is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.Disable">
            <summary>
            Disables the output of voltage and current.
            The default is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.IsEnabled">
            <summary>
            Returns *true* if output of voltage and current is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.SetVoltage(System.Int32)">
            <summary>
            Sets the output voltage in mV.
            The output voltage and output current are linked. Changing the output voltage
            also changes the output current.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.GetVoltage">
            <summary>
            Returns the voltage as set by <see cref="M:Tinkerforge.BrickletIndustrialAnalogOut.SetVoltage(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.SetCurrent(System.Int32)">
            <summary>
            Sets the output current in µA.
            The output current and output voltage are linked. Changing the output current
            also changes the output voltage.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.GetCurrent">
            <summary>
            Returns the current as set by <see cref="M:Tinkerforge.BrickletIndustrialAnalogOut.SetCurrent(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.SetConfiguration(System.Byte,System.Byte)">
            <summary>
            Configures the voltage and current range.
            Possible voltage ranges are:
            * 0V to 5V
            * 0V to 10V (default)
            Possible current ranges are:
            * 4mA to 20mA (default)
            * 0mA to 20mA
            * 0mA to 24mA
            The resolution will always be 12 bit. This means, that the
            precision is higher with a smaller range.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.GetConfiguration(System.Byte@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletIndustrialAnalogOut.SetConfiguration(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialAnalogOut.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDigitalIn4">
            <summary>
            4 galvanically isolated digital inputs
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_GET_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_SET_GROUP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_GET_GROUP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_GET_AVAILABLE_FOR_GROUP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_SET_INTERRUPT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_GET_INTERRUPT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_GET_EDGE_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_SET_EDGE_COUNT_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_GET_EDGE_COUNT_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.EDGE_TYPE_RISING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.EDGE_TYPE_FALLING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalIn4.EDGE_TYPE_BOTH">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDigitalIn4.InterruptCallback">
            <summary>
            This callback is triggered whenever a change of the voltage level is detected
            on pins where the interrupt was activated with <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetInterrupt(System.Int32)" />.
            The values are a bitmask that specifies which interrupts occurred
            and the current value bitmask.
            For example:
            * (1, 1) or (0b0001, 0b0001) means that an interrupt on pin 0 occurred and
            currently pin 0 is high and pins 1-3 are low.
            * (9, 14) or (0b1001, 0b1110) means that interrupts on pins 0 and 3
            occurred and currently pin 0 is low and pins 1-3 are high.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDigitalIn4.InterruptEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDigitalIn4.Interrupt">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetValue">
            <summary>
            Returns the input value with a bitmask. The bitmask is 16bit long, *true*
            refers to high and *false* refers to low.
            For example: The value 3 or 0b0011 means that pins 0-1 are high and the other
            pins are low.
            If no groups are used (see <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetGroup(System.Char[])" />), the pins correspond to the
            markings on the Digital In 4 Bricklet.
            If groups are used, the pins correspond to the element in the group.
            Element 1 in the group will get pins 0-3, element 2 pins 4-7, element 3
            pins 8-11 and element 4 pins 12-15.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetGroup(System.Char[])">
            <summary>
            Sets a group of Digital In 4 Bricklets that should work together. You can
            find Bricklets that can be grouped together with <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetAvailableForGroup" />.
            The group consists of 4 elements. Element 1 in the group will get pins 0-3,
            element 2 pins 4-7, element 3 pins 8-11 and element 4 pins 12-15.
            Each element can either be one of the ports ('a' to 'd') or 'n' if it should
            not be used.
            For example: If you have two Digital In 4 Bricklets connected to port A and
            port B respectively, you could call with ``['a', 'b', 'n', 'n']``.
            Now the pins on the Digital In 4 on port A are assigned to 0-3 and the
            pins on the Digital In 4 on port B are assigned to 4-7. It is now possible
            to call <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetValue" /> and read out two Bricklets at the same time.
            Changing the group configuration resets all edge counter configurations
            and values.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetGroup">
            <summary>
            Returns the group as set by <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetGroup(System.Char[])" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetAvailableForGroup">
            <summary>
            Returns a bitmask of ports that are available for grouping. For example the
            value 5 or 0b0101 means: Port A and port C are connected to Bricklets that
            can be grouped together.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the debounce period of the <see cref="E:Tinkerforge.BrickletIndustrialDigitalIn4.InterruptCallback" /> callback in ms.
            For example: If you set this value to 100, you will get the interrupt
            maximal every 100ms. This is necessary if something that bounces is
            connected to the Digital In 4 Bricklet, such as a button.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetInterrupt(System.Int32)">
            <summary>
            Sets the pins on which an interrupt is activated with a bitmask.
            Interrupts are triggered on changes of the voltage level of the pin,
            i.e. changes from high to low and low to high.
            For example: An interrupt bitmask of 9 or 0b1001 will enable the interrupt for
            pins 0 and 3.
            The interrupts use the grouping as set by <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetGroup(System.Char[])" />.
            The interrupt is delivered with the <see cref="E:Tinkerforge.BrickletIndustrialDigitalIn4.InterruptCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetInterrupt">
            <summary>
            Returns the interrupt bitmask as set by <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetInterrupt(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetEdgeCount(System.Byte,System.Boolean)">
            <summary>
            Returns the current value of the edge counter for the selected pin. You can
            configure the edges that are counted with <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetEdgeCountConfig(System.Int32,System.Byte,System.Byte)" />.
            If you set the reset counter to *true*, the count is set back to 0
            directly after it is read.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetEdgeCountConfig(System.Int32,System.Byte,System.Byte)">
            <summary>
            Configures the edge counter for the selected pins. A bitmask of 9 or 0b1001 will
            enable the edge counter for pins 0 and 3.
            The edge type parameter configures if rising edges, falling edges or
            both are counted if the pin is configured for input. Possible edge types are:
            * 0 = rising (default)
            * 1 = falling
            * 2 = both
            The debounce time is given in ms.
            Configuring an edge counter resets its value to 0.
            If you don't know what any of this means, just leave it at default. The
            default configuration is very likely OK for you.
            Default values: 0 (edge type) and 100ms (debounce time)
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetEdgeCountConfig(System.Byte,System.Byte@,System.Byte@)">
            <summary>
            Returns the edge type and debounce time for the selected pin as set by
            <see cref="M:Tinkerforge.BrickletIndustrialDigitalIn4.SetEdgeCountConfig(System.Int32,System.Byte,System.Byte)" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalIn4.OnInterruptCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDigitalOut4">
            <summary>
            4 galvanically isolated digital outputs
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.FUNCTION_SET_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.FUNCTION_GET_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.FUNCTION_SET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.FUNCTION_GET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.FUNCTION_SET_GROUP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.FUNCTION_GET_GROUP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.FUNCTION_GET_AVAILABLE_FOR_GROUP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.FUNCTION_SET_SELECTED_VALUES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDigitalOut4.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDigitalOut4.MonoflopDoneCallback">
            <summary>
            This callback is triggered whenever a monoflop timer reaches 0. The
            parameters contain the involved pins and the current value of the pins
            (the value after the monoflop).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDigitalOut4.MonoflopDoneEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDigitalOut4.MonoflopDone">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetValue(System.Int32)">
            <summary>
            Sets the output value with a bitmask (16bit). A 1 in the bitmask means high
            and a 0 in the bitmask means low.
            For example: The value 3 or 0b0011 will turn pins 0-1 high and the other pins
            low.
            If no groups are used (see <see cref="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetGroup(System.Char[])" />), the pins correspond to the
            markings on the Digital Out 4 Bricklet.
            If groups are used, the pins correspond to the element in the group.
            Element 1 in the group will get pins 0-3, element 2 pins 4-7, element 3
            pins 8-11 and element 4 pins 12-15.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.GetValue">
            <summary>
            Returns the bitmask as set by <see cref="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetValue(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetMonoflop(System.Int32,System.Int32,System.Int64)">
            <summary>
            Configures a monoflop of the pins specified by the first parameter
            bitmask.
            The second parameter is a bitmask with the desired value of the specified
            pins. A 1 in the bitmask means high and a 0 in the bitmask means low.
            The third parameter indicates the time (in ms) that the pins should hold
            the value.
            If this function is called with the parameters (9, 1, 1500) or
            (0b1001, 0b0001, 1500): Pin 0 will get high and pin 3 will get low. In 1.5s
            pin 0 will get low and pin 3 will get high again.
            A monoflop can be used as a fail-safe mechanism. For example: Lets assume you
            have a RS485 bus and a Digital Out 4 Bricklet connected to one of the slave
            stacks. You can now call this function every second, with a time parameter
            of two seconds and pin 0 high. Pin 0 will be high all the time. If now
            the RS485 connection is lost, then pin 0 will turn low in at most two seconds.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.GetMonoflop(System.Byte,System.Int32@,System.Int64@,System.Int64@)">
            <summary>
            Returns (for the given pin) the current value and the time as set by
            <see cref="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetMonoflop(System.Int32,System.Int32,System.Int64)" /> as well as the remaining time until the value flips.
            If the timer is not running currently, the remaining time will be returned
            as 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetGroup(System.Char[])">
            <summary>
            Sets a group of Digital Out 4 Bricklets that should work together. You can
            find Bricklets that can be grouped together with <see cref="M:Tinkerforge.BrickletIndustrialDigitalOut4.GetAvailableForGroup" />.
            The group consists of 4 elements. Element 1 in the group will get pins 0-3,
            element 2 pins 4-7, element 3 pins 8-11 and element 4 pins 12-15.
            Each element can either be one of the ports ('a' to 'd') or 'n' if it should
            not be used.
            For example: If you have two Digital Out 4 Bricklets connected to port A and
            port B respectively, you could call with ``['a', 'b', 'n', 'n']``.
            Now the pins on the Digital Out 4 on port A are assigned to 0-3 and the
            pins on the Digital Out 4 on port B are assigned to 4-7. It is now possible
            to call <see cref="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetValue(System.Int32)" /> and control two Bricklets at the same time.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.GetGroup">
            <summary>
            Returns the group as set by <see cref="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetGroup(System.Char[])" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.GetAvailableForGroup">
            <summary>
            Returns a bitmask of ports that are available for grouping. For example the
            value 5 or 0b0101 means: Port A and port C are connected to Bricklets that
            can be grouped together.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetSelectedValues(System.Int32,System.Int32)">
            <summary>
            Sets the output value with a bitmask, according to the selection mask.
            The bitmask is 16 bit long, *true* refers to high and *false* refers to
            low.
            For example: The values (3, 1) or (0b0011, 0b0001) will turn pin 0 high, pin 1
            low the other pins remain untouched.
            If no groups are used (see <see cref="M:Tinkerforge.BrickletIndustrialDigitalOut4.SetGroup(System.Char[])" />), the pins correspond to the
            markings on the Digital Out 4 Bricklet.
            If groups are used, the pins correspond to the element in the group.
            Element 1 in the group will get pins 0-3, element 2 pins 4-7, element 3
            pins 8-11 and element 4 pins 12-15.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDigitalOut4.OnMonoflopDoneCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDual020mA">
            <summary>
            Measures two DC currents between 0mA and 20mA (IEC 60381-1)
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_GET_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_SET_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_GET_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_SET_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_GET_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_SET_SAMPLE_RATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_GET_SAMPLE_RATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.SAMPLE_RATE_240_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.SAMPLE_RATE_60_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.SAMPLE_RATE_15_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDual020mA.SAMPLE_RATE_4_SPS">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDual020mA.CurrentCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletIndustrialDual020mA.SetCurrentCallbackPeriod(System.Byte,System.Int64)" />. The parameter is the current of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletIndustrialDual020mA.CurrentCallback" /> callback is only triggered if the current has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDual020mA.CurrentEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDual020mA.Current">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDual020mA.CurrentReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletIndustrialDual020mA.SetCurrentCallbackThreshold(System.Byte,System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the current of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletIndustrialDual020mA.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDual020mA.CurrentReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDual020mA.CurrentReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.GetCurrent(System.Byte)">
            <summary>
            Returns the current of the specified sensor (0 or 1). The value is in nA
            and between 0nA and 22505322nA (22.5mA).
            It is possible to detect if an IEC 60381-1 compatible sensor is connected
            and if it works probably.
            If the returned current is below 4mA, there is likely no sensor connected
            or the sensor may be defect. If the returned current is over 20mA, there might
            be a short circuit or the sensor may be defect.
            If you want to get the current periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletIndustrialDual020mA.CurrentCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletIndustrialDual020mA.SetCurrentCallbackPeriod(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.SetCurrentCallbackPeriod(System.Byte,System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletIndustrialDual020mA.CurrentCallback" /> callback is triggered
            periodically for the given sensor. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletIndustrialDual020mA.CurrentCallback" /> callback is only triggered if the current has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.GetCurrentCallbackPeriod(System.Byte)">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletIndustrialDual020mA.SetCurrentCallbackPeriod(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.SetCurrentCallbackThreshold(System.Byte,System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletIndustrialDual020mA.CurrentReachedCallback" /> callback for the given
            sensor.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the current is *outside* the min and max values"
            "'i'",    "Callback is triggered when the current is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the current is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the current is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.GetCurrentCallbackThreshold(System.Byte,System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletIndustrialDual020mA.SetCurrentCallbackThreshold(System.Byte,System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletIndustrialDual020mA.CurrentReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletIndustrialDual020mA.SetCurrentCallbackThreshold(System.Byte,System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletIndustrialDual020mA.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.SetSampleRate(System.Byte)">
            <summary>
            Sets the sample rate to either 240, 60, 15 or 4 samples per second.
            The resolution for the rates is 12, 14, 16 and 18 bit respectively.
            <code>
            "Value", "Description"
            "0",    "240 samples per second, 12 bit resolution"
            "1",    "60 samples per second, 14 bit resolution"
            "2",    "15 samples per second, 16 bit resolution"
            "3",    "4 samples per second, 18 bit resolution"
            </code>
            The default value is 3 (4 samples per second with 18 bit resolution).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.GetSampleRate">
            <summary>
            Returns the sample rate as set by <see cref="M:Tinkerforge.BrickletIndustrialDual020mA.SetSampleRate(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.OnCurrentCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDual020mA.OnCurrentReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDualAnalogIn">
            <summary>
            Measures two DC voltages between -35V and +35V with 24bit resolution each
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_GET_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_SET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_GET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_SET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_GET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_SET_SAMPLE_RATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_GET_SAMPLE_RATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_SET_CALIBRATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_GET_CALIBRATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_GET_ADC_VALUES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.SAMPLE_RATE_976_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.SAMPLE_RATE_488_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.SAMPLE_RATE_244_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.SAMPLE_RATE_122_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.SAMPLE_RATE_61_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.SAMPLE_RATE_4_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.SAMPLE_RATE_2_SPS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialDualAnalogIn.SAMPLE_RATE_1_SPS">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetVoltageCallbackPeriod(System.Byte,System.Int64)" />. The parameter is the voltage of the
            channel.
            The <see cref="E:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageCallback" /> callback is only triggered if the voltage has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDualAnalogIn.Voltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetVoltageCallbackThreshold(System.Byte,System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the voltage of the channel.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.GetVoltage(System.Byte)">
            <summary>
            Returns the voltage for the given channel in mV.
            If you want to get the voltage periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetVoltageCallbackPeriod(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetVoltageCallbackPeriod(System.Byte,System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageCallback" /> callback is triggered
            periodically for the given channel. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageCallback" /> callback is only triggered if the voltage has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.GetVoltageCallbackPeriod(System.Byte)">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetVoltageCallbackPeriod(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetVoltageCallbackThreshold(System.Byte,System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageReachedCallback" /> callback for the given
            channel.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the voltage is *outside* the min and max values"
            "'i'",    "Callback is triggered when the voltage is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the voltage is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the voltage is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.GetVoltageCallbackThreshold(System.Byte,System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetVoltageCallbackThreshold(System.Byte,System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletIndustrialDualAnalogIn.VoltageReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetVoltageCallbackThreshold(System.Byte,System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetSampleRate(System.Byte)">
            <summary>
            Sets the sample rate. The sample rate can be between 1 sample per second
            and 976 samples per second. Decreasing the sample rate will also decrease the
            noise on the data.
            The default value is 6 (2 samples per second).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.GetSampleRate">
            <summary>
            Returns the sample rate as set by <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetSampleRate(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetCalibration(System.Int32[],System.Int32[])">
            <summary>
            Sets offset and gain of MCP3911 internal calibration registers.
            See MCP3911 datasheet 7.7 and 7.8. The Industrial Dual Analog In Bricklet
            is already factory calibrated by Tinkerforge. It should not be necessary
            for you to use this function
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.GetCalibration(System.Int32[]@,System.Int32[]@)">
            <summary>
            Returns the calibration as set by <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetCalibration(System.Int32[],System.Int32[])" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.GetADCValues">
            <summary>
            Returns the ADC values as given by the MCP3911 IC. This function
            is needed for proper calibration, see <see cref="M:Tinkerforge.BrickletIndustrialDualAnalogIn.SetCalibration(System.Int32[],System.Int32[])" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.OnVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialDualAnalogIn.OnVoltageReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialQuadRelay">
            <summary>
            4 galvanically isolated solid state relays
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.FUNCTION_SET_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.FUNCTION_GET_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.FUNCTION_SET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.FUNCTION_GET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.FUNCTION_SET_GROUP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.FUNCTION_GET_GROUP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.FUNCTION_GET_AVAILABLE_FOR_GROUP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.FUNCTION_SET_SELECTED_VALUES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIndustrialQuadRelay.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialQuadRelay.MonoflopDoneCallback">
            <summary>
            This callback is triggered whenever a monoflop timer reaches 0. The
            parameters contain the involved pins and the current value of the pins
            (the value after the monoflop).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIndustrialQuadRelay.MonoflopDoneEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIndustrialQuadRelay.MonoflopDone">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.SetValue(System.Int32)">
            <summary>
            Sets the output value with a bitmask (16bit). A 1 in the bitmask means relay
            closed and a 0 means relay open.
            For example: The value 3 or 0b0011 will close the relay of pins 0-1 and open
            the other pins.
            If no groups are used (see <see cref="M:Tinkerforge.BrickletIndustrialQuadRelay.SetGroup(System.Char[])" />), the pins correspond to the
            markings on the Quad Relay Bricklet.
            If groups are used, the pins correspond to the element in the group.
            Element 1 in the group will get pins 0-3, element 2 pins 4-7, element 3
            pins 8-11 and element 4 pins 12-15.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.GetValue">
            <summary>
            Returns the bitmask as set by <see cref="M:Tinkerforge.BrickletIndustrialQuadRelay.SetValue(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.SetMonoflop(System.Int32,System.Int32,System.Int64)">
            <summary>
            Configures a monoflop of the pins specified by the first parameter
            bitmask.
            The second parameter is a bitmask with the desired value of the specified
            pins. A 1 in the bitmask means relay closed and a 0 means relay open.
            The third parameter indicates the time (in ms) that the pins should hold
            the value.
            If this function is called with the parameters (9, 1, 1500) or
            (0b1001, 0b0001, 1500): Pin 0 will close and pin 3 will open. In 1.5s pin 0
            will open and pin 3 will close again.
            A monoflop can be used as a fail-safe mechanism. For example: Lets assume you
            have a RS485 bus and a Quad Relay Bricklet connected to one of the slave
            stacks. You can now call this function every second, with a time parameter
            of two seconds and pin 0 closed. Pin 0 will be closed all the time. If now
            the RS485 connection is lost, then pin 0 will be opened in at most two seconds.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.GetMonoflop(System.Byte,System.Int32@,System.Int64@,System.Int64@)">
            <summary>
            Returns (for the given pin) the current value and the time as set by
            <see cref="M:Tinkerforge.BrickletIndustrialQuadRelay.SetMonoflop(System.Int32,System.Int32,System.Int64)" /> as well as the remaining time until the value flips.
            If the timer is not running currently, the remaining time will be returned
            as 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.SetGroup(System.Char[])">
            <summary>
            Sets a group of Quad Relay Bricklets that should work together. You can
            find Bricklets that can be grouped together with <see cref="M:Tinkerforge.BrickletIndustrialQuadRelay.GetAvailableForGroup" />.
            The group consists of 4 elements. Element 1 in the group will get pins 0-3,
            element 2 pins 4-7, element 3 pins 8-11 and element 4 pins 12-15.
            Each element can either be one of the ports ('a' to 'd') or 'n' if it should
            not be used.
            For example: If you have two Quad Relay Bricklets connected to port A and
            port B respectively, you could call with ``['a', 'b', 'n', 'n']``.
            Now the pins on the Quad Relay on port A are assigned to 0-3 and the
            pins on the Quad Relay on port B are assigned to 4-7. It is now possible
            to call <see cref="M:Tinkerforge.BrickletIndustrialQuadRelay.SetValue(System.Int32)" /> and control two Bricklets at the same time.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.GetGroup">
            <summary>
            Returns the group as set by <see cref="M:Tinkerforge.BrickletIndustrialQuadRelay.SetGroup(System.Char[])" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.GetAvailableForGroup">
            <summary>
            Returns a bitmask of ports that are available for grouping. For example the
            value 5 or 0b0101 means: Port A and port C are connected to Bricklets that
            can be grouped together.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.SetSelectedValues(System.Int32,System.Int32)">
            <summary>
            Sets the output value with a bitmask, according to the selection mask.
            The bitmask is 16 bit long, *true* refers to a closed relay and
            *false* refers to an open relay.
            For example: The values (3, 1) or (0b0011, 0b0001) will close the relay of
            pin 0, open the relay of pin 1 and leave the others untouched.
            If no groups are used (see <see cref="M:Tinkerforge.BrickletIndustrialQuadRelay.SetGroup(System.Char[])" />), the pins correspond to the
            markings on the Quad Relay Bricklet.
            If groups are used, the pins correspond to the element in the group.
            Element 1 in the group will get pins 0-3, element 2 pins 4-7, element 3
            pins 8-11 and element 4 pins 12-15.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIndustrialQuadRelay.OnMonoflopDoneCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIO16">
            <summary>
            16-channel digital input/output
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_SET_PORT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_GET_PORT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_SET_PORT_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_GET_PORT_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_SET_PORT_INTERRUPT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_GET_PORT_INTERRUPT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_SET_PORT_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_GET_PORT_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_SET_SELECTED_VALUES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_GET_EDGE_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_SET_EDGE_COUNT_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_GET_EDGE_COUNT_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.DIRECTION_IN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.DIRECTION_OUT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.EDGE_TYPE_RISING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.EDGE_TYPE_FALLING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO16.EDGE_TYPE_BOTH">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIO16.InterruptCallback">
            <summary>
            This callback is triggered whenever a change of the voltage level is detected
            on pins where the interrupt was activated with <see cref="M:Tinkerforge.BrickletIO16.SetPortInterrupt(System.Char,System.Byte)" />.
            The values are the port, a bitmask that specifies which interrupts occurred
            and the current value bitmask of the port.
            For example:
            * ('a', 1, 1) or ('a', 0b00000001, 0b00000001) means that on port A an
            interrupt on pin 0 occurred and currently pin 0 is high and pins 1-7 are low.
            * ('b', 129, 254) or ('b', 0b10000001, 0b11111110) means that on port B
            interrupts on pins 0 and 7 occurred and currently pin 0 is low and pins 1-7
            are high.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIO16.InterruptEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIO16.Interrupt">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIO16.MonoflopDoneCallback">
            <summary>
            This callback is triggered whenever a monoflop timer reaches 0. The
            parameters contain the port, the involved pins and the current value of
            the pins (the value after the monoflop).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIO16.MonoflopDoneEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIO16.MonoflopDone">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.SetPort(System.Char,System.Byte)">
            <summary>
            Sets the output value (high or low) for a port ("a" or "b") with a bitmask
            (8bit). A 1 in the bitmask means high and a 0 in the bitmask means low.
            For example: The value 15 or 0b00001111 will turn the pins 0-3 high and the
            pins 4-7 low for the specified port.
            <note>
            This function does nothing for pins that are configured as input.
            Pull-up resistors can be switched on with <see cref="M:Tinkerforge.BrickletIO16.SetPortConfiguration(System.Char,System.Byte,System.Char,System.Boolean)" />.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.GetPort(System.Char)">
            <summary>
            Returns a bitmask of the values that are currently measured on the
            specified port. This function works if the pin is configured to input
            as well as if it is configured to output.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.SetPortConfiguration(System.Char,System.Byte,System.Char,System.Boolean)">
            <summary>
            Configures the value and direction of a specified port. Possible directions
            are 'i' and 'o' for input and output.
            If the direction is configured as output, the value is either high or low
            (set as *true* or *false*).
            If the direction is configured as input, the value is either pull-up or
            default (set as *true* or *false*).
            For example:
            * ('a', 255, 'i', true) or ('a', 0b11111111, 'i', true) will set all pins of port A as input pull-up.
            * ('a', 128, 'i', false) or ('a', 0b10000000, 'i', false) will set pin 7 of port A as input default (floating if nothing is connected).
            * ('b', 3, 'o', false) or ('b', 0b00000011, 'o', false) will set pins 0 and 1 of port B as output low.
            * ('b', 4, 'o', true) or ('b', 0b00000100, 'o', true) will set pin 2 of port B as output high.
            The default configuration is input with pull-up.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.GetPortConfiguration(System.Char,System.Byte@,System.Byte@)">
            <summary>
            Returns a direction bitmask and a value bitmask for the specified port. A 1 in
            the direction bitmask means input and a 0 in the bitmask means output.
            For example: A return value of (15, 51) or (0b00001111, 0b00110011) for
            direction and value means that:
            * pins 0 and 1 are configured as input pull-up,
            * pins 2 and 3 are configured as input default,
            * pins 4 and 5 are configured as output high
            * and pins 6 and 7 are configured as output low.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the debounce period of the <see cref="E:Tinkerforge.BrickletIO16.InterruptCallback" /> callback in ms.
            For example: If you set this value to 100, you will get the interrupt
            maximal every 100ms. This is necessary if something that bounces is
            connected to the IO-16 Bricklet, such as a button.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletIO16.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.SetPortInterrupt(System.Char,System.Byte)">
            <summary>
            Sets the pins on which an interrupt is activated with a bitmask.
            Interrupts are triggered on changes of the voltage level of the pin,
            i.e. changes from high to low and low to high.
            For example: ('a', 129) or ('a', 0b10000001) will enable the interrupt for
            pins 0 and 7 of port a.
            The interrupt is delivered with the <see cref="E:Tinkerforge.BrickletIO16.InterruptCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.GetPortInterrupt(System.Char)">
            <summary>
            Returns the interrupt bitmask for the specified port as set by
            <see cref="M:Tinkerforge.BrickletIO16.SetPortInterrupt(System.Char,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.SetPortMonoflop(System.Char,System.Byte,System.Byte,System.Int64)">
            <summary>
            Configures a monoflop of the pins specified by the second parameter as 8 bit
            long bitmask. The specified pins must be configured for output. Non-output
            pins will be ignored.
            The third parameter is a bitmask with the desired value of the specified
            output pins. A 1 in the bitmask means high and a 0 in the bitmask means low.
            The forth parameter indicates the time (in ms) that the pins should hold
            the value.
            If this function is called with the parameters ('a', 9, 1, 1500) or
            ('a', 0b00001001, 0b00000001, 1500): Pin 0 will get high and pin 3 will get
            low on port 'a'. In 1.5s pin 0 will get low and pin 3 will get high again.
            A monoflop can be used as a fail-safe mechanism. For example: Lets assume you
            have a RS485 bus and an IO-16 Bricklet connected to one of the slave
            stacks. You can now call this function every second, with a time parameter
            of two seconds and pin 0 set to high. Pin 0 will be high all the time. If now
            the RS485 connection is lost, then pin 0 will get low in at most two seconds.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.GetPortMonoflop(System.Char,System.Byte,System.Byte@,System.Int64@,System.Int64@)">
            <summary>
            Returns (for the given pin) the current value and the time as set by
            <see cref="M:Tinkerforge.BrickletIO16.SetPortMonoflop(System.Char,System.Byte,System.Byte,System.Int64)" /> as well as the remaining time until the value flips.
            If the timer is not running currently, the remaining time will be returned
            as 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.SetSelectedValues(System.Char,System.Byte,System.Byte)">
            <summary>
            Sets the output value (high or low) for a port ("a" or "b" with a bitmask,
            according to the selection mask. The bitmask is 8 bit long and a 1 in the
            bitmask means high and a 0 in the bitmask means low.
            For example: The parameters ('a', 192, 128) or ('a', 0b11000000, 0b10000000)
            will turn pin 7 high and pin 6 low on port A, pins 0-6 will remain untouched.
            <note>
            This function does nothing for pins that are configured as input.
            Pull-up resistors can be switched on with <see cref="M:Tinkerforge.BrickletIO16.SetPortConfiguration(System.Char,System.Byte,System.Char,System.Boolean)" />.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.GetEdgeCount(System.Byte,System.Boolean)">
            <summary>
            Returns the current value of the edge counter for the selected pin on port A.
            You can configure the edges that are counted with <see cref="M:Tinkerforge.BrickletIO16.SetEdgeCountConfig(System.Byte,System.Byte,System.Byte)" />.
            If you set the reset counter to *true*, the count is set back to 0
            directly after it is read.
            .. versionadded:: 2.0.3$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.SetEdgeCountConfig(System.Byte,System.Byte,System.Byte)">
            <summary>
            Configures the edge counter for the selected pin of port A. Pins 0 and 1
            are available for edge counting.
            The edge type parameter configures if rising edges, falling edges or
            both are counted if the pin is configured for input. Possible edge types are:
            * 0 = rising (default)
            * 1 = falling
            * 2 = both
            The debounce time is given in ms.
            Configuring an edge counter resets its value to 0.
            If you don't know what any of this means, just leave it at default. The
            default configuration is very likely OK for you.
            Default values: 0 (edge type) and 100ms (debounce time)
            .. versionadded:: 2.0.3$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.GetEdgeCountConfig(System.Byte,System.Byte@,System.Byte@)">
            <summary>
            Returns the edge type and debounce time for the selected pin of port A as set by
            <see cref="M:Tinkerforge.BrickletIO16.SetEdgeCountConfig(System.Byte,System.Byte,System.Byte)" />.
            .. versionadded:: 2.0.3$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.OnInterruptCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO16.OnMonoflopDoneCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIO4">
            <summary>
            4-channel digital input/output
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_SET_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_GET_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_SET_INTERRUPT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_GET_INTERRUPT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_SET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_GET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_SET_SELECTED_VALUES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_GET_EDGE_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_SET_EDGE_COUNT_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_GET_EDGE_COUNT_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.DIRECTION_IN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.DIRECTION_OUT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.EDGE_TYPE_RISING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.EDGE_TYPE_FALLING">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletIO4.EDGE_TYPE_BOTH">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIO4.InterruptCallback">
            <summary>
            This callback is triggered whenever a change of the voltage level is detected
            on pins where the interrupt was activated with <see cref="M:Tinkerforge.BrickletIO4.SetInterrupt(System.Byte)" />.
            The values are a bitmask that specifies which interrupts occurred
            and the current value bitmask.
            For example:
            * (1, 1) or (0b0001, 0b0001) means that an interrupt on pin 0 occurred and
            currently pin 0 is high and pins 1-3 are low.
            * (9, 14) or (0b1001, 0b1110) means that interrupts on pins 0 and 3
            occurred and currently pin 0 is low and pins 1-3 are high.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIO4.InterruptEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIO4.Interrupt">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIO4.MonoflopDoneCallback">
            <summary>
            This callback is triggered whenever a monoflop timer reaches 0. The
            parameters contain the involved pins and the current value of the pins
            (the value after the monoflop).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletIO4.MonoflopDoneEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletIO4.MonoflopDone">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.SetValue(System.Byte)">
            <summary>
            Sets the output value (high or low) with a bitmask (4bit). A 1 in the bitmask
            means high and a 0 in the bitmask means low.
            For example: The value 3 or 0b0011 will turn the pins 0-1 high and the
            pins 2-3 low.
            <note>
            This function does nothing for pins that are configured as input.
            Pull-up resistors can be switched on with <see cref="M:Tinkerforge.BrickletIO4.SetConfiguration(System.Byte,System.Char,System.Boolean)" />.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.GetValue">
            <summary>
            Returns a bitmask of the values that are currently measured.
            This function works if the pin is configured to input
            as well as if it is configured to output.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.SetConfiguration(System.Byte,System.Char,System.Boolean)">
            <summary>
            Configures the value and direction of the specified pins. Possible directions
            are 'i' and 'o' for input and output.
            If the direction is configured as output, the value is either high or low
            (set as *true* or *false*).
            If the direction is configured as input, the value is either pull-up or
            default (set as *true* or *false*).
            For example:
            * (15, 'i', true) or (0b1111, 'i', true) will set all pins of as input pull-up.
            * (8, 'i', false) or (0b1000, 'i', false) will set pin 3 of as input default (floating if nothing is connected).
            * (3, 'o', false) or (0b0011, 'o', false) will set pins 0 and 1 as output low.
            * (4, 'o', true) or (0b0100, 'o', true) will set pin 2 of as output high.
            The default configuration is input with pull-up.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.GetConfiguration(System.Byte@,System.Byte@)">
            <summary>
            Returns a value bitmask and a direction bitmask. A 1 in the direction bitmask
            means input and a 0 in the bitmask means output.
            For example: A return value of (3, 5) or (0b0011, 0b0101) for direction and
            value means that:
            * pin 0 is configured as input pull-up,
            * pin 1 is configured as input default,
            * pin 2 is configured as output high and
            * pin 3 is are configured as output low.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the debounce period of the <see cref="E:Tinkerforge.BrickletIO4.InterruptCallback" /> callback in ms.
            For example: If you set this value to 100, you will get the interrupt
            maximal every 100ms. This is necessary if something that bounces is
            connected to the IO-4 Bricklet, such as a button.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletIO4.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.SetInterrupt(System.Byte)">
            <summary>
            Sets the pins on which an interrupt is activated with a bitmask.
            Interrupts are triggered on changes of the voltage level of the pin,
            i.e. changes from high to low and low to high.
            For example: An interrupt bitmask of 10 or 0b1010 will enable the interrupt for
            pins 1 and 3.
            The interrupt is delivered with the <see cref="E:Tinkerforge.BrickletIO4.InterruptCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.GetInterrupt">
            <summary>
            Returns the interrupt bitmask as set by <see cref="M:Tinkerforge.BrickletIO4.SetInterrupt(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.SetMonoflop(System.Byte,System.Byte,System.Int64)">
            <summary>
            Configures a monoflop of the pins specified by the first parameter as 4 bit
            long bitmask. The specified pins must be configured for output. Non-output
            pins will be ignored.
            The second parameter is a bitmask with the desired value of the specified
            output pins. A 1 in the bitmask means high and a 0 in the bitmask means low.
            The third parameter indicates the time (in ms) that the pins should hold
            the value.
            If this function is called with the parameters (9, 1, 1500) or
            (0b1001, 0b0001, 1500): Pin 0 will get high and pin 3 will get low. In 1.5s pin
            0 will get low and pin 3 will get high again.
            A monoflop can be used as a fail-safe mechanism. For example: Lets assume you
            have a RS485 bus and an IO-4 Bricklet connected to one of the slave
            stacks. You can now call this function every second, with a time parameter
            of two seconds and pin 0 set to high. Pin 0 will be high all the time. If now
            the RS485 connection is lost, then pin 0 will get low in at most two seconds.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.GetMonoflop(System.Byte,System.Byte@,System.Int64@,System.Int64@)">
            <summary>
            Returns (for the given pin) the current value and the time as set by
            <see cref="M:Tinkerforge.BrickletIO4.SetMonoflop(System.Byte,System.Byte,System.Int64)" /> as well as the remaining time until the value flips.
            If the timer is not running currently, the remaining time will be returned
            as 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.SetSelectedValues(System.Byte,System.Byte)">
            <summary>
            Sets the output value (high or low) with a bitmask, according to
            the selection mask. The bitmask is 4 bit long, *true* refers to high
            and *false* refers to low.
            For example: The parameters (9, 4) or (0b0110, 0b0100) will turn
            pin 1 low and pin 2 high, pin 0 and 3 will remain untouched.
            <note>
            This function does nothing for pins that are configured as input.
            Pull-up resistors can be switched on with <see cref="M:Tinkerforge.BrickletIO4.SetConfiguration(System.Byte,System.Char,System.Boolean)" />.
            </note></summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.GetEdgeCount(System.Byte,System.Boolean)">
            <summary>
            Returns the current value of the edge counter for the selected pin. You can
            configure the edges that are counted with <see cref="M:Tinkerforge.BrickletIO4.SetEdgeCountConfig(System.Byte,System.Byte,System.Byte)" />.
            If you set the reset counter to *true*, the count is set back to 0
            directly after it is read.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.SetEdgeCountConfig(System.Byte,System.Byte,System.Byte)">
            <summary>
            Configures the edge counter for the selected pins.
            The edge type parameter configures if rising edges, falling edges or
            both are counted if the pin is configured for input. Possible edge types are:
            * 0 = rising (default)
            * 1 = falling
            * 2 = both
            The debounce time is given in ms.
            Configuring an edge counter resets its value to 0.
            If you don't know what any of this means, just leave it at default. The
            default configuration is very likely OK for you.
            Default values: 0 (edge type) and 100ms (debounce time)
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.GetEdgeCountConfig(System.Byte,System.Byte@,System.Byte@)">
            <summary>
            Returns the edge type and debounce time for the selected pin as set by
            <see cref="M:Tinkerforge.BrickletIO4.SetEdgeCountConfig(System.Byte,System.Byte,System.Byte)" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.OnInterruptCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletIO4.OnMonoflopDoneCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletJoystick">
            <summary>
            2-axis joystick with push-button
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_GET_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_IS_PRESSED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_CALIBRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_SET_POSITION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_GET_POSITION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_SET_POSITION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_GET_POSITION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletJoystick.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.PositionCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletJoystick.SetPositionCallbackPeriod(System.Int64)" />. The parameter is the position of the
            Joystick.
            The <see cref="E:Tinkerforge.BrickletJoystick.PositionCallback" /> callback is only triggered if the position has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletJoystick.PositionEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.Position">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletJoystick.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameters are the
            analog values of the Joystick.
            The <see cref="E:Tinkerforge.BrickletJoystick.AnalogValueCallback" /> callback is only triggered if the values have changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletJoystick.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.PositionReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletJoystick.SetPositionCallbackThreshold(System.Char,System.Int16,System.Int16,System.Int16,System.Int16)" /> is reached.
            The parameters are the position of the Joystick.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletJoystick.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletJoystick.PositionReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.PositionReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletJoystick.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32,System.Int32,System.Int32)" /> is reached.
            The parameters are the analog values of the Joystick.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletJoystick.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletJoystick.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.PressedCallback">
            <summary>
            This callback is triggered when the button is pressed.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletJoystick.PressedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.Pressed">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.ReleasedCallback">
            <summary>
            This callback is triggered when the button is released.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletJoystick.ReleasedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletJoystick.Released">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.GetPosition(System.Int16@,System.Int16@)">
            <summary>
            Returns the position of the Joystick. The value ranges between -100 and
            100 for both axis. The middle position of the joystick is x=0, y=0. The
            returned values are averaged and calibrated (see <see cref="M:Tinkerforge.BrickletJoystick.Calibrate" />).
            If you want to get the position periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletJoystick.PositionCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletJoystick.SetPositionCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.IsPressed">
            <summary>
            Returns *true* if the button is pressed and *false* otherwise.
            It is recommended to use the <see cref="E:Tinkerforge.BrickletJoystick.PressedCallback" /> and <see cref="E:Tinkerforge.BrickletJoystick.ReleasedCallback" /> callbacks
            to handle the button.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.GetAnalogValue(System.Int32@,System.Int32@)">
            <summary>
            Returns the values as read by a 12-bit analog-to-digital converter.
            The values are between 0 and 4095 for both axis.
            <note>
            The values returned by <see cref="M:Tinkerforge.BrickletJoystick.GetPosition(System.Int16@,System.Int16@)" /> are averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletJoystick.GetAnalogValue(System.Int32@,System.Int32@)" /> gives back raw
            unfiltered analog values. The only reason to use <see cref="M:Tinkerforge.BrickletJoystick.GetAnalogValue(System.Int32@,System.Int32@)" /> is,
            if you need the full resolution of the analog-to-digital converter.
            </note>
            If you want the analog values periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletJoystick.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletJoystick.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.Calibrate">
            <summary>
            Calibrates the middle position of the Joystick. If your Joystick Bricklet
            does not return x=0 and y=0 in the middle position, call this function
            while the Joystick is standing still in the middle position.
            The resulting calibration will be saved on the EEPROM of the Joystick
            Bricklet, thus you only have to calibrate it once.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.SetPositionCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletJoystick.PositionCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletJoystick.PositionCallback" /> callback is only triggered if the position has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.GetPositionCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletJoystick.SetPositionCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletJoystick.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletJoystick.AnalogValueCallback" /> callback is only triggered if the analog values have
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletJoystick.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.SetPositionCallbackThreshold(System.Char,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletJoystick.PositionReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the position is *outside* the min and max values"
            "'i'",    "Callback is triggered when the position is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the position is smaller than the min values (max is ignored)"
            "'&gt;'",    "Callback is triggered when the position is greater than the min values (max is ignored)"
            </code>
            The default value is ('x', 0, 0, 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.GetPositionCallbackThreshold(System.Char@,System.Int16@,System.Int16@,System.Int16@,System.Int16@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletJoystick.SetPositionCallbackThreshold(System.Char,System.Int16,System.Int16,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletJoystick.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog values are *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog values are *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog values are smaller than the min values (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog values are greater than the min values (max is ignored)"
            </code>
            The default value is ('x', 0, 0, 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletJoystick.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletJoystick.PositionReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletJoystick.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletJoystick.SetPositionCallbackThreshold(System.Char,System.Int16,System.Int16,System.Int16,System.Int16)" />,
            * <see cref="M:Tinkerforge.BrickletJoystick.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletJoystick.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.OnPositionCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.OnPositionReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.OnPressedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletJoystick.OnReleasedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLaserRangeFinder">
            <summary>
            Measures distance up to 40m with laser light
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_DISTANCE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_VELOCITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_SET_DISTANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_DISTANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_SET_VELOCITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_VELOCITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_SET_DISTANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_DISTANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_SET_VELOCITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_VELOCITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_SET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_SET_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_ENABLE_LASER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_DISABLE_LASER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_IS_LASER_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_SENSOR_HARDWARE_VERSION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.MODE_DISTANCE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.MODE_VELOCITY_MAX_13MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.MODE_VELOCITY_MAX_32MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.MODE_VELOCITY_MAX_64MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.MODE_VELOCITY_MAX_127MS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.VERSION_1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLaserRangeFinder.VERSION_3">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLaserRangeFinder.DistanceCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetDistanceCallbackPeriod(System.Int64)" />. The parameter is the distance
            value of the sensor.
            The <see cref="E:Tinkerforge.BrickletLaserRangeFinder.DistanceCallback" /> callback is only triggered if the distance value has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLaserRangeFinder.DistanceEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLaserRangeFinder.Distance">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLaserRangeFinder.VelocityCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetVelocityCallbackPeriod(System.Int64)" />. The parameter is the velocity
            value of the sensor.
            The <see cref="E:Tinkerforge.BrickletLaserRangeFinder.VelocityCallback" /> callback is only triggered if the velocity has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLaserRangeFinder.VelocityEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLaserRangeFinder.Velocity">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLaserRangeFinder.DistanceReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the distance value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLaserRangeFinder.DistanceReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLaserRangeFinder.DistanceReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLaserRangeFinder.VelocityReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetVelocityCallbackThreshold(System.Char,System.Int16,System.Int16)" /> is reached.
            The parameter is the velocity value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLaserRangeFinder.VelocityReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLaserRangeFinder.VelocityReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetDistance">
            <summary>
            Returns the measured distance. The value has a range of 0 to 4000
            and is given in cm.
            Sensor hardware version 1 (see <see cref="M:Tinkerforge.BrickletLaserRangeFinder.GetSensorHardwareVersion" />) cannot
            measure distance and velocity at the same time. Therefore, the distance mode
            has to be enabled using <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetMode(System.Byte)" />.
            Sensor hardware version 3 can measure distance and velocity at the same
            time. Also the laser has to be enabled, see <see cref="M:Tinkerforge.BrickletLaserRangeFinder.EnableLaser" />.
            If you want to get the distance periodically, it is recommended to
            use the <see cref="E:Tinkerforge.BrickletLaserRangeFinder.DistanceCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetDistanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetVelocity">
            <summary>
            Returns the measured velocity. The value has a range of -12800 to 12700
            and is given in 1/100 m/s.
            Sensor hardware version 1 (see <see cref="M:Tinkerforge.BrickletLaserRangeFinder.GetSensorHardwareVersion" />) cannot
            measure distance and velocity at the same time. Therefore, the velocity mode
            has to be enabled using <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetMode(System.Byte)" />.
            Sensor hardware version 3 can measure distance and velocity at the same
            time, but the velocity measurement only produces stables results if a fixed
            measurement rate (see <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetConfiguration(System.Byte,System.Boolean,System.Byte,System.Int32)" />) is configured. Also the laser
            has to be enabled, see <see cref="M:Tinkerforge.BrickletLaserRangeFinder.EnableLaser" />.
            If you want to get the velocity periodically, it is recommended to
            use the <see cref="E:Tinkerforge.BrickletLaserRangeFinder.VelocityCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetVelocityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.SetDistanceCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletLaserRangeFinder.DistanceCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletLaserRangeFinder.DistanceCallback" /> callback is only triggered if the distance value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetDistanceCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetDistanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.SetVelocityCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletLaserRangeFinder.VelocityCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletLaserRangeFinder.VelocityCallback" /> callback is only triggered if the velocity value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetVelocityCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetVelocityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletLaserRangeFinder.DistanceReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the distance value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the distance value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the distance value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the distance value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetDistanceCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.SetVelocityCallbackThreshold(System.Char,System.Int16,System.Int16)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletLaserRangeFinder.VelocityReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the velocity is *outside* the min and max values"
            "'i'",    "Callback is triggered when the velocity is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the velocity is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the velocity is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetVelocityCallbackThreshold(System.Char@,System.Int16@,System.Int16@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetVelocityCallbackThreshold(System.Char,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletLaserRangeFinder.DistanceReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletLaserRangeFinder.VelocityReachedCallback" />,
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetDistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetVelocityCallbackThreshold(System.Char,System.Int16,System.Int16)" />,
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.SetMovingAverage(System.Byte,System.Byte)">
            <summary>
            Sets the length of a `moving averaging &lt;https://en.wikipedia.org/wiki/Moving_average&gt;`__
            for the distance and velocity.
            Setting the length to 0 will turn the averaging completely off. With less
            averaging, there is more noise on the data.
            The range for the averaging is 0-30.
            The default value is 10.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetMovingAverage(System.Byte@,System.Byte@)">
            <summary>
            Returns the length moving average as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetMovingAverage(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.SetMode(System.Byte)">
            <summary>
                <note>
            This function is only available if you have a LIDAR-Lite sensor with hardware
            version 1. Use <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetConfiguration(System.Byte,System.Boolean,System.Byte,System.Int32)" /> for hardware version 3. You can check
            the sensor hardware version using <see cref="M:Tinkerforge.BrickletLaserRangeFinder.GetSensorHardwareVersion" />.
            </note>
            The LIDAR-Lite sensor (hardware version 1) has five different modes. One mode is
            for distance measurements and four modes are for velocity measurements with
            different ranges.
            The following modes are available:
            * 0: Distance is measured with resolution 1.0 cm and range 0-400 cm
            * 1: Velocity is measured with resolution 0.1 m/s and range is 0-12.7 m/s
            * 2: Velocity is measured with resolution 0.25 m/s and range is 0-31.75 m/s
            * 3: Velocity is measured with resolution 0.5 m/s and range is 0-63.5 m/s
            * 4: Velocity is measured with resolution 1.0 m/s and range is 0-127 m/s
            The default mode is 0 (distance is measured).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetMode">
            <summary>
            Returns the mode as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetMode(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.EnableLaser">
            <summary>
            Activates the laser of the LIDAR.
            We recommend that you wait 250ms after enabling the laser before
            the first call of <see cref="M:Tinkerforge.BrickletLaserRangeFinder.GetDistance" /> to ensure stable measurements.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.DisableLaser">
            <summary>
            Deactivates the laser of the LIDAR.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.IsLaserEnabled">
            <summary>
            Returns *true* if the laser is enabled, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetSensorHardwareVersion">
            <summary>
            Returns the LIDAR-Lite hardware version.
            .. versionadded:: 2.0.3$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.SetConfiguration(System.Byte,System.Boolean,System.Byte,System.Int32)">
            <summary>
                <note>
            This function is only available if you have a LIDAR-Lite sensor with hardware
            version 3. Use <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetMode(System.Byte)" /> for hardware version 1. You can check
            the sensor hardware version using <see cref="M:Tinkerforge.BrickletLaserRangeFinder.GetSensorHardwareVersion" />.
            </note>
            The **Aquisition Count** defines the number of times the Laser Range Finder Bricklet
            will integrate acquisitions to find a correlation record peak. With a higher count,
            the Bricklet can measure longer distances. With a lower count, the rate increases. The
            allowed values are 1-255.
            If you set **Enable Quick Termination** to true, the distance measurement will be terminated
            early if a high peak was already detected. This means that a higher measurement rate can be achieved
            and long distances can be measured at the same time. However, the chance of false-positive
            distance measurements increases.
            Normally the distance is calculated with a detection algorithm that uses peak value,
            signal strength and noise. You can however also define a fixed **Threshold Value**.
            Set this to a low value if you want to measure the distance to something that has
            very little reflection (e.g. glass) and set it to a high value if you want to measure
            the distance to something with a very high reflection (e.g. mirror). Set this to 0 to
            use the default algorithm. The other allowed values are 1-255.
            Set the **Measurement Frequency** in Hz to force a fixed measurement rate. If set to 0,
            the Laser Range Finder Bricklet will use the optimal frequency according to the other
            configurations and the actual measured distance. Since the rate is not fixed in this case,
            the velocity measurement is not stable. For a stable velocity measurement you should
            set a fixed measurement frequency. The lower the frequency, the higher is the resolution
            of the calculated velocity. The allowed values are 10Hz-500Hz (and 0 to turn the fixed
            frequency off).
            The default values for Acquisition Count, Enable Quick Termination, Threshold Value and
            Measurement Frequency are 128, false, 0 and 0.
            .. versionadded:: 2.0.3$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetConfiguration(System.Byte@,System.Boolean@,System.Byte@,System.Int32@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletLaserRangeFinder.SetConfiguration(System.Byte,System.Boolean,System.Byte,System.Int32)" />.
            .. versionadded:: 2.0.3$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.OnDistanceCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.OnVelocityCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.OnDistanceReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLaserRangeFinder.OnVelocityReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLCD16x2">
            <summary>
            16x2 character alphanumeric display with blue backlight
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_WRITE_LINE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_CLEAR_DISPLAY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_BACKLIGHT_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_BACKLIGHT_OFF">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_IS_BACKLIGHT_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_SET_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_GET_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_IS_BUTTON_PRESSED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_SET_CUSTOM_CHARACTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_GET_CUSTOM_CHARACTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD16x2.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLCD16x2.ButtonPressedCallback">
            <summary>
            This callback is triggered when a button is pressed. The parameter is
            the number of the button (0 to 2).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLCD16x2.ButtonPressedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLCD16x2.ButtonPressed">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLCD16x2.ButtonReleasedCallback">
            <summary>
            This callback is triggered when a button is released. The parameter is
            the number of the button (0 to 2).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLCD16x2.ButtonReleasedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLCD16x2.ButtonReleased">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.WriteLine(System.Byte,System.Byte,System.String)">
            <summary>
            Writes text to a specific line (0 to 1) with a specific position
            (0 to 15). The text can have a maximum of 16 characters.
            For example: (0, 5, "Hello") will write *Hello* in the middle of the
            first line of the display.
            The display uses a special charset that includes all ASCII characters except
            backslash and tilde. The LCD charset also includes several other non-ASCII characters, see
            the `charset specification &lt;https://github.com/Tinkerforge/lcd-16x2-bricklet/raw/master/datasheets/standard_charset.pdf&gt;`__
            for details. The Unicode example above shows how to specify non-ASCII characters
            and how to translate from Unicode to the LCD charset.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.ClearDisplay">
            <summary>
            Deletes all characters from the display.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.BacklightOn">
            <summary>
            Turns the backlight on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.BacklightOff">
            <summary>
            Turns the backlight off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.IsBacklightOn">
            <summary>
            Returns *true* if the backlight is on and *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.SetConfig(System.Boolean,System.Boolean)">
            <summary>
            Configures if the cursor (shown as "_") should be visible and if it
            should be blinking (shown as a blinking block). The cursor position
            is one character behind the the last text written with
            <see cref="M:Tinkerforge.BrickletLCD16x2.WriteLine(System.Byte,System.Byte,System.String)" />.
            The default is (false, false).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.GetConfig(System.Boolean@,System.Boolean@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletLCD16x2.SetConfig(System.Boolean,System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.IsButtonPressed(System.Byte)">
            <summary>
            Returns *true* if the button (0 to 2) is pressed.
            If you want to react on button presses and releases it is recommended to use the
            <see cref="E:Tinkerforge.BrickletLCD16x2.ButtonPressedCallback" /> and <see cref="E:Tinkerforge.BrickletLCD16x2.ButtonReleasedCallback" /> callbacks.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.SetCustomCharacter(System.Byte,System.Byte[])">
            <summary>
            The LCD 16x2 Bricklet can store up to 8 custom characters. The characters
            consist of 5x8 pixels and can be addressed with the index 0-7. To describe
            the pixels, the first 5 bits of 8 bytes are used. For example, to make
            a custom character "H", you should transfer the following:
            * ``character[0] = 0b00010001`` (decimal value 17)
            * ``character[1] = 0b00010001`` (decimal value 17)
            * ``character[2] = 0b00010001`` (decimal value 17)
            * ``character[3] = 0b00011111`` (decimal value 31)
            * ``character[4] = 0b00010001`` (decimal value 17)
            * ``character[5] = 0b00010001`` (decimal value 17)
            * ``character[6] = 0b00010001`` (decimal value 17)
            * ``character[7] = 0b00000000`` (decimal value 0)
            The characters can later be written with <see cref="M:Tinkerforge.BrickletLCD16x2.WriteLine(System.Byte,System.Byte,System.String)" /> by using the
            characters with the byte representation 8 to 15.
            You can play around with the custom characters in Brick Viewer since
            version 2.0.1.
            Custom characters are stored by the LCD in RAM, so they have to be set
            after each startup.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.GetCustomCharacter(System.Byte)">
            <summary>
            Returns the custom character for a given index, as set with
            <see cref="M:Tinkerforge.BrickletLCD16x2.SetCustomCharacter(System.Byte,System.Byte[])" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.OnButtonPressedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD16x2.OnButtonReleasedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLCD20x4">
            <summary>
            20x4 character alphanumeric display with blue backlight
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_WRITE_LINE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_CLEAR_DISPLAY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_BACKLIGHT_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_BACKLIGHT_OFF">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_IS_BACKLIGHT_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_SET_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_GET_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_IS_BUTTON_PRESSED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_SET_CUSTOM_CHARACTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_GET_CUSTOM_CHARACTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_SET_DEFAULT_TEXT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_GET_DEFAULT_TEXT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_SET_DEFAULT_TEXT_COUNTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_GET_DEFAULT_TEXT_COUNTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLCD20x4.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLCD20x4.ButtonPressedCallback">
            <summary>
            This callback is triggered when a button is pressed. The parameter is
            the number of the button (0 to 2 or 0 to 3 since hardware version 1.2).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLCD20x4.ButtonPressedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLCD20x4.ButtonPressed">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLCD20x4.ButtonReleasedCallback">
            <summary>
            This callback is triggered when a button is released. The parameter is
            the number of the button (0 to 2 or 0 to 3 since hardware version 1.2).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLCD20x4.ButtonReleasedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLCD20x4.ButtonReleased">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.WriteLine(System.Byte,System.Byte,System.String)">
            <summary>
            Writes text to a specific line (0 to 3) with a specific position
            (0 to 19). The text can have a maximum of 20 characters.
            For example: (0, 7, "Hello") will write *Hello* in the middle of the
            first line of the display.
            The display uses a special charset that includes all ASCII characters except
            backslash and tilde. The LCD charset also includes several other non-ASCII characters, see
            the `charset specification &lt;https://github.com/Tinkerforge/lcd-20x4-bricklet/raw/master/datasheets/standard_charset.pdf&gt;`__
            for details. The Unicode example above shows how to specify non-ASCII characters
            and how to translate from Unicode to the LCD charset.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.ClearDisplay">
            <summary>
            Deletes all characters from the display.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.BacklightOn">
            <summary>
            Turns the backlight on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.BacklightOff">
            <summary>
            Turns the backlight off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.IsBacklightOn">
            <summary>
            Returns *true* if the backlight is on and *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.SetConfig(System.Boolean,System.Boolean)">
            <summary>
            Configures if the cursor (shown as "_") should be visible and if it
            should be blinking (shown as a blinking block). The cursor position
            is one character behind the the last text written with
            <see cref="M:Tinkerforge.BrickletLCD20x4.WriteLine(System.Byte,System.Byte,System.String)" />.
            The default is (*false*, *false*).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.GetConfig(System.Boolean@,System.Boolean@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletLCD20x4.SetConfig(System.Boolean,System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.IsButtonPressed(System.Byte)">
            <summary>
            Returns *true* if the button (0 to 2 or 0 to 3 since hardware version 1.2)
            is pressed.
            If you want to react on button presses and releases it is recommended to use
            the <see cref="E:Tinkerforge.BrickletLCD20x4.ButtonPressedCallback" /> and <see cref="E:Tinkerforge.BrickletLCD20x4.ButtonReleasedCallback" /> callbacks.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.SetCustomCharacter(System.Byte,System.Byte[])">
            <summary>
            The LCD 20x4 Bricklet can store up to 8 custom characters. The characters
            consist of 5x8 pixels and can be addressed with the index 0-7. To describe
            the pixels, the first 5 bits of 8 bytes are used. For example, to make
            a custom character "H", you should transfer the following:
            * ``character[0] = 0b00010001`` (decimal value 17)
            * ``character[1] = 0b00010001`` (decimal value 17)
            * ``character[2] = 0b00010001`` (decimal value 17)
            * ``character[3] = 0b00011111`` (decimal value 31)
            * ``character[4] = 0b00010001`` (decimal value 17)
            * ``character[5] = 0b00010001`` (decimal value 17)
            * ``character[6] = 0b00010001`` (decimal value 17)
            * ``character[7] = 0b00000000`` (decimal value 0)
            The characters can later be written with <see cref="M:Tinkerforge.BrickletLCD20x4.WriteLine(System.Byte,System.Byte,System.String)" /> by using the
            characters with the byte representation 8 ("\x08") to 15 ("\x0F").
            You can play around with the custom characters in Brick Viewer version
            since 2.0.1.
            Custom characters are stored by the LCD in RAM, so they have to be set
            after each startup.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.GetCustomCharacter(System.Byte)">
            <summary>
            Returns the custom character for a given index, as set with
            <see cref="M:Tinkerforge.BrickletLCD20x4.SetCustomCharacter(System.Byte,System.Byte[])" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.SetDefaultText(System.Byte,System.String)">
            <summary>
            Sets the default text for lines 0-3. The max number of characters
            per line is 20.
            The default text is shown on the LCD, if the default text counter
            expires, see <see cref="M:Tinkerforge.BrickletLCD20x4.SetDefaultTextCounter(System.Int32)" />.
            .. versionadded:: 2.0.2$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.GetDefaultText(System.Byte)">
            <summary>
            Returns the default text for a given line (0-3) as set by
            <see cref="M:Tinkerforge.BrickletLCD20x4.SetDefaultText(System.Byte,System.String)" />.
            .. versionadded:: 2.0.2$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.SetDefaultTextCounter(System.Int32)">
            <summary>
            Sets the default text counter in ms. This counter is decremented each
            ms by the LCD firmware. If the counter reaches 0, the default text
            (see <see cref="M:Tinkerforge.BrickletLCD20x4.SetDefaultText(System.Byte,System.String)" />) is shown on the LCD.
            This functionality can be used to show a default text if the controlling
            program crashes or the connection is interrupted.
            A possible approach is to call <see cref="M:Tinkerforge.BrickletLCD20x4.SetDefaultTextCounter(System.Int32)" /> every
            minute with the parameter 1000*60*2 (2 minutes). In this case the
            default text will be shown no later than 2 minutes after the
            controlling program crashes.
            A negative counter turns the default text functionality off.
            The default is -1.
            .. versionadded:: 2.0.2$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.GetDefaultTextCounter">
            <summary>
            Returns the current value of the default text counter.
            .. versionadded:: 2.0.2$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.OnButtonPressedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLCD20x4.OnButtonReleasedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLEDStrip">
            <summary>
            Controls up to 320 RGB LEDs
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_SET_RGB_VALUES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_GET_RGB_VALUES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_SET_FRAME_DURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_GET_FRAME_DURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_GET_SUPPLY_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_SET_CLOCK_FREQUENCY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_GET_CLOCK_FREQUENCY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_SET_CHIP_TYPE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_GET_CHIP_TYPE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_SET_RGBW_VALUES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_GET_RGBW_VALUES">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_SET_CHANNEL_MAPPING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_GET_CHANNEL_MAPPING">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_ENABLE_FRAME_RENDERED_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_DISABLE_FRAME_RENDERED_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_IS_FRAME_RENDERED_CALLBACK_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHIP_TYPE_WS2801">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHIP_TYPE_WS2811">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHIP_TYPE_WS2812">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHIP_TYPE_LPD8806">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHIP_TYPE_APA102">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_RGB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_RBG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_BRG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_BGR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_GRB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_GBR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_RGBW">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_RGWB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_RBGW">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_RBWG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_RWGB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_RWBG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_GRWB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_GRBW">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_GBWR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_GBRW">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_GWBR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_GWRB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_BRGW">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_BRWG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_BGRW">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_BGWR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_BWRG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_BWGR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_WRBG">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_WRGB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_WGBR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_WGRB">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_WBGR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLEDStrip.CHANNEL_MAPPING_WBRG">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLEDStrip.FrameRenderedCallback">
            <summary>
            This callback is triggered directly after a new frame is rendered. The
            parameter is the number of LEDs in that frame.
            You should send the data for the next frame directly after this callback
            was triggered.
            For an explanation of the general approach see <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[])" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLEDStrip.FrameRenderedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLEDStrip.FrameRendered">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.SetRGBValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Sets the RGB values for the LEDs with the given *length* starting
            from *index*.
            To make the colors show correctly you need to configure the chip type
            (<see cref="M:Tinkerforge.BrickletLEDStrip.SetChipType(System.Int32)" />) and a 3-channel channel mapping (<see cref="M:Tinkerforge.BrickletLEDStrip.SetChannelMapping(System.Byte)" />)
            according to the connected LEDs.
            The maximum length is 16, the index goes from 0 to 319 and the rgb values
            have 8 bits each.
            Example: If you set
            * index to 5,
            * length to 3,
            * r to [255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            * g to [0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and
            * b to [0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            the LED with index 5 will be red, 6 will be green and 7 will be blue.
            .. note:: Depending on the LED circuitry colors can be permuted.
            The colors will be transfered to actual LEDs when the next
            frame duration ends, see <see cref="M:Tinkerforge.BrickletLEDStrip.SetFrameDuration(System.Int32)" />.
            Generic approach:
            * Set the frame duration to a value that represents
            the number of frames per second you want to achieve.
            * Set all of the LED colors for one frame.
            * Wait for the <see cref="E:Tinkerforge.BrickletLEDStrip.FrameRenderedCallback" /> callback.
            * Set all of the LED colors for next frame.
            * Wait for the <see cref="E:Tinkerforge.BrickletLEDStrip.FrameRenderedCallback" /> callback.
            * and so on.
            This approach ensures that you can change the LED colors with
            a fixed frame rate.
            The actual number of controllable LEDs depends on the number of free
            Bricklet ports. See :ref:`here &lt;led_strip_bricklet_ram_constraints&gt;` for more
            information. A call of <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[])" /> with index + length above the
            bounds is ignored completely.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.GetRGBValues(System.Int32,System.Byte,System.Byte[]@,System.Byte[]@,System.Byte[]@)">
            <summary>
            Returns RGB value with the given *length* starting from the
            given *index*.
            The values are the last values that were set by <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[])" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.SetFrameDuration(System.Int32)">
            <summary>
            Sets the frame duration in ms.
            Example: If you want to achieve 20 frames per second, you should
            set the frame duration to 50ms (50ms * 20 = 1 second).
            For an explanation of the general approach see <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[])" />.
            Default value: 100ms (10 frames per second).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.GetFrameDuration">
            <summary>
            Returns the frame duration in ms as set by <see cref="M:Tinkerforge.BrickletLEDStrip.SetFrameDuration(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.GetSupplyVoltage">
            <summary>
            Returns the current supply voltage of the LEDs. The voltage is given in mV.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.SetClockFrequency(System.Int64)">
            <summary>
            Sets the frequency of the clock in Hz. The range is 10000Hz (10kHz) up to
            2000000Hz (2MHz).
            The Bricklet will choose the nearest achievable frequency, which may
            be off by a few Hz. You can get the exact frequency that is used by
            calling <see cref="M:Tinkerforge.BrickletLEDStrip.GetClockFrequency" />.
            If you have problems with flickering LEDs, they may be bits flipping. You
            can fix this by either making the connection between the LEDs and the
            Bricklet shorter or by reducing the frequency.
            With a decreasing frequency your maximum frames per second will decrease
            too.
            The default value is 1.66MHz.
            <note>
            The frequency in firmware version 2.0.0 is fixed at 2MHz.
            </note>
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.GetClockFrequency">
            <summary>
            Returns the currently used clock frequency as set by <see cref="M:Tinkerforge.BrickletLEDStrip.SetClockFrequency(System.Int64)" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.SetChipType(System.Int32)">
            <summary>
            Sets the type of the LED driver chip. We currently support the chips
            * WS2801,
            * WS2811,
            * WS2812 / SK6812 / NeoPixel RGB,
            * SK6812RGBW / NeoPixel RGBW (Chip Type = WS2812),
            * LPD8806 and
            * APA102 / DotStar.
            The default value is WS2801 (2801).
            .. versionadded:: 2.0.2$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.GetChipType">
            <summary>
            Returns the currently used chip type as set by <see cref="M:Tinkerforge.BrickletLEDStrip.SetChipType(System.Int32)" />.
            .. versionadded:: 2.0.2$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.SetRGBWValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Sets the RGBW values for the LEDs with the given *length* starting
            from *index*.
            To make the colors show correctly you need to configure the chip type
            (<see cref="M:Tinkerforge.BrickletLEDStrip.SetChipType(System.Int32)" />) and a 4-channel channel mapping (<see cref="M:Tinkerforge.BrickletLEDStrip.SetChannelMapping(System.Byte)" />)
            according to the connected LEDs.
            The maximum length is 12, the index goes from 0 to 239 and the rgbw values
            have 8 bits each.
            Example: If you set
            * index to 5,
            * length to 4,
            * r to [255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            * g to [0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            * b to [0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0] and
            * w to [0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            the LED with index 5 will be red, 6 will be green, 7 will be blue and 8 will be white.
            .. note:: Depending on the LED circuitry colors can be permuted.
            The colors will be transfered to actual LEDs when the next
            frame duration ends, see <see cref="M:Tinkerforge.BrickletLEDStrip.SetFrameDuration(System.Int32)" />.
            Generic approach:
            * Set the frame duration to a value that represents
            the number of frames per second you want to achieve.
            * Set all of the LED colors for one frame.
            * Wait for the <see cref="E:Tinkerforge.BrickletLEDStrip.FrameRenderedCallback" /> callback.
            * Set all of the LED colors for next frame.
            * Wait for the <see cref="E:Tinkerforge.BrickletLEDStrip.FrameRenderedCallback" /> callback.
            * and so on.
            This approach ensures that you can change the LED colors with
            a fixed frame rate.
            The actual number of controllable LEDs depends on the number of free
            Bricklet ports. See :ref:`here &lt;led_strip_bricklet_ram_constraints&gt;` for more
            information. A call of <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBWValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Byte[])" /> with index + length above the
            bounds is ignored completely.
            The LPD8806 LED driver chips have 7-bit channels for RGB. Internally the LED
            Strip Bricklets divides the 8-bit values set using this function by 2 to make
            them 7-bit. Therefore, you can just use the normal value range (0-255) for
            LPD8806 LEDs.
            The brightness channel of the APA102 LED driver chips has 5-bit. Internally the
            LED Strip Bricklets divides the 8-bit values set using this function by 8 to make
            them 5-bit. Therefore, you can just use the normal value range (0-255) for
            the brightness channel of APA102 LEDs.
            .. versionadded:: 2.0.6$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.GetRGBWValues(System.Int32,System.Byte,System.Byte[]@,System.Byte[]@,System.Byte[]@,System.Byte[]@)">
            <summary>
            Returns RGBW values with the given *length* starting from the
            given *index*.
            The values are the last values that were set by <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBWValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />.
            .. versionadded:: 2.0.6$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.SetChannelMapping(System.Byte)">
            <summary>
            Sets the channel mapping for the connected LEDs.
            <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[])" /> and <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBWValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Byte[])" /> take the data in RGB(W) order.
            But the connected LED driver chips might have their 3 or 4 channels in a
            different order. For example, the WS2801 chips typically use BGR order, the
            WS2812 chips typically use GRB order and the APA102 chips typically use WBGR
            order.
            The APA102 chips are special. They have three 8-bit channels for RGB
            and an additional 5-bit channel for the overall brightness of the RGB LED
            making them 4-channel chips. Internally the brightness channel is the first
            channel, therefore one of the Wxyz channel mappings should be used. Then
            the W channel controls the brightness.
            If a 3-channel mapping is selected then <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[])" /> has to be used.
            Calling <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBWValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Byte[])" /> with a 3-channel mapping will produce incorrect
            results. Vice-versa if a 4-channel mapping is selected then
            <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBWValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[],System.Byte[])" /> has to be used. Calling <see cref="M:Tinkerforge.BrickletLEDStrip.SetRGBValues(System.Int32,System.Byte,System.Byte[],System.Byte[],System.Byte[])" /> with a
            4-channel mapping will produce incorrect results.
            The default value is BGR (36).
            .. versionadded:: 2.0.6$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.GetChannelMapping">
            <summary>
            Returns the currently used channel mapping as set by <see cref="M:Tinkerforge.BrickletLEDStrip.SetChannelMapping(System.Byte)" />.
            .. versionadded:: 2.0.6$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.EnableFrameRenderedCallback">
            <summary>
            Enables the <see cref="E:Tinkerforge.BrickletLEDStrip.FrameRenderedCallback" /> callback.
            By default the callback is enabled.
            .. versionadded:: 2.0.6$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.DisableFrameRenderedCallback">
            <summary>
            Disables the <see cref="E:Tinkerforge.BrickletLEDStrip.FrameRenderedCallback" /> callback.
            By default the callback is enabled.
            .. versionadded:: 2.0.6$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.IsFrameRenderedCallbackEnabled">
            <summary>
            Returns *true* if the <see cref="E:Tinkerforge.BrickletLEDStrip.FrameRenderedCallback" /> callback is enabled, *false* otherwise.
            .. versionadded:: 2.0.6$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLEDStrip.OnFrameRenderedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLine">
            <summary>
            Measures reflectivity of a surface
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.FUNCTION_GET_REFLECTIVITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.FUNCTION_SET_REFLECTIVITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.FUNCTION_GET_REFLECTIVITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.FUNCTION_SET_REFLECTIVITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.FUNCTION_GET_REFLECTIVITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLine.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLine.ReflectivityCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletLine.SetReflectivityCallbackPeriod(System.Int64)" />. The parameter is the
            reflectivity of the sensor.
            The <see cref="E:Tinkerforge.BrickletLine.ReflectivityCallback" /> callback is only triggered if the reflectivity has
            changed since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLine.ReflectivityEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLine.Reflectivity">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLine.ReflectivityReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletLine.SetReflectivityCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the reflectivity of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletLine.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLine.ReflectivityReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLine.ReflectivityReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.GetReflectivity">
            <summary>
            Returns the currently measured reflectivity. The reflectivity is
            a value between 0 (not reflective) and 4095 (very reflective).
            Usually black has a low reflectivity while white has a high
            reflectivity.
            If you want to get the reflectivity periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletLine.ReflectivityCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletLine.SetReflectivityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.SetReflectivityCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletLine.ReflectivityCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletLine.ReflectivityCallback" /> callback is only triggered if the reflectivity has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.GetReflectivityCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletLine.SetReflectivityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.SetReflectivityCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletLine.ReflectivityReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the reflectivity is *outside* the min and max values"
            "'i'",    "Callback is triggered when the reflectivity is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the reflectivity is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the reflectivity is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.GetReflectivityCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletLine.SetReflectivityCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletLine.ReflectivityReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletLine.SetReflectivityCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletLine.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.OnReflectivityCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLine.OnReflectivityReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLinearPoti">
            <summary>
            59mm linear potentiometer
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_GET_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_SET_POSITION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_GET_POSITION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_SET_POSITION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_GET_POSITION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLinearPoti.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLinearPoti.PositionCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletLinearPoti.SetPositionCallbackPeriod(System.Int64)" />. The parameter is the position
            of the linear potentiometer.
            The <see cref="E:Tinkerforge.BrickletLinearPoti.PositionCallback" /> callback is only triggered if the position has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLinearPoti.PositionEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLinearPoti.Position">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLinearPoti.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletLinearPoti.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the analog value of the
            Linear Potentiometer.
            The <see cref="E:Tinkerforge.BrickletLinearPoti.AnalogValueCallback" /> callback is only triggered if the position has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLinearPoti.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLinearPoti.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLinearPoti.PositionReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletLinearPoti.SetPositionCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the position of the linear potentiometer.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletLinearPoti.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLinearPoti.PositionReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLinearPoti.PositionReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLinearPoti.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletLinearPoti.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the linear potentiometer.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletLinearPoti.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLinearPoti.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLinearPoti.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.GetPosition">
            <summary>
            Returns the position of the linear potentiometer. The value is
            between 0 (slider down) and 100 (slider up).
            If you want to get the position periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletLinearPoti.PositionCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletLinearPoti.SetPositionCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            <note>
            The value returned by <see cref="M:Tinkerforge.BrickletLinearPoti.GetPosition" /> is averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletLinearPoti.GetAnalogValue" /> gives back raw
            unfiltered analog values. The only reason to use <see cref="M:Tinkerforge.BrickletLinearPoti.GetAnalogValue" /> is,
            if you need the full resolution of the analog-to-digital converter.
            </note>
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletLinearPoti.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletLinearPoti.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.SetPositionCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletLinearPoti.PositionCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletLinearPoti.PositionCallback" /> callback is only triggered if the position has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.GetPositionCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletLinearPoti.SetPositionCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletLinearPoti.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletLinearPoti.AnalogValueCallback" /> callback is only triggered if the analog value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletLinearPoti.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.SetPositionCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletLinearPoti.PositionReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the position is *outside* the min and max values"
            "'i'",    "Callback is triggered when the position is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the position is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the position is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.GetPositionCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletLinearPoti.SetPositionCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletLinearPoti.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletLinearPoti.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletLinearPoti.PositionReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletLinearPoti.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletLinearPoti.SetPositionCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletLinearPoti.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletLinearPoti.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.OnPositionCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.OnPositionReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLinearPoti.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLoadCell">
            <summary>
            Measures weight with a load cell
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_GET_WEIGHT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_SET_WEIGHT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_GET_WEIGHT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_SET_WEIGHT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_GET_WEIGHT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_SET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_GET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_LED_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_LED_OFF">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_IS_LED_ON">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_CALIBRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_TARE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.RATE_10HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.RATE_80HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.GAIN_128X">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.GAIN_64X">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletLoadCell.GAIN_32X">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLoadCell.WeightCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletLoadCell.SetWeightCallbackPeriod(System.Int64)" />. The parameter is the weight
            as measured by the load cell.
            The <see cref="E:Tinkerforge.BrickletLoadCell.WeightCallback" /> callback is only triggered if the weight has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLoadCell.WeightEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLoadCell.Weight">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLoadCell.WeightReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletLoadCell.SetWeightCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the weight as measured by the load cell.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletLoadCell.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletLoadCell.WeightReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletLoadCell.WeightReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.GetWeight">
            <summary>
            Returns the currently measured weight in grams.
            If you want to get the weight periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletLoadCell.WeightCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletLoadCell.SetWeightCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.SetWeightCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletLoadCell.WeightCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletLoadCell.WeightCallback" /> callback is only triggered if the weight has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.GetWeightCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletLoadCell.SetWeightCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.SetWeightCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletLoadCell.WeightReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the weight is *outside* the min and max values"
            "'i'",    "Callback is triggered when the weight is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the weight is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the weight is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.GetWeightCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletLoadCell.SetWeightCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletLoadCell.WeightReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletLoadCell.SetWeightCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletLoadCell.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.SetMovingAverage(System.Byte)">
            <summary>
            Sets the length of a `moving averaging &lt;https://en.wikipedia.org/wiki/Moving_average&gt;`__
            for the weight value.
            Setting the length to 1 will turn the averaging off. With less
            averaging, there is more noise on the data.
            The range for the averaging is 1-40.
            The default value is 4.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.GetMovingAverage">
            <summary>
            Returns the length moving average as set by <see cref="M:Tinkerforge.BrickletLoadCell.SetMovingAverage(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.LEDOn">
            <summary>
            Turns the LED on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.LEDOff">
            <summary>
            Turns the LED off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.IsLEDOn">
            <summary>
            Returns *true* if the led is on, *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.Calibrate(System.Int64)">
            <summary>
            To calibrate your Load Cell Bricklet you have to
            * empty the scale and call this function with 0 and
            * add a known weight to the scale and call this function with the weight in
            grams.
            The calibration is saved in the EEPROM of the Bricklet and only
            needs to be done once.
            We recommend to use the Brick Viewer for calibration, you don't need
            to call this function in your source code.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.Tare">
            <summary>
            Sets the currently measured weight as tare weight.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.SetConfiguration(System.Byte,System.Byte)">
            <summary>
            The measurement rate and gain are configurable.
            The rate can be either 10Hz or 80Hz. A faster rate will produce more noise.
            It is additionally possible to add a moving average
            (see <see cref="M:Tinkerforge.BrickletLoadCell.SetMovingAverage(System.Byte)" />) to the measurements.
            The gain can be 128x, 64x or 32x. It represents a measurement range of
            ±20mV, ±40mV and ±80mV respectively. The Load Cell Bricklet uses an
            excitation voltage of 5V and most load cells use an output of 2mV/V. That
            means the voltage range is ±15mV for most load cells (i.e. gain of 128x
            is best). If you don't know what all of this means you should keep it at
            128x, it will most likely be correct.
            The configuration is saved in the EEPROM of the Bricklet and only
            needs to be done once.
            We recommend to use the Brick Viewer for configuration, you don't need
            to call this function in your source code.
            The default rate is 10Hz and the default gain is 128x.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.GetConfiguration(System.Byte@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletLoadCell.SetConfiguration(System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.OnWeightCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletLoadCell.OnWeightReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletMoisture">
            <summary>
            Measures soil moisture
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_GET_MOISTURE_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_SET_MOISTURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_GET_MOISTURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_SET_MOISTURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_GET_MOISTURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_SET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_GET_MOVING_AVERAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMoisture.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMoisture.MoistureCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletMoisture.SetMoistureCallbackPeriod(System.Int64)" />. The parameter is the
            moisture value of the sensor.
            The <see cref="E:Tinkerforge.BrickletMoisture.MoistureCallback" /> callback is only triggered if the moisture value has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletMoisture.MoistureEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMoisture.Moisture">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMoisture.MoistureReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletMoisture.SetMoistureCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the moisture value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletMoisture.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletMoisture.MoistureReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMoisture.MoistureReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.GetMoistureValue">
            <summary>
            Returns the current moisture value. The value has a range of
            0 to 4095. A small value corresponds to little moisture, a big
            value corresponds to much moisture.
            If you want to get the moisture value periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletMoisture.MoistureCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletMoisture.SetMoistureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.SetMoistureCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletMoisture.MoistureCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletMoisture.MoistureCallback" /> callback is only triggered if the moisture value has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.GetMoistureCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletMoisture.SetMoistureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.SetMoistureCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletMoisture.MoistureReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the moisture value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the moisture value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the moisture value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the moisture value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.GetMoistureCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletMoisture.SetMoistureCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletMoisture.MoistureReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletMoisture.SetMoistureCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletMoisture.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.SetMovingAverage(System.Byte)">
            <summary>
            Sets the length of a `moving averaging &lt;https://en.wikipedia.org/wiki/Moving_average&gt;`__
            for the moisture value.
            Setting the length to 0 will turn the averaging completely off. With less
            averaging, there is more noise on the data.
            The range for the averaging is 0-100.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.GetMovingAverage">
            <summary>
            Returns the length moving average as set by <see cref="M:Tinkerforge.BrickletMoisture.SetMovingAverage(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.OnMoistureCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMoisture.OnMoistureReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletMotionDetector">
            <summary>
            Passive infrared (PIR) motion sensor, 7m range
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.FUNCTION_GET_MOTION_DETECTED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.FUNCTION_SET_STATUS_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.FUNCTION_GET_STATUS_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.MOTION_NOT_DETECTED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.MOTION_DETECTED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.STATUS_LED_CONFIG_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.STATUS_LED_CONFIG_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMotionDetector.STATUS_LED_CONFIG_SHOW_STATUS">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMotionDetector.MotionDetectedCallback">
            <summary>
            This callback is called after a motion was detected.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletMotionDetector.MotionDetectedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMotionDetector.MotionDetected">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMotionDetector.DetectionCycleEndedCallback">
            <summary>
            This callback is called when the detection cycle ended. When this
            callback is called, a new motion can be detected again after approximately 2
            seconds.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletMotionDetector.DetectionCycleEndedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMotionDetector.DetectionCycleEnded">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMotionDetector.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMotionDetector.GetMotionDetected">
            <summary>
            Returns 1 if a motion was detected. How long this returns 1 after a motion
            was detected can be adjusted with one of the small potentiometers on the
            Motion Detector Bricklet, see :ref:`here
            &lt;motion_detector_bricklet_sensitivity_delay_block_time&gt;`.
            There is also a blue LED on the Bricklet that is on as long as the Bricklet is
            in the "motion detected" state.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMotionDetector.SetStatusLEDConfig(System.Byte)">
            <summary>
            Sets the status led configuration.
            By default the status LED turns on if a motion is detected and off is no motion
            is detected.
            You can also turn the LED permanently on/off.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMotionDetector.GetStatusLEDConfig">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletMotionDetector.SetStatusLEDConfig(System.Byte)" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMotionDetector.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMotionDetector.OnMotionDetectedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMotionDetector.OnDetectionCycleEndedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletMultiTouch">
            <summary>
            Capacitive touch sensor for 12 electrodes
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMultiTouch.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMultiTouch.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMultiTouch.FUNCTION_GET_TOUCH_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMultiTouch.FUNCTION_RECALIBRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMultiTouch.FUNCTION_SET_ELECTRODE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMultiTouch.FUNCTION_GET_ELECTRODE_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMultiTouch.FUNCTION_SET_ELECTRODE_SENSITIVITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMultiTouch.FUNCTION_GET_ELECTRODE_SENSITIVITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletMultiTouch.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMultiTouch.TouchStateCallback">
            <summary>
            Returns the current touch state, see <see cref="M:Tinkerforge.BrickletMultiTouch.GetTouchState" /> for
            information about the state.
            This callback is triggered every time the touch state changes.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletMultiTouch.TouchStateEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletMultiTouch.TouchState">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMultiTouch.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMultiTouch.GetTouchState">
            <summary>
            Returns the current touch state. The state is given as a bitfield.
            Bits 0 to 11 represent the 12 electrodes and bit 12 represents
            the proximity.
            If an electrode is touched, the corresponding bit is *true*. If
            a hand or similar is in proximity to the electrodes, bit 12 is
            *true*.
            Example: The state 4103 = 0x1007 = 0b1000000000111 means that
            electrodes 0, 1 and 2 are touched and that something is in the
            proximity of the electrodes.
            The proximity is activated with a distance of 1-2cm. An electrode
            is already counted as touched if a finger is nearly touching the
            electrode. This means that you can put a piece of paper or foil
            or similar on top of a electrode to build a touch panel with
            a professional look.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMultiTouch.Recalibrate">
            <summary>
            Recalibrates the electrodes. Call this function whenever you changed
            or moved you electrodes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMultiTouch.SetElectrodeConfig(System.Int32)">
            <summary>
            Enables/disables electrodes with a bitfield (see <see cref="M:Tinkerforge.BrickletMultiTouch.GetTouchState" />).
            *True* enables the electrode, *false* disables the electrode. A
            disabled electrode will always return *false* as its state. If you
            don't need all electrodes you can disable the electrodes that are
            not needed.
            It is recommended that you disable the proximity bit (bit 12) if
            the proximity feature is not needed. This will reduce the amount of
            traffic that is produced by the <see cref="E:Tinkerforge.BrickletMultiTouch.TouchStateCallback" /> callback.
            Disabling electrodes will also reduce power consumption.
            Default: 8191 = 0x1FFF = 0b1111111111111 (all electrodes enabled)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMultiTouch.GetElectrodeConfig">
            <summary>
            Returns the electrode configuration, as set by <see cref="M:Tinkerforge.BrickletMultiTouch.SetElectrodeConfig(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMultiTouch.SetElectrodeSensitivity(System.Byte)">
            <summary>
            Sets the sensitivity of the electrodes. An electrode with a high sensitivity
            will register a touch earlier then an electrode with a low sensitivity.
            If you build a big electrode you might need to decrease the sensitivity, since
            the area that can be charged will get bigger. If you want to be able to
            activate an electrode from further away you need to increase the sensitivity.
            After a new sensitivity is set, you likely want to call <see cref="M:Tinkerforge.BrickletMultiTouch.Recalibrate" />
            to calibrate the electrodes with the newly defined sensitivity.
            The valid sensitivity value range is 5-201.
            The default sensitivity value is 181.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMultiTouch.GetElectrodeSensitivity">
            <summary>
            Returns the current sensitivity, as set by <see cref="M:Tinkerforge.BrickletMultiTouch.SetElectrodeSensitivity(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMultiTouch.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletMultiTouch.OnTouchStateCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletNFCRFID">
            <summary>
            Reads and writes NFC and RFID tags
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.FUNCTION_REQUEST_TAG_ID">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.FUNCTION_GET_TAG_ID">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.FUNCTION_GET_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.FUNCTION_AUTHENTICATE_MIFARE_CLASSIC_PAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.FUNCTION_WRITE_PAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.FUNCTION_REQUEST_PAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.FUNCTION_GET_PAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.TAG_TYPE_MIFARE_CLASSIC">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.TAG_TYPE_TYPE1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.TAG_TYPE_TYPE2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_INITIALIZATION">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_IDLE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_REQUEST_TAG_ID">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_REQUEST_TAG_ID_READY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_REQUEST_TAG_ID_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_AUTHENTICATING_MIFARE_CLASSIC_PAGE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_AUTHENTICATING_MIFARE_CLASSIC_PAGE_READY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_AUTHENTICATING_MIFARE_CLASSIC_PAGE_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_WRITE_PAGE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_WRITE_PAGE_READY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_WRITE_PAGE_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_REQUEST_PAGE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_REQUEST_PAGE_READY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.STATE_REQUEST_PAGE_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.KEY_A">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletNFCRFID.KEY_B">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletNFCRFID.StateChangedCallback">
            <summary>
            This callback is called if the state of the NFC/RFID Bricklet changes.
            See <see cref="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)" /> for more information about the possible states.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletNFCRFID.StateChangedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletNFCRFID.StateChanged">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.RequestTagID(System.Byte)">
            <summary>
            To read or write a tag that is in proximity of the NFC/RFID Bricklet you
            first have to call this function with the expected tag type as parameter.
            It is no problem if you don't know the tag type. You can cycle through
            the available tag types until the tag gives an answer to the request.
            Current the following tag types are supported:
            * Mifare Classic
            * NFC Forum Type 1
            * NFC Forum Type 2
            After you call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestTagID(System.Byte)" /> the NFC/RFID Bricklet will try to read
            the tag ID from the tag. After this process is done the state will change.
            You can either register the <see cref="E:Tinkerforge.BrickletNFCRFID.StateChangedCallback" /> callback or you can poll
            <see cref="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)" /> to find out about the state change.
            If the state changes to *RequestTagIDError* it means that either there was
            no tag present or that the tag is of an incompatible type. If the state
            changes to *RequestTagIDReady* it means that a compatible tag was found
            and that the tag ID could be read out. You can now get the tag ID by
            calling <see cref="M:Tinkerforge.BrickletNFCRFID.GetTagID(System.Byte@,System.Byte@,System.Byte[]@)" />.
            If two tags are in the proximity of the NFC/RFID Bricklet, this
            function will cycle through the tags. To select a specific tag you have
            to call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestTagID(System.Byte)" /> until the correct tag id is found.
            In case of any *Error* state the selection is lost and you have to
            start again by calling <see cref="M:Tinkerforge.BrickletNFCRFID.RequestTagID(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.GetTagID(System.Byte@,System.Byte@,System.Byte[]@)">
            <summary>
            Returns the tag type, tag ID and the length of the tag ID
            (4 or 7 bytes are possible length). This function can only be called if the
            NFC/RFID is currently in one of the *Ready* states. The returned ID
            is the ID that was saved through the last call of <see cref="M:Tinkerforge.BrickletNFCRFID.RequestTagID(System.Byte)" />.
            To get the tag ID of a tag the approach is as follows:
            1. Call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestTagID(System.Byte)" />
            2. Wait for state to change to *RequestTagIDReady* (see <see cref="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)" /> or
            <see cref="E:Tinkerforge.BrickletNFCRFID.StateChangedCallback" /> callback)
            3. Call <see cref="M:Tinkerforge.BrickletNFCRFID.GetTagID(System.Byte@,System.Byte@,System.Byte[]@)" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)">
            <summary>
            Returns the current state of the NFC/RFID Bricklet.
            On startup the Bricklet will be in the *Initialization* state. The
            initialization will only take about 20ms. After that it changes to *Idle*.
            The functions of this Bricklet can be called in the *Idle* state and all of
            the *Ready* and *Error* states.
            Example: If you call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestPage(System.Int32)" />, the state will change to
            *RequestPage* until the reading of the page is finished. Then it will change
            to either *RequestPageReady* if it worked or to *RequestPageError* if it
            didn't. If the request worked you can get the page by calling <see cref="M:Tinkerforge.BrickletNFCRFID.GetPage" />.
            The same approach is used analogously for the other API functions.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.AuthenticateMifareClassicPage(System.Int32,System.Byte,System.Byte[])">
            <summary>
            Mifare Classic tags use authentication. If you want to read from or write to
            a Mifare Classic page you have to authenticate it beforehand.
            Each page can be authenticated with two keys: A (``key_number`` = 0) and B
            (``key_number`` = 1). A new Mifare Classic
            tag that has not yet been written to can can be accessed with key A
            and the default key ``[0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]``.
            The approach to read or write a Mifare Classic page is as follows:
            1. Call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestTagID(System.Byte)" />
            2. Wait for state to change to *RequestTagIDReady* (see <see cref="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)" />
            or <see cref="E:Tinkerforge.BrickletNFCRFID.StateChangedCallback" /> callback)
            3. If looking for a specific tag then call <see cref="M:Tinkerforge.BrickletNFCRFID.GetTagID(System.Byte@,System.Byte@,System.Byte[]@)" /> and check if the
            expected tag was found, if it was not found got back to step 1
            4. Call <see cref="M:Tinkerforge.BrickletNFCRFID.AuthenticateMifareClassicPage(System.Int32,System.Byte,System.Byte[])" /> with page and key for the page
            5. Wait for state to change to *AuthenticatingMifareClassicPageReady* (see
            <see cref="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)" /> or <see cref="E:Tinkerforge.BrickletNFCRFID.StateChangedCallback" /> callback)
            6. Call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestPage(System.Int32)" /> or <see cref="M:Tinkerforge.BrickletNFCRFID.WritePage(System.Int32,System.Byte[])" /> to read/write page
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.WritePage(System.Int32,System.Byte[])">
            <summary>
            Writes 16 bytes starting from the given page. How many pages are written
            depends on the tag type. The page sizes are as follows:
            * Mifare Classic page size: 16 byte (one page is written)
            * NFC Forum Type 1 page size: 8 byte (two pages are written)
            * NFC Forum Type 2 page size: 4 byte (four pages are written)
            The general approach for writing to a tag is as follows:
            1. Call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestTagID(System.Byte)" />
            2. Wait for state to change to *RequestTagIDReady* (see <see cref="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)" /> or
            <see cref="E:Tinkerforge.BrickletNFCRFID.StateChangedCallback" /> callback)
            3. If looking for a specific tag then call <see cref="M:Tinkerforge.BrickletNFCRFID.GetTagID(System.Byte@,System.Byte@,System.Byte[]@)" /> and check if the
            expected tag was found, if it was not found got back to step 1
            4. Call <see cref="M:Tinkerforge.BrickletNFCRFID.WritePage(System.Int32,System.Byte[])" /> with page number and data
            5. Wait for state to change to *WritePageReady* (see <see cref="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)" /> or
            <see cref="E:Tinkerforge.BrickletNFCRFID.StateChangedCallback" /> callback)
            If you use a Mifare Classic tag you have to authenticate a page before you
            can write to it. See <see cref="M:Tinkerforge.BrickletNFCRFID.AuthenticateMifareClassicPage(System.Int32,System.Byte,System.Byte[])" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.RequestPage(System.Int32)">
            <summary>
            Reads 16 bytes starting from the given page and stores them into a buffer.
            The buffer can then be read out with <see cref="M:Tinkerforge.BrickletNFCRFID.GetPage" />.
            How many pages are read depends on the tag type. The page sizes are
            as follows:
            * Mifare Classic page size: 16 byte (one page is read)
            * NFC Forum Type 1 page size: 8 byte (two pages are read)
            * NFC Forum Type 2 page size: 4 byte (four pages are read)
            The general approach for reading a tag is as follows:
            1. Call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestTagID(System.Byte)" />
            2. Wait for state to change to *RequestTagIDReady* (see <see cref="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)" />
            or <see cref="E:Tinkerforge.BrickletNFCRFID.StateChangedCallback" /> callback)
            3. If looking for a specific tag then call <see cref="M:Tinkerforge.BrickletNFCRFID.GetTagID(System.Byte@,System.Byte@,System.Byte[]@)" /> and check if the
            expected tag was found, if it was not found got back to step 1
            4. Call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestPage(System.Int32)" /> with page number
            5. Wait for state to change to *RequestPageReady* (see <see cref="M:Tinkerforge.BrickletNFCRFID.GetState(System.Byte@,System.Boolean@)" />
            or <see cref="E:Tinkerforge.BrickletNFCRFID.StateChangedCallback" /> callback)
            6. Call <see cref="M:Tinkerforge.BrickletNFCRFID.GetPage" /> to retrieve the page from the buffer
            If you use a Mifare Classic tag you have to authenticate a page before you
            can read it. See <see cref="M:Tinkerforge.BrickletNFCRFID.AuthenticateMifareClassicPage(System.Int32,System.Byte,System.Byte[])" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.GetPage">
            <summary>
            Returns 16 bytes of data from an internal buffer. To fill the buffer
            with specific pages you have to call <see cref="M:Tinkerforge.BrickletNFCRFID.RequestPage(System.Int32)" /> beforehand.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletNFCRFID.OnStateChangedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletOLED128x64">
            <summary>
            3.3cm (1.3") OLED with 128x64 pixels
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED128x64.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED128x64.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED128x64.FUNCTION_WRITE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED128x64.FUNCTION_NEW_WINDOW">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED128x64.FUNCTION_CLEAR_DISPLAY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED128x64.FUNCTION_SET_DISPLAY_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED128x64.FUNCTION_GET_DISPLAY_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED128x64.FUNCTION_WRITE_LINE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED128x64.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED128x64.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED128x64.Write(System.Byte[])">
            <summary>
            Appends 64 byte of data to the window as set by <see cref="M:Tinkerforge.BrickletOLED128x64.NewWindow(System.Byte,System.Byte,System.Byte,System.Byte)" />.
            Each row has a height of 8 pixels which corresponds to one byte of data.
            Example: if you call <see cref="M:Tinkerforge.BrickletOLED128x64.NewWindow(System.Byte,System.Byte,System.Byte,System.Byte)" /> with column from 0 to 127 and row
            from 0 to 7 (the whole display) each call of <see cref="M:Tinkerforge.BrickletOLED128x64.Write(System.Byte[])" /> (red arrow) will
            write half of a row.
            .. image:: /Images/Bricklets/bricklet_oled_128x64_display.png
            :scale: 100 %
            :alt: Display pixel order
            :align: center
            :target: ../../_images/Bricklets/bricklet_oled_128x64_display.png
            The LSB (D0) of each data byte is at the top and the MSB (D7) is at the
            bottom of the row.
            The next call of <see cref="M:Tinkerforge.BrickletOLED128x64.Write(System.Byte[])" /> will write the second half of the row
            and the next two the second row and so on. To fill the whole display
            you need to call <see cref="M:Tinkerforge.BrickletOLED128x64.Write(System.Byte[])" /> 16 times.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED128x64.NewWindow(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the window in which you can write with <see cref="M:Tinkerforge.BrickletOLED128x64.Write(System.Byte[])" />. One row
            has a height of 8 pixels.
            The columns have a range of 0 to 127 and the rows have a range of 0 to 7.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED128x64.ClearDisplay">
            <summary>
            Clears the current content of the window as set by <see cref="M:Tinkerforge.BrickletOLED128x64.NewWindow(System.Byte,System.Byte,System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED128x64.SetDisplayConfiguration(System.Byte,System.Boolean)">
            <summary>
            Sets the configuration of the display.
            You can set a contrast value from 0 to 255 and you can invert the color
            (black/white) of the display.
            The default values are contrast 143 and inverting off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED128x64.GetDisplayConfiguration(System.Byte@,System.Boolean@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletOLED128x64.SetDisplayConfiguration(System.Byte,System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED128x64.WriteLine(System.Byte,System.Byte,System.String)">
            <summary>
            Writes text to a specific line (0 to 7) with a specific position
            (0 to 25). The text can have a maximum of 26 characters.
            For example: (1, 10, "Hello") will write *Hello* in the middle of the
            second line of the display.
            You can draw to the display with <see cref="M:Tinkerforge.BrickletOLED128x64.Write(System.Byte[])" /> and then add text to it
            afterwards.
            The display uses a special 5x7 pixel charset. You can view the characters
            of the charset in Brick Viewer.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED128x64.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletOLED64x48">
            <summary>
            1.68cm (0.66") OLED with 64x48 pixels
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED64x48.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED64x48.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED64x48.FUNCTION_WRITE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED64x48.FUNCTION_NEW_WINDOW">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED64x48.FUNCTION_CLEAR_DISPLAY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED64x48.FUNCTION_SET_DISPLAY_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED64x48.FUNCTION_GET_DISPLAY_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED64x48.FUNCTION_WRITE_LINE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletOLED64x48.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED64x48.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED64x48.Write(System.Byte[])">
            <summary>
            Appends 64 byte of data to the window as set by <see cref="M:Tinkerforge.BrickletOLED64x48.NewWindow(System.Byte,System.Byte,System.Byte,System.Byte)" />.
            Each row has a height of 8 pixels which corresponds to one byte of data.
            Example: if you call <see cref="M:Tinkerforge.BrickletOLED64x48.NewWindow(System.Byte,System.Byte,System.Byte,System.Byte)" /> with column from 0 to 63 and row
            from 0 to 5 (the whole display) each call of <see cref="M:Tinkerforge.BrickletOLED64x48.Write(System.Byte[])" /> (red arrow) will
            write one row.
            .. image:: /Images/Bricklets/bricklet_oled_64x48_display.png
            :scale: 100 %
            :alt: Display pixel order
            :align: center
            :target: ../../_images/Bricklets/bricklet_oled_64x48_display.png
            The LSB (D0) of each data byte is at the top and the MSB (D7) is at the
            bottom of the row.
            The next call of <see cref="M:Tinkerforge.BrickletOLED64x48.Write(System.Byte[])" /> will write the second row and so on. To
            fill the whole display you need to call <see cref="M:Tinkerforge.BrickletOLED64x48.Write(System.Byte[])" /> 6 times.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED64x48.NewWindow(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the window in which you can write with <see cref="M:Tinkerforge.BrickletOLED64x48.Write(System.Byte[])" />. One row
            has a height of 8 pixels.
            The columns have a range of 0 to 63 and the rows have a range of 0 to 5.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED64x48.ClearDisplay">
            <summary>
            Clears the current content of the window as set by <see cref="M:Tinkerforge.BrickletOLED64x48.NewWindow(System.Byte,System.Byte,System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED64x48.SetDisplayConfiguration(System.Byte,System.Boolean)">
            <summary>
            Sets the configuration of the display.
            You can set a contrast value from 0 to 255 and you can invert the color
            (black/white) of the display.
            The default values are contrast 143 and inverting off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED64x48.GetDisplayConfiguration(System.Byte@,System.Boolean@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletOLED64x48.SetDisplayConfiguration(System.Byte,System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED64x48.WriteLine(System.Byte,System.Byte,System.String)">
            <summary>
            Writes text to a specific line (0 to 5) with a specific position
            (0 to 12). The text can have a maximum of 13 characters.
            For example: (1, 4, "Hello") will write *Hello* in the middle of the
            second line of the display.
            You can draw to the display with <see cref="M:Tinkerforge.BrickletOLED64x48.Write(System.Byte[])" /> and then add text to it
            afterwards.
            The display uses a special 5x7 pixel charset. You can view the characters
            of the charset in Brick Viewer.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletOLED64x48.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPiezoBuzzer">
            <summary>
            Creates 1kHz beep
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoBuzzer.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoBuzzer.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoBuzzer.FUNCTION_BEEP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoBuzzer.FUNCTION_MORSE_CODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoBuzzer.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPiezoBuzzer.BeepFinishedCallback">
            <summary>
            This callback is triggered if a beep set by <see cref="M:Tinkerforge.BrickletPiezoBuzzer.Beep(System.Int64)" /> is finished
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPiezoBuzzer.BeepFinishedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPiezoBuzzer.BeepFinished">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPiezoBuzzer.MorseCodeFinishedCallback">
            <summary>
            This callback is triggered if the playback of the morse code set by
            <see cref="M:Tinkerforge.BrickletPiezoBuzzer.MorseCode(System.String)" /> is finished.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPiezoBuzzer.MorseCodeFinishedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPiezoBuzzer.MorseCodeFinished">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoBuzzer.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoBuzzer.Beep(System.Int64)">
            <summary>
            Beeps with the duration in ms. For example: If you set a value of 1000,
            the piezo buzzer will beep for one second.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoBuzzer.MorseCode(System.String)">
            <summary>
            Sets morse code that will be played by the piezo buzzer. The morse code
            is given as a string consisting of "." (dot), "-" (minus) and " " (space)
            for *dits*, *dahs* and *pauses*. Every other character is ignored.
            For example: If you set the string "...---...", the piezo buzzer will beep
            nine times with the durations "short short short long long long short
            short short".
            The maximum string size is 60.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoBuzzer.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoBuzzer.OnBeepFinishedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoBuzzer.OnMorseCodeFinishedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPiezoSpeaker">
            <summary>
            Creates beep with configurable frequency
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoSpeaker.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoSpeaker.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoSpeaker.FUNCTION_BEEP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoSpeaker.FUNCTION_MORSE_CODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoSpeaker.FUNCTION_CALIBRATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoSpeaker.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoSpeaker.BEEP_DURATION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPiezoSpeaker.BEEP_DURATION_INFINITE">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPiezoSpeaker.BeepFinishedCallback">
            <summary>
            This callback is triggered if a beep set by <see cref="M:Tinkerforge.BrickletPiezoSpeaker.Beep(System.Int64,System.Int32)" /> is finished
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPiezoSpeaker.BeepFinishedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPiezoSpeaker.BeepFinished">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPiezoSpeaker.MorseCodeFinishedCallback">
            <summary>
            This callback is triggered if the playback of the morse code set by
            <see cref="M:Tinkerforge.BrickletPiezoSpeaker.MorseCode(System.String,System.Int32)" /> is finished.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPiezoSpeaker.MorseCodeFinishedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPiezoSpeaker.MorseCodeFinished">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoSpeaker.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoSpeaker.Beep(System.Int64,System.Int32)">
            <summary>
            Beeps with the given frequency for the duration in ms. For example:
            If you set a duration of 1000, with a frequency value of 2000
            the piezo buzzer will beep for one second with a frequency of
            approximately 2 kHz.
            .. versionchanged:: 2.0.2$nbsp;(Plugin)
            A duration of 0 stops the current beep if any, the frequency parameter is
            ignored. A duration of 4294967295 results in an infinite beep.
            The *frequency* parameter can be set between 585 and 7100.
            The Piezo Speaker Bricklet can only approximate the frequency, it will play
            the best possible match by applying the calibration (see <see cref="M:Tinkerforge.BrickletPiezoSpeaker.Calibrate" />).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoSpeaker.MorseCode(System.String,System.Int32)">
            <summary>
            Sets morse code that will be played by the piezo buzzer. The morse code
            is given as a string consisting of "." (dot), "-" (minus) and " " (space)
            for *dits*, *dahs* and *pauses*. Every other character is ignored.
            The second parameter is the frequency (see <see cref="M:Tinkerforge.BrickletPiezoSpeaker.Beep(System.Int64,System.Int32)" />).
            For example: If you set the string "...---...", the piezo buzzer will beep
            nine times with the durations "short short short long long long short
            short short".
            The maximum string size is 60.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoSpeaker.Calibrate">
            <summary>
            The Piezo Speaker Bricklet can play 512 different tones. This function
            plays each tone and measures the exact frequency back. The result is a
            mapping between setting value and frequency. This mapping is stored
            in the EEPROM and loaded on startup.
            The Bricklet should come calibrated, you only need to call this
            function (once) every time you reflash the Bricklet plugin.
            Returns *true* after the calibration finishes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoSpeaker.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoSpeaker.OnBeepFinishedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPiezoSpeaker.OnMorseCodeFinishedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPTC">
            <summary>
            Reads temperatures from Pt100 und Pt1000 sensors
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_RESISTANCE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_SET_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_SET_RESISTANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_RESISTANCE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_SET_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_SET_RESISTANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_RESISTANCE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_SET_NOISE_REJECTION_FILTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_NOISE_REJECTION_FILTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_IS_SENSOR_CONNECTED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_SET_WIRE_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_WIRE_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FILTER_OPTION_50HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.FILTER_OPTION_60HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.WIRE_MODE_2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.WIRE_MODE_3">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletPTC.WIRE_MODE_4">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPTC.TemperatureCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletPTC.SetTemperatureCallbackPeriod(System.Int64)" />. The parameter is the
            temperature of the connected sensor.
            The <see cref="E:Tinkerforge.BrickletPTC.TemperatureCallback" /> callback is only triggered if the temperature has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPTC.TemperatureEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPTC.Temperature">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPTC.TemperatureReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletPTC.SetTemperatureCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the temperature of the connected sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletPTC.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPTC.TemperatureReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPTC.TemperatureReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPTC.ResistanceCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletPTC.SetResistanceCallbackPeriod(System.Int64)" />. The parameter is the resistance
            of the connected sensor.
            The <see cref="E:Tinkerforge.BrickletPTC.ResistanceCallback" /> callback is only triggered if the resistance has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPTC.ResistanceEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPTC.Resistance">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPTC.ResistanceReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletPTC.SetResistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the resistance of the connected sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletPTC.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletPTC.ResistanceReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletPTC.ResistanceReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetTemperature">
            <summary>
            Returns the temperature of connected sensor. The value
            has a range of -246 to 849 °C and is given in °C/100,
            e.g. a value of 4223 means that a temperature of 42.23 °C is measured.
            If you want to get the temperature periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletPTC.TemperatureCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletPTC.SetTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetResistance">
            <summary>
            Returns the value as measured by the MAX31865 precision delta-sigma ADC.
            The value can be converted with the following formulas:
            * Pt100:  resistance = (value * 390) / 32768
            * Pt1000: resistance = (value * 3900) / 32768
            If you want to get the resistance periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletPTC.ResistanceCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletPTC.SetResistanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.SetTemperatureCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletPTC.TemperatureCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletPTC.TemperatureCallback" /> callback is only triggered if the temperature has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetTemperatureCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletPTC.SetTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.SetResistanceCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletPTC.ResistanceCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletPTC.ResistanceCallback" /> callback is only triggered if the resistance has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetResistanceCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletPTC.SetResistanceCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.SetTemperatureCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletPTC.TemperatureReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the temperature is *outside* the min and max values"
            "'i'",    "Callback is triggered when the temperature is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the temperature is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the temperature is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetTemperatureCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletPTC.SetTemperatureCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.SetResistanceCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletPTC.ResistanceReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the temperature is *outside* the min and max values"
            "'i'",    "Callback is triggered when the temperature is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the temperature is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the temperature is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetResistanceCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletPTC.SetResistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletPTC.TemperatureReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletPTC.ResistanceReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletPTC.SetTemperatureCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletPTC.SetResistanceCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletPTC.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.SetNoiseRejectionFilter(System.Byte)">
            <summary>
            Sets the noise rejection filter to either 50Hz (0) or 60Hz (1).
            Noise from 50Hz or 60Hz power sources (including
            harmonics of the AC power's fundamental frequency) is
            attenuated by 82dB.
            Default value is 0 = 50Hz.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetNoiseRejectionFilter">
            <summary>
            Returns the noise rejection filter option as set by
            <see cref="M:Tinkerforge.BrickletPTC.SetNoiseRejectionFilter(System.Byte)" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.IsSensorConnected">
            <summary>
            Returns *true* if the sensor is connected correctly.
            If this function
            returns *false*, there is either no Pt100 or Pt1000 sensor connected,
            the sensor is connected incorrectly or the sensor itself is faulty.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.SetWireMode(System.Byte)">
            <summary>
            Sets the wire mode of the sensor. Possible values are 2, 3 and 4 which
            correspond to 2-, 3- and 4-wire sensors. The value has to match the jumper
            configuration on the Bricklet.
            The default value is 2 = 2-wire.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetWireMode">
            <summary>
            Returns the wire mode as set by <see cref="M:Tinkerforge.BrickletPTC.SetWireMode(System.Byte)" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.OnTemperatureCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.OnTemperatureReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.OnResistanceCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletPTC.OnResistanceReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRealTimeClock">
            <summary>
            Battery-backed real-time clock
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_SET_DATE_TIME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_GET_DATE_TIME">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_GET_TIMESTAMP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_SET_OFFSET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_GET_OFFSET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_SET_DATE_TIME_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_GET_DATE_TIME_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_SET_ALARM">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_GET_ALARM">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.WEEKDAY_MONDAY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.WEEKDAY_TUESDAY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.WEEKDAY_WEDNESDAY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.WEEKDAY_THURSDAY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.WEEKDAY_FRIDAY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.WEEKDAY_SATURDAY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.WEEKDAY_SUNDAY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.ALARM_MATCH_DISABLED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRealTimeClock.ALARM_INTERVAL_DISABLED">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRealTimeClock.DateTimeCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletRealTimeClock.SetDateTimeCallbackPeriod(System.Int64)" />. The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletRealTimeClock.GetDateTime(System.Int32@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@)" /> and <see cref="M:Tinkerforge.BrickletRealTimeClock.GetTimestamp" /> combined.
            The <see cref="E:Tinkerforge.BrickletRealTimeClock.DateTimeCallback" /> callback is only triggered if the date or time changed
            since the last triggering.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRealTimeClock.DateTimeEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRealTimeClock.DateTime">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRealTimeClock.AlarmCallback">
            <summary>
            This callback is triggered every time the current date and time matches the
            configured alarm (see <see cref="M:Tinkerforge.BrickletRealTimeClock.SetAlarm(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int32)" />). The parameters are the same
            as for <see cref="M:Tinkerforge.BrickletRealTimeClock.GetDateTime(System.Int32@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@)" /> and <see cref="M:Tinkerforge.BrickletRealTimeClock.GetTimestamp" /> combined.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRealTimeClock.AlarmEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRealTimeClock.Alarm">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.SetDateTime(System.Int32,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the current date (including weekday) and the current time with hundredths
            of a second resolution.
            Possible value ranges:
            * Year: 2000 to 2099
            * Month: 1 to 12 (January to December)
            * Day: 1 to 31
            * Hour: 0 to 23
            * Minute: 0 to 59
            * Second: 0 to 59
            * Centisecond: 0 to 99
            * Weekday: 1 to 7 (Monday to Sunday)
            If the backup battery is installed then the real-time clock keeps date and
            time even if the Bricklet is not powered by a Brick.
            The real-time clock handles leap year and inserts the 29th of February
            accordingly. But leap seconds, time zones and daylight saving time are not
            handled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.GetDateTime(System.Int32@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the current date (including weekday) and the current time of the
            real-time clock with hundredths of a second resolution.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.GetTimestamp">
            <summary>
            Returns the current date and the time of the real-time clock converted to
            milliseconds. The timestamp has an effective resolution of hundredths of a
            second.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.SetOffset(System.Int16)">
            <summary>
            Sets the offset the real-time clock should compensate for in 2.17 ppm steps
            between -277.76 ppm (-128) and +275.59 ppm (127).
            The real-time clock time can deviate from the actual time due to the frequency
            deviation of its 32.768 kHz crystal. Even without compensation (factory
            default) the resulting time deviation should be at most ±20 ppm (±52.6
            seconds per month).
            This deviation can be calculated by comparing the same duration measured by the
            real-time clock (``rtc_duration``) an accurate reference clock
            (``ref_duration``).
            For best results the configured offset should be set to 0 ppm first and then a
            duration of at least 6 hours should be measured.
            The new offset (``new_offset``) can be calculated from the currently configured
            offset (``current_offset``) and the measured durations as follow::
            new_offset = current_offset - round(1000000 * (rtc_duration - ref_duration) / rtc_duration / 2.17)
            If you want to calculate the offset, then we recommend using the calibration
            dialog in Brick Viewer, instead of doing it manually.
            The offset is saved in the EEPROM of the Bricklet and only needs to be
            configured once.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.GetOffset">
            <summary>
            Returns the offset as set by <see cref="M:Tinkerforge.BrickletRealTimeClock.SetOffset(System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.SetDateTimeCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletRealTimeClock.DateTimeCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletRealTimeClock.DateTimeCallback" /> Callback is only triggered if the date or time changed
            since the last triggering.
            The default value is 0.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.GetDateTimeCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletRealTimeClock.SetDateTimeCallbackPeriod(System.Int64)" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.SetAlarm(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int32)">
            <summary>
            Configures a repeatable alarm. The <see cref="E:Tinkerforge.BrickletRealTimeClock.AlarmCallback" /> callback is triggered if the
            current date and time matches the configured alarm.
            Setting a parameter to -1 means that it should be disabled and doesn't take part
            in the match. Setting all parameters to -1 disables the alarm completely.
            For example, to make the alarm trigger every day at 7:30 AM it can be
            configured as (-1, -1, 7, 30, -1, -1, -1). The hour is set to match 7 and the
            minute is set to match 30. The alarm is triggered if all enabled parameters
            match.
            The interval has a special role. It allows to make the alarm reconfigure itself.
            This is useful if you need a repeated alarm that cannot be expressed by matching
            the current date and time. For example, to make the alarm trigger every 23
            seconds it can be configured as (-1, -1, -1, -1, -1, -1, 23). Internally the
            Bricklet will take the current date and time, add 23 seconds to it and set the
            result as its alarm. The first alarm will be triggered 23 seconds after the
            call. Because the interval is not -1, the Bricklet will do the same again
            internally, take the current date and time, add 23 seconds to it and set that
            as its alarm. This results in a repeated alarm that triggers every 23 seconds.
            The interval can also be used in combination with the other parameters. For
            example, configuring the alarm as (-1, -1, 7, 30, -1, -1, 300) results in an
            alarm that triggers every day at 7:30 AM and is then repeated every 5 minutes.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.GetAlarm(System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int16@,System.Int32@)">
            <summary>
            Returns the alarm configuration as set by <see cref="M:Tinkerforge.BrickletRealTimeClock.SetAlarm(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int32)" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.OnDateTimeCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRealTimeClock.OnAlarmCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRemoteSwitch">
            <summary>
            Controls remote mains switches
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.FUNCTION_SWITCH_SOCKET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.FUNCTION_GET_SWITCHING_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.FUNCTION_SET_REPEATS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.FUNCTION_GET_REPEATS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.FUNCTION_SWITCH_SOCKET_A">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.FUNCTION_SWITCH_SOCKET_B">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.FUNCTION_DIM_SOCKET_B">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.FUNCTION_SWITCH_SOCKET_C">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.SWITCH_TO_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.SWITCH_TO_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.SWITCHING_STATE_READY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRemoteSwitch.SWITCHING_STATE_BUSY">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRemoteSwitch.SwitchingDoneCallback">
            <summary>
            This callback is called whenever the switching state changes
            from busy to ready, see <see cref="M:Tinkerforge.BrickletRemoteSwitch.GetSwitchingState" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRemoteSwitch.SwitchingDoneEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRemoteSwitch.SwitchingDone">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.SwitchSocket(System.Byte,System.Byte,System.Byte)">
            <summary>
            This function is deprecated, use <see cref="M:Tinkerforge.BrickletRemoteSwitch.SwitchSocketA(System.Byte,System.Byte,System.Byte)" /> instead.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.GetSwitchingState">
            <summary>
            Returns the current switching state. If the current state is busy, the
            Bricklet is currently sending a code to switch a socket. It will not
            accept any calls of <see cref="M:Tinkerforge.BrickletRemoteSwitch.SwitchSocket(System.Byte,System.Byte,System.Byte)" /> until the state changes to ready.
            How long the switching takes is dependent on the number of repeats, see
            <see cref="M:Tinkerforge.BrickletRemoteSwitch.SetRepeats(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.SetRepeats(System.Byte)">
            <summary>
            Sets the number of times the code is send when of the <see cref="M:Tinkerforge.BrickletRemoteSwitch.SwitchSocket(System.Byte,System.Byte,System.Byte)" />
            functions is called. The repeats basically correspond to the amount of time
            that a button of the remote is pressed.
            Some dimmers are controlled by the length of a button pressed,
            this can be simulated by increasing the repeats.
            The default value is 5.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.GetRepeats">
            <summary>
            Returns the number of repeats as set by <see cref="M:Tinkerforge.BrickletRemoteSwitch.SetRepeats(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.SwitchSocketA(System.Byte,System.Byte,System.Byte)">
            <summary>
            To switch a type A socket you have to give the house code, receiver code and the
            state (on or off) you want to switch to.
            The house code and receiver code have a range of 0 to 31 (5bit).
            A detailed description on how you can figure out the house and receiver code
            can be found :ref:`here &lt;remote_switch_bricklet_type_a_house_and_receiver_code&gt;`.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.SwitchSocketB(System.Int64,System.Byte,System.Byte)">
            <summary>
            To switch a type B socket you have to give the address, unit and the state
            (on or off) you want to switch to.
            The address has a range of 0 to 67108863 (26bit) and the unit has a range
            of 0 to 15 (4bit). To switch all devices with the same address use 255 for
            the unit.
            A detailed description on how you can teach a socket the address and unit can
            be found :ref:`here &lt;remote_switch_bricklet_type_b_address_and_unit&gt;`.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.DimSocketB(System.Int64,System.Byte,System.Byte)">
            <summary>
            To control a type B dimmer you have to give the address, unit and the
            dim value you want to set the dimmer to.
            The address has a range of 0 to 67108863 (26bit), the unit and the dim value
            has a range of 0 to 15 (4bit).
            A detailed description on how you can teach a dimmer the address and unit can
            be found :ref:`here &lt;remote_switch_bricklet_type_b_address_and_unit&gt;`.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.SwitchSocketC(System.Char,System.Byte,System.Byte)">
            <summary>
            To switch a type C socket you have to give the system code, device code and the
            state (on or off) you want to switch to.
            The system code has a range of 'A' to 'P' (4bit) and the device code has a
            range of 1 to 16 (4bit).
            A detailed description on how you can figure out the system and device code
            can be found :ref:`here &lt;remote_switch_bricklet_type_c_system_and_device_code&gt;`.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRemoteSwitch.OnSwitchingDoneCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRGBLED">
            <summary>
            Controls one RGB LED
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRGBLED.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRGBLED.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRGBLED.FUNCTION_SET_RGB_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRGBLED.FUNCTION_GET_RGB_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRGBLED.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRGBLED.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRGBLED.SetRGBValue(System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the *rgb* value for the LED.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRGBLED.GetRGBValue(System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the *rgb* value of the LED as set by <see cref="M:Tinkerforge.BrickletRGBLED.SetRGBValue(System.Byte,System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRGBLED.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryEncoder">
            <summary>
            360° rotary encoder with push-button
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.FUNCTION_GET_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.FUNCTION_SET_COUNT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.FUNCTION_GET_COUNT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.FUNCTION_SET_COUNT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.FUNCTION_GET_COUNT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.FUNCTION_IS_PRESSED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryEncoder.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryEncoder.CountCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletRotaryEncoder.SetCountCallbackPeriod(System.Int64)" />. The parameter is the count of
            the encoder.
            The <see cref="E:Tinkerforge.BrickletRotaryEncoder.CountCallback" /> callback is only triggered if the count has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryEncoder.CountEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryEncoder.Count">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryEncoder.CountReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletRotaryEncoder.SetCountCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the count of the encoder.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletRotaryEncoder.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryEncoder.CountReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryEncoder.CountReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryEncoder.PressedCallback">
            <summary>
            This callback is triggered when the button is pressed.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryEncoder.PressedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryEncoder.Pressed">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryEncoder.ReleasedCallback">
            <summary>
            This callback is triggered when the button is released.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryEncoder.ReleasedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryEncoder.Released">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.GetCount(System.Boolean)">
            <summary>
            Returns the current count of the encoder. If you set reset
            to true, the count is set back to 0 directly after the
            current count is read.
            The encoder has 24 steps per rotation
            Turning the encoder to the left decrements the counter,
            so a negative count is possible.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.SetCountCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletRotaryEncoder.CountCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletRotaryEncoder.CountCallback" /> callback is only triggered if the count has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.GetCountCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletRotaryEncoder.SetCountCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.SetCountCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletRotaryEncoder.CountReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the count is *outside* the min and max values"
            "'i'",    "Callback is triggered when the count is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the count is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the count is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.GetCountCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletRotaryEncoder.SetCountCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletRotaryEncoder.CountReachedCallback" />
            is triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletRotaryEncoder.SetCountCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletRotaryEncoder.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.IsPressed">
            <summary>
            Returns *true* if the button is pressed and *false* otherwise.
            It is recommended to use the <see cref="E:Tinkerforge.BrickletRotaryEncoder.PressedCallback" /> and <see cref="E:Tinkerforge.BrickletRotaryEncoder.ReleasedCallback" /> callbacks
            to handle the button.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.OnCountCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.OnCountReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.OnPressedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryEncoder.OnReleasedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryPoti">
            <summary>
            300° rotary potentiometer
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_GET_POSITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_SET_POSITION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_GET_POSITION_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_SET_POSITION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_GET_POSITION_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRotaryPoti.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryPoti.PositionCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletRotaryPoti.SetPositionCallbackPeriod(System.Int64)" />. The parameter is the position of
            the rotary potentiometer.
            The <see cref="E:Tinkerforge.BrickletRotaryPoti.PositionCallback" /> callback is only triggered if the position has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryPoti.PositionEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryPoti.Position">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryPoti.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletRotaryPoti.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the
            analog value of the rotary potentiometer.
            The <see cref="E:Tinkerforge.BrickletRotaryPoti.AnalogValueCallback" /> callback is only triggered if the position has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryPoti.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryPoti.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryPoti.PositionReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletRotaryPoti.SetPositionCallbackThreshold(System.Char,System.Int16,System.Int16)" /> is reached.
            The parameter is the position of the rotary potentiometer.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletRotaryPoti.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryPoti.PositionReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryPoti.PositionReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryPoti.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletRotaryPoti.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the rotary potentiometer.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletRotaryPoti.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRotaryPoti.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRotaryPoti.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.GetPosition">
            <summary>
            Returns the position of the rotary potentiometer. The value is in degree
            and between -150° (turned left) and 150° (turned right).
            If you want to get the position periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletRotaryPoti.PositionCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletRotaryPoti.SetPositionCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            <note>
            The value returned by <see cref="M:Tinkerforge.BrickletRotaryPoti.GetPosition" /> is averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletRotaryPoti.GetAnalogValue" /> gives back raw
            unfiltered analog values. The only reason to use <see cref="M:Tinkerforge.BrickletRotaryPoti.GetAnalogValue" /> is,
            if you need the full resolution of the analog-to-digital converter.
            </note>
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletRotaryPoti.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletRotaryPoti.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.SetPositionCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletRotaryPoti.PositionCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletRotaryPoti.PositionCallback" /> callback is only triggered if the position has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.GetPositionCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletRotaryPoti.SetPositionCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletRotaryPoti.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletRotaryPoti.AnalogValueCallback" /> callback is only triggered if the analog value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletRotaryPoti.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.SetPositionCallbackThreshold(System.Char,System.Int16,System.Int16)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletRotaryPoti.PositionReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the position is *outside* the min and max values"
            "'i'",    "Callback is triggered when the position is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the position is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the position is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.GetPositionCallbackThreshold(System.Char@,System.Int16@,System.Int16@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletRotaryPoti.SetPositionCallbackThreshold(System.Char,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletRotaryPoti.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletRotaryPoti.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletRotaryPoti.PositionReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletRotaryPoti.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletRotaryPoti.SetPositionCallbackThreshold(System.Char,System.Int16,System.Int16)" />,
            * <see cref="M:Tinkerforge.BrickletRotaryPoti.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletRotaryPoti.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.OnPositionCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.OnPositionReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRotaryPoti.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS232">
            <summary>
            Communicates with RS232 devices
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.FUNCTION_WRITE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.FUNCTION_READ">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.FUNCTION_ENABLE_READ_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.FUNCTION_DISABLE_READ_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.FUNCTION_IS_READ_CALLBACK_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.FUNCTION_SET_BREAK_CONDITION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_300">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_600">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_1200">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_2400">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_4800">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_9600">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_14400">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_19200">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_28800">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_38400">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_57600">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_115200">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.BAUDRATE_230400">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.PARITY_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.PARITY_ODD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.PARITY_EVEN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.PARITY_FORCED_PARITY_1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.PARITY_FORCED_PARITY_0">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.STOPBITS_1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.STOPBITS_2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.WORDLENGTH_5">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.WORDLENGTH_6">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.WORDLENGTH_7">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.WORDLENGTH_8">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.HARDWARE_FLOWCONTROL_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.HARDWARE_FLOWCONTROL_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.SOFTWARE_FLOWCONTROL_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.SOFTWARE_FLOWCONTROL_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.ERROR_OVERRUN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.ERROR_PARITY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS232.ERROR_FRAMING">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS232.ReadCallback">
            <summary>
            This callback is called if new data is available. The message has
            a maximum size of 60 characters. The actual length of the message
            is given in addition.
            To enable this callback, use <see cref="M:Tinkerforge.BrickletRS232.EnableReadCallback" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS232.ReadEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS232.ErrorCallback">
            <summary>
            This callback is called if an error occurs.
            Possible errors are overrun, parity or framing error.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS232.ErrorEventHandler">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.Write(System.Char[],System.Byte)">
            <summary>
            Writes a string of up to 60 characters to the RS232 interface. The string
            can be binary data, ASCII or similar is not necessary.
            The length of the string has to be given as an additional parameter.
            The return value is the number of bytes that could be written.
            See <see cref="M:Tinkerforge.BrickletRS232.SetConfiguration(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)" /> for configuration possibilities
            regarding baudrate, parity and so on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.Read(System.Char[]@,System.Byte@)">
            <summary>
            Returns the currently buffered message. The maximum length
            of message is 60. If the length is given as 0, there was no
            new data available.
            Instead of polling with this function, you can also use
            callbacks. See <see cref="M:Tinkerforge.BrickletRS232.EnableReadCallback" /> and <see cref="E:Tinkerforge.BrickletRS232.ReadCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.EnableReadCallback">
            <summary>
            Enables the <see cref="E:Tinkerforge.BrickletRS232.ReadCallback" /> callback.
            By default the callback is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.DisableReadCallback">
            <summary>
            Disables the <see cref="E:Tinkerforge.BrickletRS232.ReadCallback" /> callback.
            By default the callback is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.IsReadCallbackEnabled">
            <summary>
            Returns *true* if the <see cref="E:Tinkerforge.BrickletRS232.ReadCallback" /> callback is enabled,
            *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.SetConfiguration(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the configuration for the RS232 communication. Available options:
            * Baudrate between 300 and 230400 baud.
            * Parity of none, odd, even or forced parity.
            * Stopbits can be 1 or 2.
            * Word length of 5 to 8.
            * Hard-/Software flow control can each be on or off.
            The default is: 115200 baud, parity none, 1 stop bit, word length 8, hard-/software flow control off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.GetConfiguration(System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletRS232.SetConfiguration(System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.SetBreakCondition(System.Int32)">
            <summary>
            Sets a break condition (the TX output is forced to a logic 0 state).
            The parameter sets the hold-time of the break condition (in ms).
            .. versionadded:: 2.0.2$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.OnReadCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS232.OnErrorCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485">
            <summary>
            Communicates with RS485/Modbus devices with full- or half-duplex
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_WRITE_LOW_LEVEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_READ_LOW_LEVEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_ENABLE_READ_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_DISABLE_READ_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_IS_READ_CALLBACK_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_SET_RS485_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_RS485_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_SET_MODBUS_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_MODBUS_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_SET_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_SET_COMMUNICATION_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_COMMUNICATION_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_SET_ERROR_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_ERROR_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_SET_BUFFER_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_BUFFER_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_BUFFER_STATUS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_ENABLE_ERROR_COUNT_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_DISABLE_ERROR_COUNT_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_IS_ERROR_COUNT_CALLBACK_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_MODBUS_COMMON_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_SLAVE_REPORT_EXCEPTION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_SLAVE_ANSWER_READ_COILS_REQUEST_LOW_LEVEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_MASTER_READ_COILS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_SLAVE_ANSWER_READ_HOLDING_REGISTERS_REQUEST_LOW_LEVEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_MASTER_READ_HOLDING_REGISTERS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_SLAVE_ANSWER_WRITE_SINGLE_COIL_REQUEST">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_MASTER_WRITE_SINGLE_COIL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_SLAVE_ANSWER_WRITE_SINGLE_REGISTER_REQUEST">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_MASTER_WRITE_SINGLE_REGISTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_SLAVE_ANSWER_WRITE_MULTIPLE_COILS_REQUEST">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_MASTER_WRITE_MULTIPLE_COILS_LOW_LEVEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_SLAVE_ANSWER_WRITE_MULTIPLE_REGISTERS_REQUEST">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_MASTER_WRITE_MULTIPLE_REGISTERS_LOW_LEVEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_SLAVE_ANSWER_READ_DISCRETE_INPUTS_REQUEST_LOW_LEVEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_MASTER_READ_DISCRETE_INPUTS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_SLAVE_ANSWER_READ_INPUT_REGISTERS_REQUEST_LOW_LEVEL">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_MODBUS_MASTER_READ_INPUT_REGISTERS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_SPITFP_ERROR_COUNT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_SET_BOOTLOADER_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_BOOTLOADER_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_SET_WRITE_FIRMWARE_POINTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_WRITE_FIRMWARE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_SET_STATUS_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_STATUS_LED_CONFIG">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_CHIP_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_RESET">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_WRITE_UID">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_READ_UID">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.PARITY_NONE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.PARITY_ODD">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.PARITY_EVEN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.STOPBITS_1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.STOPBITS_2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.WORDLENGTH_5">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.WORDLENGTH_6">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.WORDLENGTH_7">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.WORDLENGTH_8">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.DUPLEX_HALF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.DUPLEX_FULL">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.MODE_RS485">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.MODE_MODBUS_MASTER_RTU">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.MODE_MODBUS_SLAVE_RTU">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.COMMUNICATION_LED_CONFIG_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.COMMUNICATION_LED_CONFIG_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.COMMUNICATION_LED_CONFIG_SHOW_HEARTBEAT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.COMMUNICATION_LED_CONFIG_SHOW_COMMUNICATION">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.ERROR_LED_CONFIG_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.ERROR_LED_CONFIG_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.ERROR_LED_CONFIG_SHOW_HEARTBEAT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.ERROR_LED_CONFIG_SHOW_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_TIMEOUT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_SUCCESS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_ILLEGAL_FUNCTION">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_ILLEGAL_DATA_ADDRESS">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_ILLEGAL_DATA_VALUE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_SLAVE_DEVICE_FAILURE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_ACKNOWLEDGE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_SLAVE_DEVICE_BUSY">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_MEMORY_PARITY_ERROR">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_GATEWAY_PATH_UNAVAILABLE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.EXCEPTION_CODE_GATEWAY_TARGET_DEVICE_FAILED_TO_RESPOND">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_MODE_BOOTLOADER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_MODE_FIRMWARE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_MODE_BOOTLOADER_WAIT_FOR_REBOOT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_MODE_FIRMWARE_WAIT_FOR_REBOOT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_MODE_FIRMWARE_WAIT_FOR_ERASE_AND_REBOOT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_STATUS_OK">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_STATUS_INVALID_MODE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_STATUS_NO_CHANGE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_STATUS_ENTRY_FUNCTION_NOT_PRESENT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_STATUS_DEVICE_IDENTIFIER_INCORRECT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.BOOTLOADER_STATUS_CRC_MISMATCH">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.STATUS_LED_CONFIG_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.STATUS_LED_CONFIG_ON">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.STATUS_LED_CONFIG_SHOW_HEARTBEAT">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletRS485.STATUS_LED_CONFIG_SHOW_STATUS">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ReadLowLevelCallback">
            <summary>
            This callback is called if new data is available.
            To enable this callback, use <see cref="M:Tinkerforge.BrickletRS485.EnableReadCallback" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ReadLowLevelEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ErrorCountCallback">
            <summary>
            This callback is called if a new error occurs. It returns
            the current overrun and parity error count.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ErrorCountEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveReadCoilsRequestCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to read coils. The parameters are
            request ID of the request, the starting address and the number of coils to
            be read as received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadCoilsRequest(System.Byte,System.Boolean[])" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveReadCoilsRequestEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterReadCoilsResponseLowLevelCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to read coils.
            The parameters are request ID
            of the request, exception code of the response and the data as received by the
            response.
            Any non-zero exception code indicates a problem. If the exception code
            is greater than zero then the number represents a Modbus exception code. If it is
            less than zero then it represents other errors. For example, -1 indicates that
            the request timed out or that the master did not receive any valid response of the
            request within the master request timeout period as set by
            <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterReadCoilsResponseLowLevelEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveReadHoldingRegistersRequestCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to read holding registers. The parameters
            are request ID of the request, the starting address and the number of holding
            registers to be read as received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadHoldingRegistersRequest(System.Byte,System.Int32[])" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveReadHoldingRegistersRequestEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterReadHoldingRegistersResponseLowLevelCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to read holding registers.
            The parameters are
            request ID of the request, exception code of the response and the data as received
            by the response.
            Any non-zero exception code indicates a problem. If the exception
            code is greater than zero then the number represents a Modbus exception code. If
            it is less than zero then it represents other errors. For example, -1 indicates that
            the request timed out or that the master did not receive any valid response of the
            request within the master request timeout period as set by
            <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterReadHoldingRegistersResponseLowLevelEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteSingleCoilRequestCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to write a single coil. The parameters
            are request ID of the request, the coil address and the value of coil to be
            written as received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteSingleCoilRequest(System.Byte)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveWriteSingleCoilRequestEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterWriteSingleCoilResponseCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to write a single coil.
            The parameters are
            request ID of the request and exception code of the response.
            Any non-zero exception code indicates a problem.
            If the exception code is greater than zero then the number represents a Modbus
            exception code. If it is less than zero then it represents other errors. For
            example, -1 indicates that the request timed out or that the master did not receive
            any valid response of the request within the master request timeout period as set
            by <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterWriteSingleCoilResponseEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteSingleRegisterRequestCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to write a single register. The parameters
            are request ID of the request, the register address and the register value to
            be written as received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteSingleRegisterRequest(System.Byte)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveWriteSingleRegisterRequestEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterWriteSingleRegisterResponseCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to write a single register.
            The parameters are
            request ID of the request and exception code of the response.
            Any non-zero exception code
            indicates a problem. If the exception code is greater than zero then the number
            represents a Modbus exception code. If it is less than zero then it represents
            other errors. For example, -1 indicates that the request timed out or that the
            master did not receive any valid response of the request within the master request
            timeout period as set by <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterWriteSingleRegisterResponseEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleCoilsRequestLowLevelCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to write multiple coils. The parameters
            are request ID of the request, the starting address and the data to be written as
            received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteMultipleCoilsRequest(System.Byte)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleCoilsRequestLowLevelEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleCoilsResponseCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to read coils.
            The parameters are
            request ID of the request and exception code of the response.
            Any non-zero exception code
            indicates a problem. If the exception code is greater than zero then the number
            represents a Modbus exception code. If it is less than zero then it represents
            other errors. For example, -1 indicates that the request timedout or that the
            master did not receive any valid response of the request within the master request
            timeout period as set by <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleCoilsResponseEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleRegistersRequestLowLevelCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to write multiple registers. The parameters
            are request ID of the request, the starting address and the data to be written as
            received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteMultipleRegistersRequest(System.Byte)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleRegistersRequestLowLevelEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleRegistersResponseCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to write multiple registers.
            The parameters
            are request ID of the request and exception code of the response.
            Any non-zero
            exception code indicates a problem. If the exception code is greater than zero then
            the number represents a Modbus exception code. If it is less than zero then it
            represents other errors. For example, -1 indicates that the request timedout or
            that the master did not receive any valid response of the request within the master
            request timeout period as set by <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleRegistersResponseEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveReadDiscreteInputsRequestCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to read discrete inputs. The parameters
            are request ID of the request, the starting address and the number of discrete
            inputs to be read as received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadDiscreteInputsRequest(System.Byte,System.Boolean[])" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveReadDiscreteInputsRequestEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterReadDiscreteInputsResponseLowLevelCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to read discrete inputs.
            The parameters are
            request ID of the request, exception code of the response and the data as received
            by the response.
            Any non-zero exception code indicates a problem. If the exception
            code is greater than zero then the number represents a Modbus exception code. If
            it is less than zero then it represents other errors. For example, -1 indicates that
            the request timedout or that the master did not receive any valid response of the
            request within the master request timeout period as set by
            <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterReadDiscreteInputsResponseLowLevelEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveReadInputRegistersRequestCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to read input registers. The parameters
            are request ID of the request, the starting address and the number of input
            registers to be read as received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadInputRegistersRequest(System.Byte,System.Int32[])" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveReadInputRegistersRequestEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterReadInputRegistersResponseLowLevelCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to read input registers.
            The parameters are
            request ID of the request, exception code of the response and the data as received
            by the response.
            Any non-zero exception code indicates a problem. If the exception
            code is greater than zero then the number represents a Modbus exception code. If
            it is less than zero then it represents other errors. For example, -1 indicates that
            the request timedout or that the master did not receive any valid response of the
            request within the master request timeout period as set by
            <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterReadInputRegistersResponseLowLevelEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ReadCallback">
            <summary>
            This callback is called if new data is available.
            To enable this callback, use <see cref="M:Tinkerforge.BrickletRS485.EnableReadCallback" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ReadEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterReadCoilsResponseCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to read coils.
            The parameters are request ID
            of the request, exception code of the response and the data as received by the
            response.
            Any non-zero exception code indicates a problem. If the exception code
            is greater than zero then the number represents a Modbus exception code. If it is
            less than zero then it represents other errors. For example, -1 indicates that
            the request timed out or that the master did not receive any valid response of the
            request within the master request timeout period as set by
            <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterReadCoilsResponseEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterReadHoldingRegistersResponseCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to read holding registers.
            The parameters are
            request ID of the request, exception code of the response and the data as received
            by the response.
            Any non-zero exception code indicates a problem. If the exception
            code is greater than zero then the number represents a Modbus exception code. If
            it is less than zero then it represents other errors. For example, -1 indicates that
            the request timed out or that the master did not receive any valid response of the
            request within the master request timeout period as set by
            <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterReadHoldingRegistersResponseEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleCoilsRequestCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to write multiple coils. The parameters
            are request ID of the request, the starting address and the data to be written as
            received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteMultipleCoilsRequest(System.Byte)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleCoilsRequestEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleRegistersRequestCallback">
            <summary>
            This callback is called only in Modbus slave mode when the slave receives a
            valid request from a Modbus master to write multiple registers. The parameters
            are request ID of the request, the starting address and the data to be written as
            received by the request.
            To send a response of this request use <see cref="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteMultipleRegistersRequest(System.Byte)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleRegistersRequestEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterReadDiscreteInputsResponseCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to read discrete inputs.
            The parameters are
            request ID of the request, exception code of the response and the data as received
            by the response.
            Any non-zero exception code indicates a problem. If the exception
            code is greater than zero then the number represents a Modbus exception code. If
            it is less than zero then it represents other errors. For example, -1 indicates that
            the request timedout or that the master did not receive any valid response of the
            request within the master request timeout period as set by
            <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterReadDiscreteInputsResponseEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletRS485.ModbusMasterReadInputRegistersResponseCallback">
            <summary>
            This callback is called only in Modbus master mode when the master receives a
            valid response of a request to read input registers.
            The parameters are
            request ID of the request, exception code of the response and the data as received
            by the response.
            Any non-zero exception code indicates a problem. If the exception
            code is greater than zero then the number represents a Modbus exception code. If
            it is less than zero then it represents other errors. For example, -1 indicates that
            the request timedout or that the master did not receive any valid response of the
            request within the master request timeout period as set by
            <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletRS485.ModbusMasterReadInputRegistersResponseEventHandler">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.WriteLowLevel(System.Int32,System.Int32,System.Char[])">
            <summary>
            Writes characters to the RS485 interface. The characters can be binary data,
            ASCII or similar is not necessary.
            The return value is the number of characters that were written.
            See <see cref="M:Tinkerforge.BrickletRS485.SetRS485Configuration(System.Int64,System.Byte,System.Byte,System.Byte,System.Byte)" /> for configuration possibilities
            regarding baudrate, parity and so on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ReadLowLevel(System.Int32,System.Int32@,System.Int32@,System.Char[]@)">
            <summary>
            Returns up to *length* characters from receive buffer.
            Instead of polling with this function, you can also use
            callbacks. But note that this function will return available
            data only when the read callback is disabled.
            See <see cref="M:Tinkerforge.BrickletRS485.EnableReadCallback" /> and <see cref="E:Tinkerforge.BrickletRS485.ReadCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.EnableReadCallback">
            <summary>
            Enables the <see cref="E:Tinkerforge.BrickletRS485.ReadCallback" /> callback.
            By default the callback is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.DisableReadCallback">
            <summary>
            Disables the <see cref="E:Tinkerforge.BrickletRS485.ReadCallback" /> callback.
            By default the callback is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.IsReadCallbackEnabled">
            <summary>
            Returns *true* if the <see cref="E:Tinkerforge.BrickletRS485.ReadCallback" /> callback is enabled,
            *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.SetRS485Configuration(System.Int64,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the configuration for the RS485 communication. Available options:
            * Baudrate between 100 and 2000000 baud.
            * Parity of none, odd or even.
            * Stopbits can be 1 or 2.
            * Word length of 5 to 8.
            * Half- or Full-Duplex.
            The default is: 115200 baud, parity none, 1 stop bit, word length 8, half duplex.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetRS485Configuration(System.Int64@,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletRS485.SetRS485Configuration(System.Int64,System.Byte,System.Byte,System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)">
            <summary>
            Sets the configuration for the RS485 Modbus communication. Available options:
            * Slave Address: Address to be used as the Modbus slave address in Modbus slave mode. Valid Modbus slave address range is 1 to 247.
            * Master Request Timeout: Specifies how long the master should wait for a response from a slave in milliseconds when in Modbus master mode.
            The default is: Slave Address = 1 and Master Request Timeout = 1000 milliseconds (1 second).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetModbusConfiguration(System.Byte@,System.Int64@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletRS485.SetModbusConfiguration(System.Byte,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.SetMode(System.Byte)">
            <summary>
            Sets the mode of the Bricklet in which it operates. Available options are
            * RS485,
            * Modbus Master RTU and
            * Modbus Slave RTU.
            The default is: RS485 mode.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetMode">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletRS485.SetMode(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.SetCommunicationLEDConfig(System.Byte)">
            <summary>
            Sets the communication LED configuration. By default the LED shows
            communication traffic, it flickers once for every 10 received data packets.
            You can also turn the LED permanently on/off or show a heartbeat.
            If the Bricklet is in bootloader mode, the LED is off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetCommunicationLEDConfig">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletRS485.SetCommunicationLEDConfig(System.Byte)" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.SetErrorLEDConfig(System.Byte)">
            <summary>
            Sets the error LED configuration.
            By default the error LED turns on if there is any error (see <see cref="E:Tinkerforge.BrickletRS485.ErrorCountCallback" />
            callback). If you call this function with the SHOW ERROR option again, the LED
            will turn off until the next error occurs.
            You can also turn the LED permanently on/off or show a heartbeat.
            If the Bricklet is in bootloader mode, the LED is off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetErrorLEDConfig">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletRS485.SetErrorLEDConfig(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.SetBufferConfig(System.Int32,System.Int32)">
            <summary>
            Sets the send and receive buffer size in byte. In sum there is
            10240 byte (10kb) buffer available and the minimum buffer size
            is 1024 byte (1kb) for both.
            The current buffer content is lost if this function is called.
            The send buffer holds data that is given by <see cref="M:Tinkerforge.BrickletRS485.Write(System.Char[])" /> and
            can not be written yet. The receive buffer holds data that is
            received through RS485 but could not yet be send to the
            user, either by <see cref="M:Tinkerforge.BrickletRS485.Read(System.Int32)" /> or through <see cref="E:Tinkerforge.BrickletRS485.ReadCallback" /> callback.
            The default configuration is 5120 byte (5kb) per buffer.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetBufferConfig(System.Int32@,System.Int32@)">
            <summary>
            Returns the buffer configuration as set by <see cref="M:Tinkerforge.BrickletRS485.SetBufferConfig(System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetBufferStatus(System.Int32@,System.Int32@)">
            <summary>
            Returns the currently used bytes for the send and received buffer.
            See <see cref="M:Tinkerforge.BrickletRS485.SetBufferConfig(System.Int32,System.Int32)" /> for buffer size configuration.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.EnableErrorCountCallback">
            <summary>
            Enables the <see cref="E:Tinkerforge.BrickletRS485.ErrorCountCallback" /> callback.
            By default the callback is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.DisableErrorCountCallback">
            <summary>
            Disables the <see cref="E:Tinkerforge.BrickletRS485.ErrorCountCallback" /> callback.
            By default the callback is disabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.IsErrorCountCallbackEnabled">
            <summary>
            Returns *true* if the <see cref="E:Tinkerforge.BrickletRS485.ErrorCountCallback" /> callback is enabled,
            *false* otherwise.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetErrorCount(System.Int64@,System.Int64@)">
            <summary>
            Returns the current number of overrun and parity errors.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetModbusCommonErrorCount(System.Int64@,System.Int64@,System.Int64@,System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the current number of errors occurred in Modbus mode.
            * Timeout Error Count: Number of timeouts occurred.
            * Checksum Error Count: Number of failures due to Modbus frame CRC16 checksum mismatch.
            * Frame Too Big Error Count: Number of times frames were rejected because they exceeded maximum Modbus frame size which is 256 bytes.
            * Illegal Function Error Count: Number of errors when an unimplemented or illegal function is requested. This corresponds to Modbus exception code 1.
            * Illegal Data Address Error Count: Number of errors due to invalid data address. This corresponds to Modbus exception code 2.
            * Illegal Data Value Error Count: Number of errors due to invalid data value. This corresponds to Modbus exception code 3.
            * Slave Device Failure Error Count: Number of errors occurred on the slave device which were unrecoverable. This corresponds to Modbus exception code 4.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveReportException(System.Byte,System.Int16)">
            <summary>
            In Modbus slave mode this function can be used to report a Modbus exception for
            a Modbus master request.
            * Request ID: Request ID of the request received by the slave.
            * Exception Code: Modbus exception code to report to the Modbus master.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadCoilsRequestLowLevel(System.Byte,System.Int32,System.Int32,System.Boolean[])">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            read coils.
            * Request ID: Request ID of the corresponding request that is being answered.
            * Coils: Data that is to be sent to the Modbus master for the corresponding request.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveReadCoilsRequestCallback" /> callback
            with the Request ID as provided by the argument of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterReadCoils(System.Byte,System.Int64,System.Int32)">
            <summary>
            In Modbus master mode this function can be used to read coils from a slave. This
            function creates a Modbus function code 1 request.
            * Slave Address: Address of the target Modbus slave.
            * Starting Address: Starting address of the read.
            * Count: Number of coils to read.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterReadCoilsResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be
            matched with the Request ID returned from this function to verify that the callback
            is indeed for a particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadHoldingRegistersRequestLowLevel(System.Byte,System.Int32,System.Int32,System.Int32[])">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            read holding registers.
            * Request ID: Request ID of the corresponding request that is being answered.
            * Holding Registers: Data that is to be sent to the Modbus master for the corresponding request.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveReadHoldingRegistersRequestCallback" />
            callback with the Request ID as provided by the argument of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterReadHoldingRegisters(System.Byte,System.Int64,System.Int32)">
            <summary>
            In Modbus master mode this function can be used to read holding registers from a slave.
            This function creates a Modbus function code 3 request.
            * Slave Address: Address of the target Modbus slave.
            * Starting Address: Starting address of the read.
            * Count: Number of holding registers to read.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterReadHoldingRegistersResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be matched
            with the Request ID returned from this function to verify that the callback is indeed for a
            particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteSingleCoilRequest(System.Byte)">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            write a single coil.
            * Request ID: Request ID of the corresponding request that is being answered.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteSingleCoilRequestCallback" />
            callback with the Request ID as provided by the arguments of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterWriteSingleCoil(System.Byte,System.Int64,System.Boolean)">
            <summary>
            In Modbus master mode this function can be used to write a single coil of a slave.
            This function creates a Modbus function code 5 request.
            * Slave Address: Address of the target Modbus slave.
            * Coil Address: Address of the coil.
            * Coil Value: Value to be written.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterWriteSingleCoilResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be matched
            with the Request ID returned from this function to verify that the callback is indeed for a
            particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteSingleRegisterRequest(System.Byte)">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            write a single register.
            * Request ID: Request ID of the corresponding request that is being answered.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteSingleRegisterRequestCallback" />
            callback with the Request ID, Register Address and Register Value as provided by
            the arguments of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterWriteSingleRegister(System.Byte,System.Int64,System.Int32)">
            <summary>
            In Modbus master mode this function can be used to write a single register of a
            slave. This function creates a Modbus function code 6 request.
            * Slave Address: Address of the target Modbus slave.
            * Register Address: Address of the register.
            * Register Value: Value to be written.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterWriteSingleRegisterResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be matched
            with the Request ID returned from this function to verify that the callback is indeed for a
            particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteMultipleCoilsRequest(System.Byte)">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            write multiple coils.
            * Request ID: Request ID of the corresponding request that is being answered.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleCoilsRequestCallback" />
            callback with the Request ID of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleCoilsLowLevel(System.Byte,System.Int64,System.Int32,System.Int32,System.Boolean[])">
            <summary>
            In Modbus master mode this function can be used to write multiple coils of a slave.
            This function creates a Modbus function code 15 request.
            * Slave Address: Address of the target Modbus slave.
            * Starting Address: Starting address of the write.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleCoilsResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be matched
            with the Request ID returned from this function to verify that the callback is indeed for a
            particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerWriteMultipleRegistersRequest(System.Byte)">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            write multiple registers.
            * Request ID: Request ID of the corresponding request that is being answered.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveWriteMultipleRegistersRequestCallback" />
            callback with the Request ID of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleRegistersLowLevel(System.Byte,System.Int64,System.Int32,System.Int32,System.Int32[])">
            <summary>
            In Modbus master mode this function can be used to write multiple registers of a slave.
            This function creates a Modbus function code 16 request.
            * Slave Address: Address of the target Modbus slave.
            * Starting Address: Starting Address of the write.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleRegistersResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be matched
            with the Request ID returned from this function to verify that the callback is indeed for a
            particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadDiscreteInputsRequestLowLevel(System.Byte,System.Int32,System.Int32,System.Boolean[])">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            read discrete inputs.
            * Request ID: Request ID of the corresponding request that is being answered.
            * Discrete Inputs: Data that is to be sent to the Modbus master for the corresponding request.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveReadDiscreteInputsRequestCallback" />
            callback with the Request ID as provided by the argument of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterReadDiscreteInputs(System.Byte,System.Int64,System.Int32)">
            <summary>
            In Modbus master mode this function can be used to read discrete inputs from a slave.
            This function creates a Modbus function code 2 request.
            * Slave Address: Address of the target Modbus slave.
            * Starting Address: Starting address of the read.
            * Count: Number of discrete inputs to read.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterReadDiscreteInputsResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be matched
            with the Request ID returned from this function to verify that the callback is indeed for a
            particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadInputRegistersRequestLowLevel(System.Byte,System.Int32,System.Int32,System.Int32[])">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            read input registers.
            * Request ID: Request ID of the corresponding request that is being answered.
            * Input Registers: Data that is to be sent to the Modbus master for the corresponding request.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveReadInputRegistersRequestCallback" /> callback
            with the Request ID as provided by the argument of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterReadInputRegisters(System.Byte,System.Int64,System.Int32)">
            <summary>
            In Modbus master mode this function can be used to read input registers from a slave.
            This function creates a Modbus function code 4 request.
            * Slave Address: Address of the target Modbus slave.
            * Starting Address: Starting address of the read.
            * Count: Number of input registers to read.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterReadInputRegistersResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be matched
            with the Request ID returned from this function to verify that the callback is indeed for a
            particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetSPITFPErrorCount(System.Int64@,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            Returns the error count for the communication between Brick and Bricklet.
            The errors are divided into
            * ack checksum errors,
            * message checksum errors,
            * frameing errors and
            * overflow errors.
            The errors counts are for errors that occur on the Bricklet side. All
            Bricks have a similar function that returns the errors on the Brick side.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.SetBootloaderMode(System.Byte)">
            <summary>
            Sets the bootloader mode and returns the status after the requested
            mode change was instigated.
            You can change from bootloader mode to firmware mode and vice versa. A change
            from bootloader mode to firmware mode will only take place if the entry function,
            device identifier und crc are present and correct.
            This function is used by Brick Viewer during flashing. It should not be
            necessary to call it in a normal user program.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetBootloaderMode">
            <summary>
            Returns the current bootloader mode, see <see cref="M:Tinkerforge.BrickletRS485.SetBootloaderMode(System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.SetWriteFirmwarePointer(System.Int64)">
            <summary>
            Sets the firmware pointer for func:`WriteFirmware`. The pointer has
            to be increased by chunks of size 64. The data is written to flash
            every 4 chunks (which equals to one page of size 256).
            This function is used by Brick Viewer during flashing. It should not be
            necessary to call it in a normal user program.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.WriteFirmware(System.Byte[])">
            <summary>
            Writes 64 Bytes of firmware at the position as written by
            <see cref="M:Tinkerforge.BrickletRS485.SetWriteFirmwarePointer(System.Int64)" /> before. The firmware is written
            to flash every 4 chunks.
            You can only write firmware in bootloader mode.
            This function is used by Brick Viewer during flashing. It should not be
            necessary to call it in a normal user program.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.SetStatusLEDConfig(System.Byte)">
            <summary>
            Sets the status LED configuration. By default the LED shows
            communication traffic between Brick and Bricklet, it flickers once
            for every 10 received data packets.
            You can also turn the LED permanently on/off or show a heartbeat.
            If the Bricklet is in bootloader mode, the LED is will show heartbeat by default.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetStatusLEDConfig">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletRS485.SetStatusLEDConfig(System.Byte)" /></summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetChipTemperature">
            <summary>
            Returns the temperature in °C as measured inside the microcontroller. The
            value returned is not the ambient temperature!
            The temperature is only proportional to the real temperature and it has bad
            accuracy. Practically it is only useful as an indicator for
            temperature changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.Reset">
            <summary>
            Calling this function will reset the Bricklet. All configurations
            will be lost.
            After a reset you have to create new device objects,
            calling functions on the existing ones will result in
            undefined behavior!
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.WriteUID(System.Int64)">
            <summary>
            Writes a new UID into flash. If you want to set a new UID
            you have to decode the Base58 encoded UID string into an
            integer first.
            We recommend that you use Brick Viewer to change the UID.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ReadUID">
            <summary>
            Returns the current UID as an integer. Encode as
            Base58 to get the usual string version.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.Write(System.Char[])">
            <summary>
            Writes characters to the RS485 interface. The characters can be binary data,
            ASCII or similar is not necessary.
            The return value is the number of characters that were written.
            See <see cref="M:Tinkerforge.BrickletRS485.SetRS485Configuration(System.Int64,System.Byte,System.Byte,System.Byte,System.Byte)" /> for configuration possibilities
            regarding baudrate, parity and so on.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.Read(System.Int32)">
            <summary>
            Returns up to *length* characters from receive buffer.
            Instead of polling with this function, you can also use
            callbacks. But note that this function will return available
            data only when the read callback is disabled.
            See <see cref="M:Tinkerforge.BrickletRS485.EnableReadCallback" /> and <see cref="E:Tinkerforge.BrickletRS485.ReadCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadCoilsRequest(System.Byte,System.Boolean[])">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            read coils.
            * Request ID: Request ID of the corresponding request that is being answered.
            * Coils: Data that is to be sent to the Modbus master for the corresponding request.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveReadCoilsRequestCallback" /> callback
            with the Request ID as provided by the argument of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadHoldingRegistersRequest(System.Byte,System.Int32[])">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            read holding registers.
            * Request ID: Request ID of the corresponding request that is being answered.
            * Holding Registers: Data that is to be sent to the Modbus master for the corresponding request.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveReadHoldingRegistersRequestCallback" />
            callback with the Request ID as provided by the argument of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleCoils(System.Byte,System.Int64,System.Boolean[])">
            <summary>
            In Modbus master mode this function can be used to write multiple coils of a slave.
            This function creates a Modbus function code 15 request.
            * Slave Address: Address of the target Modbus slave.
            * Starting Address: Starting address of the write.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleCoilsResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be matched
            with the Request ID returned from this function to verify that the callback is indeed for a
            particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleRegisters(System.Byte,System.Int64,System.Int32[])">
            <summary>
            In Modbus master mode this function can be used to write multiple registers of a slave.
            This function creates a Modbus function code 16 request.
            * Slave Address: Address of the target Modbus slave.
            * Starting Address: Starting Address of the write.
            Upon success the function will return a non-zero request ID which will represent
            the current request initiated by the Modbus master. In case of failure the returned
            request ID will be 0.
            When successful this function will also invoke the <see cref="E:Tinkerforge.BrickletRS485.ModbusMasterWriteMultipleRegistersResponseCallback" />
            callback. In this callback the Request ID provided by the callback argument must be matched
            with the Request ID returned from this function to verify that the callback is indeed for a
            particular request.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadDiscreteInputsRequest(System.Byte,System.Boolean[])">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            read discrete inputs.
            * Request ID: Request ID of the corresponding request that is being answered.
            * Discrete Inputs: Data that is to be sent to the Modbus master for the corresponding request.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveReadDiscreteInputsRequestCallback" />
            callback with the Request ID as provided by the argument of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.ModbusSlaveAnswerReadInputRegistersRequest(System.Byte,System.Int32[])">
            <summary>
            In Modbus slave mode this function can be used to answer a master request to
            read input registers.
            * Request ID: Request ID of the corresponding request that is being answered.
            * Input Registers: Data that is to be sent to the Modbus master for the corresponding request.
            This function must be called from the <see cref="E:Tinkerforge.BrickletRS485.ModbusSlaveReadInputRegistersRequestCallback" /> callback
            with the Request ID as provided by the argument of the callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnReadLowLevelCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnErrorCountCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusSlaveReadCoilsRequestCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusMasterReadCoilsResponseLowLevelCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusSlaveReadHoldingRegistersRequestCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusMasterReadHoldingRegistersResponseLowLevelCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusSlaveWriteSingleCoilRequestCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusMasterWriteSingleCoilResponseCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusSlaveWriteSingleRegisterRequestCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusMasterWriteSingleRegisterResponseCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusSlaveWriteMultipleCoilsRequestLowLevelCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusMasterWriteMultipleCoilsResponseCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusSlaveWriteMultipleRegistersRequestLowLevelCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusMasterWriteMultipleRegistersResponseCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusSlaveReadDiscreteInputsRequestCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusMasterReadDiscreteInputsResponseLowLevelCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusSlaveReadInputRegistersRequestCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletRS485.OnModbusMasterReadInputRegistersResponseLowLevelCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletSegmentDisplay4x7">
            <summary>
            Four 7-segment displays with switchable colon
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSegmentDisplay4x7.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSegmentDisplay4x7.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSegmentDisplay4x7.FUNCTION_SET_SEGMENTS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSegmentDisplay4x7.FUNCTION_GET_SEGMENTS">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSegmentDisplay4x7.FUNCTION_START_COUNTER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSegmentDisplay4x7.FUNCTION_GET_COUNTER_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSegmentDisplay4x7.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletSegmentDisplay4x7.CounterFinishedCallback">
            <summary>
            This callback is triggered when the counter (see <see cref="M:Tinkerforge.BrickletSegmentDisplay4x7.StartCounter(System.Int16,System.Int16,System.Int16,System.Int64)" />) is
            finished.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletSegmentDisplay4x7.CounterFinishedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletSegmentDisplay4x7.CounterFinished">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSegmentDisplay4x7.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSegmentDisplay4x7.SetSegments(System.Byte[],System.Byte,System.Boolean)">
            <summary>
            The 7-segment display can be set with bitmaps. Every bit controls one
            segment:
            .. image:: /Images/Bricklets/bricklet_segment_display_4x7_bit_order.png
            :scale: 100 %
            :alt: Bit order of one segment
            :align: center
            For example to set a "5" you would want to activate segments 0, 2, 3, 5 and 6.
            This is represented by the number 0b01101101 = 0x6d = 109.
            The brightness can be set between 0 (dark) and 7 (bright). The colon
            parameter turns the colon of the display on or off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSegmentDisplay4x7.GetSegments(System.Byte[]@,System.Byte@,System.Boolean@)">
            <summary>
            Returns the segment, brightness and color data as set by
            <see cref="M:Tinkerforge.BrickletSegmentDisplay4x7.SetSegments(System.Byte[],System.Byte,System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSegmentDisplay4x7.StartCounter(System.Int16,System.Int16,System.Int16,System.Int64)">
            <summary>
            Starts a counter with the *from* value that counts to the *to*
            value with the each step incremented by *increment*.
            The *length* of the increment is given in ms.
            Example: If you set *from* to 0, *to* to 100, *increment* to 1 and
            *length* to 1000, a counter that goes from 0 to 100 with one second
            pause between each increment will be started.
            The maximum values for *from*, *to* and *increment* is 9999,
            the minimum value is -999.
            Using a negative increment allows to count backwards.
            You can stop the counter at every time by calling <see cref="M:Tinkerforge.BrickletSegmentDisplay4x7.SetSegments(System.Byte[],System.Byte,System.Boolean)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSegmentDisplay4x7.GetCounterValue">
            <summary>
            Returns the counter value that is currently shown on the display.
            If there is no counter running a 0 will be returned.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSegmentDisplay4x7.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSegmentDisplay4x7.OnCounterFinishedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletSolidStateRelay">
            <summary>
            Controls AC and DC Solid State Relays
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSolidStateRelay.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSolidStateRelay.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSolidStateRelay.FUNCTION_SET_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSolidStateRelay.FUNCTION_GET_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSolidStateRelay.FUNCTION_SET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSolidStateRelay.FUNCTION_GET_MONOFLOP">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSolidStateRelay.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletSolidStateRelay.MonoflopDoneCallback">
            <summary>
            This callback is triggered whenever the monoflop timer reaches 0.
            The parameter is the current state of the relay
            (the state after the monoflop).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletSolidStateRelay.MonoflopDoneEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletSolidStateRelay.MonoflopDone">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSolidStateRelay.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSolidStateRelay.SetState(System.Boolean)">
            <summary>
            Sets the state of the relays *true* means on and *false* means off.
            Running monoflop timers will be overwritten if this function is called.
            The default value is *false*.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSolidStateRelay.GetState">
            <summary>
            Returns the state of the relay, *true* means on and *false* means off.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSolidStateRelay.SetMonoflop(System.Boolean,System.Int64)">
            <summary>
            The first parameter  is the desired state of the relay (*true* means on
            and *false* means off). The second parameter indicates the time (in ms) that
            the relay should hold the state.
            If this function is called with the parameters (true, 1500):
            The relay will turn on and in 1.5s it will turn off again.
            A monoflop can be used as a failsafe mechanism. For example: Lets assume you
            have a RS485 bus and a Solid State Relay Bricklet connected to one of the slave
            stacks. You can now call this function every second, with a time parameter
            of two seconds. The relay will be on all the time. If now the RS485
            connection is lost, the relay will turn off in at most two seconds.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSolidStateRelay.GetMonoflop(System.Boolean@,System.Int64@,System.Int64@)">
            <summary>
            Returns the current state and the time as set by
            <see cref="M:Tinkerforge.BrickletSolidStateRelay.SetMonoflop(System.Boolean,System.Int64)" /> as well as the remaining time until the state flips.
            If the timer is not running currently, the remaining time will be returned
            as 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSolidStateRelay.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSolidStateRelay.OnMonoflopDoneCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletSoundIntensity">
            <summary>
            Measures sound intensity
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.FUNCTION_GET_INTENSITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.FUNCTION_SET_INTENSITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.FUNCTION_GET_INTENSITY_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.FUNCTION_SET_INTENSITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.FUNCTION_GET_INTENSITY_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletSoundIntensity.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletSoundIntensity.IntensityCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletSoundIntensity.SetIntensityCallbackPeriod(System.Int64)" />. The parameter is the intensity
            of the sensor.
            The <see cref="E:Tinkerforge.BrickletSoundIntensity.IntensityCallback" /> callback is only triggered if the intensity has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletSoundIntensity.IntensityEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletSoundIntensity.Intensity">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletSoundIntensity.IntensityReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletSoundIntensity.SetIntensityCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the intensity of the encoder.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletSoundIntensity.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletSoundIntensity.IntensityReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletSoundIntensity.IntensityReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.GetIntensity">
            <summary>
            Returns the current sound intensity. The value has a range of
            0 to 4095.
            The value corresponds to the
            `upper envelop &lt;https://en.wikipedia.org/wiki/Envelope_(waves)&gt;`__
            of the signal of the microphone capsule.
            If you want to get the intensity periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletSoundIntensity.IntensityCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletSoundIntensity.SetIntensityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.SetIntensityCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletSoundIntensity.IntensityCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletSoundIntensity.IntensityCallback" /> callback is only triggered if the intensity has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.GetIntensityCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletSoundIntensity.SetIntensityCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.SetIntensityCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletSoundIntensity.IntensityReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the intensity is *outside* the min and max values"
            "'i'",    "Callback is triggered when the intensity is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the intensity is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the intensity is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.GetIntensityCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletSoundIntensity.SetIntensityCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletSoundIntensity.IntensityReachedCallback" />
            is triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletSoundIntensity.SetIntensityCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletSoundIntensity.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.OnIntensityCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletSoundIntensity.OnIntensityReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTemperature">
            <summary>
            Measures ambient temperature with 0.5°C accuracy
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_GET_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_SET_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_GET_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_SET_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_GET_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_SET_I2C_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_GET_I2C_MODE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.I2C_MODE_FAST">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperature.I2C_MODE_SLOW">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperature.TemperatureCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletTemperature.SetTemperatureCallbackPeriod(System.Int64)" />. The parameter is the
            temperature of the sensor.
            The <see cref="E:Tinkerforge.BrickletTemperature.TemperatureCallback" /> callback is only triggered if the temperature has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTemperature.TemperatureEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperature.Temperature">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperature.TemperatureReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletTemperature.SetTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)" /> is reached.
            The parameter is the temperature of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletTemperature.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTemperature.TemperatureReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperature.TemperatureReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.GetTemperature">
            <summary>
            Returns the temperature of the sensor. The value
            has a range of -2500 to 8500 and is given in °C/100,
            e.g. a value of 4223 means that a temperature of 42.23 °C is measured.
            If you want to get the temperature periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletTemperature.TemperatureCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletTemperature.SetTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.SetTemperatureCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletTemperature.TemperatureCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletTemperature.TemperatureCallback" /> callback is only triggered if the temperature has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.GetTemperatureCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletTemperature.SetTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.SetTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletTemperature.TemperatureReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the temperature is *outside* the min and max values"
            "'i'",    "Callback is triggered when the temperature is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the temperature is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the temperature is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.GetTemperatureCallbackThreshold(System.Char@,System.Int16@,System.Int16@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletTemperature.SetTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletTemperature.TemperatureReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletTemperature.SetTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletTemperature.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.SetI2CMode(System.Byte)">
            <summary>
            Sets the I2C mode. Possible modes are:
            * 0: Fast (400kHz, default)
            * 1: Slow (100kHz)
            If you have problems with obvious outliers in the
            Temperature Bricklet measurements, they may be caused by EMI issues.
            In this case it may be helpful to lower the I2C speed.
            It is however not recommended to lower the I2C speed in applications where
            a high throughput needs to be achieved.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.GetI2CMode">
            <summary>
            Returns the I2C mode as set by <see cref="M:Tinkerforge.BrickletTemperature.SetI2CMode(System.Byte)" />.
            .. versionadded:: 2.0.1$nbsp;(Plugin)
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.OnTemperatureCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperature.OnTemperatureReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTemperatureIR">
            <summary>
            Measures contactless object temperature between -70°C and +380°C
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_GET_AMBIENT_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_GET_OBJECT_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_SET_EMISSIVITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_GET_EMISSIVITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_SET_AMBIENT_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_GET_AMBIENT_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_SET_OBJECT_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_GET_OBJECT_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_SET_AMBIENT_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_GET_AMBIENT_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_SET_OBJECT_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_GET_OBJECT_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTemperatureIR.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletTemperatureIR.SetAmbientTemperatureCallbackPeriod(System.Int64)" />. The parameter is the
            ambient temperature of the sensor.
            The <see cref="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureCallback" /> callback is only triggered if the ambient
            temperature has changed since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperature">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletTemperatureIR.SetObjectTemperatureCallbackPeriod(System.Int64)" />. The parameter is the
            object temperature of the sensor.
            The <see cref="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureCallback" /> callback is only triggered if the object
            temperature has changed since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperature">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletTemperatureIR.SetAmbientTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)" /> is reached.
            The parameter is the ambient temperature of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletTemperatureIR.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletTemperatureIR.SetObjectTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)" /> is reached.
            The parameter is the object temperature of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletTemperatureIR.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.GetAmbientTemperature">
            <summary>
            Returns the ambient temperature of the sensor. The value
            has a range of -400 to 1250 and is given in °C/10,
            e.g. a value of 423 means that an ambient temperature of 42.3 °C is
            measured.
            If you want to get the ambient temperature periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletTemperatureIR.SetAmbientTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.GetObjectTemperature">
            <summary>
            Returns the object temperature of the sensor, i.e. the temperature
            of the surface of the object the sensor is aimed at. The value
            has a range of -700 to 3800 and is given in °C/10,
            e.g. a value of 3001 means that a temperature of 300.1 °C is measured
            on the surface of the object.
            The temperature of different materials is dependent on their `emissivity
            &lt;https://en.wikipedia.org/wiki/Emissivity&gt;`__. The emissivity of the material
            can be set with <see cref="M:Tinkerforge.BrickletTemperatureIR.SetEmissivity(System.Int32)" />.
            If you want to get the object temperature periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletTemperatureIR.SetObjectTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.SetEmissivity(System.Int32)">
            <summary>
            Sets the `emissivity &lt;https://en.wikipedia.org/wiki/Emissivity&gt;`__ that is
            used to calculate the surface temperature as returned by
            <see cref="M:Tinkerforge.BrickletTemperatureIR.GetObjectTemperature" />.
            The emissivity is usually given as a value between 0.0 and 1.0. A list of
            emissivities of different materials can be found
            `here &lt;http://www.infrared-thermography.com/material.htm&gt;`__.
            The parameter of <see cref="M:Tinkerforge.BrickletTemperatureIR.SetEmissivity(System.Int32)" /> has to be given with a factor of
            65535 (16-bit). For example: An emissivity of 0.1 can be set with the
            value 6553, an emissivity of 0.5 with the value 32767 and so on.
            <note>
            If you need a precise measurement for the object temperature, it is
            absolutely crucial that you also provide a precise emissivity.
            </note>
            The default emissivity is 1.0 (value of 65535) and the minimum emissivity the
            sensor can handle is 0.1 (value of 6553).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.GetEmissivity">
            <summary>
            Returns the emissivity as set by <see cref="M:Tinkerforge.BrickletTemperatureIR.SetEmissivity(System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.SetAmbientTemperatureCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureCallback" /> callback is
            triggered periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureCallback" /> callback is only triggered if the temperature has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.GetAmbientTemperatureCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletTemperatureIR.SetAmbientTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.SetObjectTemperatureCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureCallback" /> callback is
            triggered periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureCallback" /> callback is only triggered if the temperature
            has changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.GetObjectTemperatureCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletTemperatureIR.SetObjectTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.SetAmbientTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the ambient temperature is *outside* the min and max values"
            "'i'",    "Callback is triggered when the ambient temperature is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the ambient temperature is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the ambient temperature is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.GetAmbientTemperatureCallbackThreshold(System.Char@,System.Int16@,System.Int16@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletTemperatureIR.SetAmbientTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.SetObjectTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the object temperature is *outside* the min and max values"
            "'i'",    "Callback is triggered when the object temperature is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the object temperature is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the object temperature is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.GetObjectTemperatureCallbackThreshold(System.Char@,System.Int16@,System.Int16@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletTemperatureIR.SetObjectTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletTemperatureIR.AmbientTemperatureReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletTemperatureIR.ObjectTemperatureReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletTemperatureIR.SetAmbientTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)" />,
            * <see cref="M:Tinkerforge.BrickletTemperatureIR.SetObjectTemperatureCallbackThreshold(System.Char,System.Int16,System.Int16)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletTemperatureIR.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.OnAmbientTemperatureCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.OnObjectTemperatureCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.OnAmbientTemperatureReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTemperatureIR.OnObjectTemperatureReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletThermocouple">
            <summary>
            Measures temperature with thermocouples
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_GET_TEMPERATURE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_SET_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_GET_TEMPERATURE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_SET_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_GET_TEMPERATURE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_GET_ERROR_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.AVERAGING_1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.AVERAGING_2">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.AVERAGING_4">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.AVERAGING_8">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.AVERAGING_16">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_B">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_E">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_J">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_K">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_N">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_R">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_S">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_T">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_G8">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.TYPE_G32">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FILTER_OPTION_50HZ">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletThermocouple.FILTER_OPTION_60HZ">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletThermocouple.TemperatureCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletThermocouple.SetTemperatureCallbackPeriod(System.Int64)" />. The parameter is the
            temperature of the thermocouple.
            The <see cref="E:Tinkerforge.BrickletThermocouple.TemperatureCallback" /> callback is only triggered if the temperature has
            changed since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletThermocouple.TemperatureEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletThermocouple.Temperature">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletThermocouple.TemperatureReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletThermocouple.SetTemperatureCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the temperature of the thermocouple.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletThermocouple.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletThermocouple.TemperatureReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletThermocouple.TemperatureReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletThermocouple.ErrorStateCallback">
            <summary>
            This Callback is triggered every time the error state changes
            (see func:`GetErrorStatus`).
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletThermocouple.ErrorStateEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletThermocouple.ErrorState">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.GetTemperature">
            <summary>
            Returns the temperature of the thermocouple. The value is given in °C/100,
            e.g. a value of 4223 means that a temperature of 42.23 °C is measured.
            If you want to get the temperature periodically, it is recommended
            to use the <see cref="E:Tinkerforge.BrickletThermocouple.TemperatureCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletThermocouple.SetTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.SetTemperatureCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletThermocouple.TemperatureCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletThermocouple.TemperatureCallback" /> callback is only triggered if the temperature has changed
            since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.GetTemperatureCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletThermocouple.SetTemperatureCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.SetTemperatureCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletThermocouple.TemperatureReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the temperature is *outside* the min and max values"
            "'i'",    "Callback is triggered when the temperature is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the temperature is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the temperature is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.GetTemperatureCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletThermocouple.SetTemperatureCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callback
            * <see cref="E:Tinkerforge.BrickletThermocouple.TemperatureReachedCallback" />
            is triggered, if the threshold
            * <see cref="M:Tinkerforge.BrickletThermocouple.SetTemperatureCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keeps being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletThermocouple.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.SetConfiguration(System.Byte,System.Byte,System.Byte)">
            <summary>
            You can configure averaging size, thermocouple type and frequency
            filtering.
            Available averaging sizes are 1, 2, 4, 8 and 16 samples.
            As thermocouple type you can use B, E, J, K, N, R, S and T. If you have a
            different thermocouple or a custom thermocouple you can also use
            G8 and G32. With these types the returned value will not be in °C/100,
            it will be calculated by the following formulas:
            * G8: ``value = 8 * 1.6 * 2^17 * Vin``
            * G32: ``value = 32 * 1.6 * 2^17 * Vin``
            where Vin is the thermocouple input voltage.
            The frequency filter can be either configured to 50Hz or to 60Hz. You should
            configure it according to your utility frequency.
            The conversion time depends on the averaging and filter configuration, it can
            be calculated as follows:
            * 60Hz: ``time = 82 + (samples - 1) * 16.67``
            * 50Hz: ``time = 98 + (samples - 1) * 20``
            The default configuration is 16 samples, K type and 50Hz.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.GetConfiguration(System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletThermocouple.SetConfiguration(System.Byte,System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.GetErrorState(System.Boolean@,System.Boolean@)">
            <summary>
            Returns the current error state. There are two possible errors:
            * Over/Under Voltage and
            * Open Circuit.
            Over/Under Voltage happens for voltages below 0V or above 3.3V. In this case
            it is very likely that your thermocouple is defective. An Open Circuit error
            indicates that there is no thermocouple connected.
            You can use the func:`ErrorState` callback to automatically get triggered
            when the error state changes.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.OnTemperatureCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.OnTemperatureReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletThermocouple.OnErrorStateCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTilt">
            <summary>
            Detects inclination of Bricklet (tilt switch open/closed)
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.FUNCTION_GET_TILT_STATE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.FUNCTION_ENABLE_TILT_STATE_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.FUNCTION_DISABLE_TILT_STATE_CALLBACK">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.FUNCTION_IS_TILT_STATE_CALLBACK_ENABLED">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.TILT_STATE_CLOSED">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.TILT_STATE_OPEN">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletTilt.TILT_STATE_CLOSED_VIBRATING">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTilt.TiltStateCallback">
            <summary>
            This callback provides the current tilt state. It is called every time the
            state changes.
            See <see cref="M:Tinkerforge.BrickletTilt.GetTiltState" /> for a description of the states.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletTilt.TiltStateEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletTilt.TiltState">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTilt.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTilt.GetTiltState">
            <summary>
            Returns the current tilt state. The state can either be
            * 0 = Closed: The ball in the tilt switch closes the circuit.
            * 1 = Open: The ball in the tilt switch does not close the circuit.
            * 2 = Closed Vibrating: The tilt switch is in motion (rapid change between open and close).
            .. image:: /Images/Bricklets/bricklet_tilt_mechanics.jpg
            :scale: 100 %
            :alt: Tilt states
            :align: center
            :target: ../../_images/Bricklets/bricklet_tilt_mechanics.jpg
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTilt.EnableTiltStateCallback">
            <summary>
            Enables the <see cref="E:Tinkerforge.BrickletTilt.TiltStateCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTilt.DisableTiltStateCallback">
            <summary>
            Disables the <see cref="E:Tinkerforge.BrickletTilt.TiltStateCallback" /> callback.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTilt.IsTiltStateCallbackEnabled">
            <summary>
            Returns *true* if the <see cref="E:Tinkerforge.BrickletTilt.TiltStateCallback" /> callback is enabled.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTilt.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletTilt.OnTiltStateCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletUVLight">
            <summary>
            Measures UV light
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.FUNCTION_GET_UV_LIGHT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.FUNCTION_SET_UV_LIGHT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.FUNCTION_GET_UV_LIGHT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.FUNCTION_SET_UV_LIGHT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.FUNCTION_GET_UV_LIGHT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletUVLight.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletUVLight.UVLightCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletUVLight.SetUVLightCallbackPeriod(System.Int64)" />. The parameter is the UV Light
            intensity of the sensor.
            The <see cref="E:Tinkerforge.BrickletUVLight.UVLightCallback" /> callback is only triggered if the intensity has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletUVLight.UVLightEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletUVLight.UVLight">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletUVLight.UVLightReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletUVLight.SetUVLightCallbackThreshold(System.Char,System.Int64,System.Int64)" /> is reached.
            The parameter is the UV Light intensity of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletUVLight.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletUVLight.UVLightReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletUVLight.UVLightReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.GetUVLight">
            <summary>
            Returns the UV light intensity of the sensor, the intensity is given
            in µW/cm².
            To get UV Index you have to divide the value by 250. For example, a UV Light
            intensity of 500µW/cm² is equivalent to an UV Index of 2.
            If you want to get the intensity periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletUVLight.UVLightCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletUVLight.SetUVLightCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.SetUVLightCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletUVLight.UVLightCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletUVLight.UVLightCallback" /> callback is only triggered if the intensity has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.GetUVLightCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletUVLight.SetUVLightCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.SetUVLightCallbackThreshold(System.Char,System.Int64,System.Int64)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletUVLight.UVLightReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the intensity is *outside* the min and max values"
            "'i'",    "Callback is triggered when the intensity is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the intensity is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the intensity is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.GetUVLightCallbackThreshold(System.Char@,System.Int64@,System.Int64@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletUVLight.SetUVLightCallbackThreshold(System.Char,System.Int64,System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletUVLight.UVLightReachedCallback" />,
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletUVLight.SetUVLightCallbackThreshold(System.Char,System.Int64,System.Int64)" />,
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletUVLight.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.OnUVLightCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletUVLight.OnUVLightReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltage">
            <summary>
            Measures DC voltage between 0V and 50V
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_GET_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_GET_ANALOG_VALUE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_SET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_GET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_SET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_GET_ANALOG_VALUE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_SET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_GET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_SET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_GET_ANALOG_VALUE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltage.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltage.VoltageCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletVoltage.SetVoltageCallbackPeriod(System.Int64)" />. The parameter is the voltage of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletVoltage.VoltageCallback" /> callback is only triggered if the voltage has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltage.VoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltage.Voltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltage.AnalogValueCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletVoltage.SetAnalogValueCallbackPeriod(System.Int64)" />. The parameter is the
            analog value of the sensor.
            The <see cref="E:Tinkerforge.BrickletVoltage.AnalogValueCallback" /> callback is only triggered if the voltage has changed
            since the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltage.AnalogValueEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltage.AnalogValue">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltage.VoltageReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletVoltage.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the voltage of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletVoltage.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltage.VoltageReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltage.VoltageReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltage.AnalogValueReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletVoltage.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the analog value of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletVoltage.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltage.AnalogValueReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltage.AnalogValueReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.GetVoltage">
            <summary>
            Returns the voltage of the sensor. The value is in mV and
            between 0mV and 50000mV.
            If you want to get the voltage periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletVoltage.VoltageCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletVoltage.SetVoltageCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.GetAnalogValue">
            <summary>
            Returns the value as read by a 12-bit analog-to-digital converter.
            The value is between 0 and 4095.
            <note>
            The value returned by <see cref="M:Tinkerforge.BrickletVoltage.GetVoltage" /> is averaged over several samples
            to yield less noise, while <see cref="M:Tinkerforge.BrickletVoltage.GetAnalogValue" /> gives back raw
            unfiltered analog values. The only reason to use <see cref="M:Tinkerforge.BrickletVoltage.GetAnalogValue" /> is,
            if you need the full resolution of the analog-to-digital converter.
            </note>
            If you want the analog value periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletVoltage.AnalogValueCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletVoltage.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.SetVoltageCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletVoltage.VoltageCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletVoltage.VoltageCallback" /> callback is only triggered if the voltage has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.GetVoltageCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletVoltage.SetVoltageCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.SetAnalogValueCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletVoltage.AnalogValueCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletVoltage.AnalogValueCallback" /> callback is only triggered if the analog value has
            changed since the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.GetAnalogValueCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletVoltage.SetAnalogValueCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletVoltage.VoltageReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the voltage is *outside* the min and max values"
            "'i'",    "Callback is triggered when the voltage is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the voltage is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the voltage is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.GetVoltageCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletVoltage.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletVoltage.AnalogValueReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the analog value is *outside* the min and max values"
            "'i'",    "Callback is triggered when the analog value is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the analog value is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the analog value is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.GetAnalogValueCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletVoltage.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletVoltage.VoltageReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletVoltage.AnalogValueReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletVoltage.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletVoltage.SetAnalogValueCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletVoltage.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.OnVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.OnAnalogValueCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.OnVoltageReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltage.OnAnalogValueReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltageCurrent">
            <summary>
            Measures power, DC voltage and DC current up to 720W/36V/20A
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.DEVICE_IDENTIFIER">
            <summary>
            Used to identify this device type in
            <see cref="E:Tinkerforge.IPConnection.EnumerateCallback" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.DEVICE_DISPLAY_NAME">
            <summary>
            The display name of this device.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_CURRENT">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_VOLTAGE">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_POWER">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_SET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_CONFIGURATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_SET_CALIBRATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_CALIBRATION">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_SET_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_CURRENT_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_SET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_VOLTAGE_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_SET_POWER_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_POWER_CALLBACK_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_SET_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_CURRENT_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_SET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_VOLTAGE_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_SET_POWER_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_POWER_CALLBACK_THRESHOLD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_SET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_DEBOUNCE_PERIOD">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.FUNCTION_GET_IDENTITY">
            <summary>
            Function ID to be used with
            <see cref="M:Tinkerforge.Device.GetResponseExpected(System.Byte)" />,
            <see cref="M:Tinkerforge.Device.SetResponseExpected(System.Byte,System.Boolean)" /> and
            <see cref="M:Tinkerforge.Device.SetResponseExpectedAll(System.Boolean)" />.
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.AVERAGING_1">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.AVERAGING_4">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.AVERAGING_16">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.AVERAGING_64">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.AVERAGING_128">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.AVERAGING_256">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.AVERAGING_512">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.AVERAGING_1024">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.THRESHOLD_OPTION_OFF">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.THRESHOLD_OPTION_OUTSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.THRESHOLD_OPTION_INSIDE">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.THRESHOLD_OPTION_SMALLER">
            <summary>
            </summary>
        </member>
        <member name="F:Tinkerforge.BrickletVoltageCurrent.THRESHOLD_OPTION_GREATER">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.CurrentCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetCurrentCallbackPeriod(System.Int64)" />. The parameter is the current of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletVoltageCurrent.CurrentCallback" /> callback is only triggered if the current has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltageCurrent.CurrentEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.Current">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.VoltageCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetVoltageCallbackPeriod(System.Int64)" />. The parameter is the voltage of
            the sensor.
            The <see cref="E:Tinkerforge.BrickletVoltageCurrent.VoltageCallback" /> callback is only triggered if the voltage has changed since
            the last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltageCurrent.VoltageEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.Voltage">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.PowerCallback">
            <summary>
            This callback is triggered periodically with the period that is set by
            <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetPowerCallbackPeriod(System.Int64)" />. The parameter is the power of the
            sensor.
            The <see cref="E:Tinkerforge.BrickletVoltageCurrent.PowerCallback" /> callback is only triggered if the power has changed since the
            last triggering.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltageCurrent.PowerEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.Power">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.CurrentReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetCurrentCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the current of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltageCurrent.CurrentReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.CurrentReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.VoltageReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the voltage of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltageCurrent.VoltageReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.VoltageReached">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.PowerReachedCallback">
            <summary>
            This callback is triggered when the threshold as set by
            <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetPowerCallbackThreshold(System.Char,System.Int32,System.Int32)" /> is reached.
            The parameter is the power of the sensor.
            If the threshold keeps being reached, the callback is triggered periodically
            with the period as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="T:Tinkerforge.BrickletVoltageCurrent.PowerReachedEventHandler">
            <summary>
            </summary>
        </member>
        <member name="E:Tinkerforge.BrickletVoltageCurrent.PowerReached">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.#ctor(System.String,Tinkerforge.IPConnection)">
            <summary>
            Creates an object with the unique device ID <c>uid</c> and adds  it to
            the IPConnection <c>ipcon</c>.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetCurrent">
            <summary>
            Returns the current. The value is in mA
            and between -20000mA and 20000mA.
            If you want to get the current periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletVoltageCurrent.CurrentCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetCurrentCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetVoltage">
            <summary>
            Returns the voltage. The value is in mV
            and between 0mV and 36000mV.
            If you want to get the voltage periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletVoltageCurrent.VoltageCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetVoltageCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetPower">
            <summary>
            Returns the power. The value is in mW
            and between 0mV and 720000mW.
            If you want to get the power periodically, it is recommended to use the
            <see cref="E:Tinkerforge.BrickletVoltageCurrent.PowerCallback" /> callback and set the period with
            <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetPowerCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.SetConfiguration(System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the configuration of the Voltage/Current Bricklet. It is
            possible to configure number of averages as well as
            voltage and current conversion time.
            Averaging:
            <code>
            "Value", "Number of Averages"
            "0",    "1"
            "1",    "4"
            "2",    "16"
            "3",    "64"
            "4",    "128"
            "5",    "256"
            "6",    "512"
            "&gt;=7",  "1024"
            </code>
            Voltage/Current conversion:
            <code>
            "Value", "Conversion time"
            "0",    "140µs"
            "1",    "204µs"
            "2",    "332µs"
            "3",    "588µs"
            "4",    "1.1ms"
            "5",    "2.116ms"
            "6",    "4.156ms"
            "&gt;=7",  "8.244ms"
            </code>
            The default values are 3, 4 and 4 (64, 1.1ms, 1.1ms) for averaging, voltage
            conversion and current conversion.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetConfiguration(System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the configuration as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetConfiguration(System.Byte,System.Byte,System.Byte)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.SetCalibration(System.Int32,System.Int32)">
            <summary>
            Since the shunt resistor that is used to measure the current is not
            perfectly precise, it needs to be calibrated by a multiplier and
            divisor if a very precise reading is needed.
            For example, if you are expecting a measurement of 1000mA and you
            are measuring 1023mA, you can calibrate the Voltage/Current Bricklet
            by setting the multiplier to 1000 and the divisor to 1023.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetCalibration(System.Int32@,System.Int32@)">
            <summary>
            Returns the calibration as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetCalibration(System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.SetCurrentCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletVoltageCurrent.CurrentCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletVoltageCurrent.CurrentCallback" /> callback is only triggered if the current has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetCurrentCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetCurrentCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.SetVoltageCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletVoltageCurrent.VoltageCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletVoltageCurrent.VoltageCallback" /> callback is only triggered if the voltage has changed since
            the last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetVoltageCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetVoltageCallbackPeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.SetPowerCallbackPeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the <see cref="E:Tinkerforge.BrickletVoltageCurrent.PowerCallback" /> callback is triggered
            periodically. A value of 0 turns the callback off.
            The <see cref="E:Tinkerforge.BrickletVoltageCurrent.PowerCallback" /> callback is only triggered if the power has changed since the
            last triggering.
            The default value is 0.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetPowerCallbackPeriod">
            <summary>
            Returns the period as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.GetPowerCallbackPeriod" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.SetCurrentCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletVoltageCurrent.CurrentReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the current is *outside* the min and max values"
            "'i'",    "Callback is triggered when the current is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the current is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the current is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetCurrentCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetCurrentCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletVoltageCurrent.VoltageReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the voltage is *outside* the min and max values"
            "'i'",    "Callback is triggered when the voltage is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the voltage is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the voltage is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetVoltageCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.SetPowerCallbackThreshold(System.Char,System.Int32,System.Int32)">
            <summary>
            Sets the thresholds for the <see cref="E:Tinkerforge.BrickletVoltageCurrent.PowerReachedCallback" /> callback.
            The following options are possible:
            <code>
            "Option", "Description"
            "'x'",    "Callback is turned off"
            "'o'",    "Callback is triggered when the power is *outside* the min and max values"
            "'i'",    "Callback is triggered when the power is *inside* the min and max values"
            "'&lt;'",    "Callback is triggered when the power is smaller than the min value (max is ignored)"
            "'&gt;'",    "Callback is triggered when the power is greater than the min value (max is ignored)"
            </code>
            The default value is ('x', 0, 0).
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetPowerCallbackThreshold(System.Char@,System.Int32@,System.Int32@)">
            <summary>
            Returns the threshold as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetPowerCallbackThreshold(System.Char,System.Int32,System.Int32)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.SetDebouncePeriod(System.Int64)">
            <summary>
            Sets the period in ms with which the threshold callbacks
            * <see cref="E:Tinkerforge.BrickletVoltageCurrent.CurrentReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletVoltageCurrent.VoltageReachedCallback" />,
            * <see cref="E:Tinkerforge.BrickletVoltageCurrent.PowerReachedCallback" />
            are triggered, if the thresholds
            * <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetCurrentCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetVoltageCallbackThreshold(System.Char,System.Int32,System.Int32)" />,
            * <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetPowerCallbackThreshold(System.Char,System.Int32,System.Int32)" />
            keep being reached.
            The default value is 100.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetDebouncePeriod">
            <summary>
            Returns the debounce period as set by <see cref="M:Tinkerforge.BrickletVoltageCurrent.SetDebouncePeriod(System.Int64)" />.
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.GetIdentity(System.String@,System.String@,System.Char@,System.Byte[]@,System.Byte[]@,System.Int32@)">
            <summary>
            Returns the UID, the UID where the Bricklet is connected to,
            the position, the hardware and firmware version as well as the
            device identifier.
            The position can be 'a', 'b', 'c' or 'd'.
            The device identifier numbers can be found :ref:`here &lt;device_identifier&gt;`.
            |device_identifier_constant|
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.OnCurrentCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.OnVoltageCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.OnPowerCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.OnCurrentReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.OnVoltageReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
        <member name="M:Tinkerforge.BrickletVoltageCurrent.OnPowerReachedCallback(System.Byte[])">
            <summary>
            </summary>
        </member>
    </members>
</doc>
